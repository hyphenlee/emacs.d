;; Object auto-complete/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete/"
  :tables (list 
   (semanticdb-table "auto-complete.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("ac-version" variable
               (:constant-flag t
                :default-value "1.4.0")
                nil [1359 1388])
            ("cl" include nil nil [1411 1424])
            ("popup" include nil nil [1427 1443])
            ("ac-error" function (:arguments ("var")) nil [1464 1648])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1673 1759])
            ("ac-delay" variable (:default-value 0.1) nil [1761 1868])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [1870 2109])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2111 2277])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2279 2434])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2436 2647])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2649 2793])
            ("ac-use-fuzzy" variable (:default-value (and (locate-library "fuzzy") t)) nil [2795 2931])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [2933 3044])
            ("ac-use-comphist" variable (:default-value t) nil [3046 3170])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3172 3298])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3300 3612])
            ("ac-user-dictionary" variable nil nil [3614 3725])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [3727 3842])
            ("defvaralias" code nil nil [3843 3903])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [3905 4295])
            ("ac-use-quick-help" variable (:default-value t) nil [4297 4403])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4405 4509])
            ("ac-menu-height" variable (:default-value 10) nil [4511 4615])
            ("defvaralias" code nil nil [4616 4671])
            ("ac-quick-help-height" variable (:default-value 20) nil [4673 4779])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [4781 4949])
            ("defvaralias" code nil nil [4950 5017])
            ("ac-candidate-limit" variable nil nil [5019 5154])
            ("defvaralias" code nil nil [5155 5206])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode ts-mode sclang-mode verilog-mode))) nil [5208 5844])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [5846 6002])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command))) nil [6004 6190])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6192 6376])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify autopair-backspace paredit-backward-delete paredit-backward-delete-word))) nil [6378 6754])
            ("ac-trigger-key" variable nil nil [6756 7289])
            ("ac-auto-start" variable (:default-value 2) nil [7291 7704])
            ("ac-stop-words" variable nil nil [7706 7823])
            ("defvaralias" code nil nil [7824 7864])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [7866 8032])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [8034 8370])
            ("ac-dwim" variable (:default-value t) nil [8372 8499])
            ("ac-use-menu-map" variable nil nil [8501 8655])
            ("ac-use-overriding-local-map" variable nil nil [8657 8848])
            ("ac-disable-inline" variable nil nil [8850 8973])
            ("ac-candidate-menu-min" variable (:default-value 1) nil [8975 9101])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [9103 9233])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [9235 9341])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:inherit popup-mouse-face))))
                :type "face")
                nil [9343 9467])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:inherit popup-menu-selection-face))))
                :type "face")
                nil [9469 9599])
            ("auto-complete-mode-hook" variable nil nil [9601 9672])
            ("auto-complete-mode" variable nil nil [9702 9783])
            ("ac-cursor-color" variable nil nil [9785 9835])
            ("ac-inline" variable nil nil [9837 9891])
            ("ac-menu" variable nil nil [9893 9932])
            ("ac-show-menu" variable nil nil [9934 9996])
            ("ac-last-completion" variable nil nil [9998 10093])
            ("ac-quick-help" variable nil nil [10095 10145])
            ("ac-completing" variable nil nil [10147 10242])
            ("ac-buffer" variable nil nil [10244 10309])
            ("ac-point" variable nil nil [10311 10359])
            ("ac-last-point" variable nil nil [10361 10423])
            ("ac-prefix" variable nil nil [10425 10466])
            ("defvaralias" code nil nil [10467 10502])
            ("ac-selected-candidate" variable nil nil [10504 10567])
            ("ac-common-part" variable nil nil [10569 10691])
            ("ac-whole-common-part" variable nil nil [10693 10816])
            ("ac-prefix-overlay" variable nil nil [10818 10879])
            ("ac-timer" variable nil nil [10881 10929])
            ("ac-show-menu-timer" variable nil nil [10931 10988])
            ("ac-quick-help-timer" variable nil nil [10990 11049])
            ("ac-triggered" variable nil nil [11051 11096])
            ("ac-limit" variable nil nil [11098 11168])
            ("ac-candidates" variable nil nil [11170 11220])
            ("ac-candidates-cache" variable nil nil [11222 11299])
            ("ac-fuzzy-enable" variable nil nil [11301 11374])
            ("ac-dwim-enable" variable nil nil [11376 11454])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [11456 11593])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map [return] (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-select-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [11595 12807])
            ("defvaralias" code nil nil [12808 12862])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map "" (quote ac-isearch)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [12864 13315])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [13317 13431])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [13433 13504])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref) (cc-member . ac-prefix-cc-member)))) nil [13506 13782])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [13784 13871])
            ("make-variable-buffer-local" code nil nil [13872 13912])
            ("ac-compiled-sources" variable nil nil [13914 13983])
            ("ac-current-sources" variable nil nil [13985 14087])
            ("ac-omni-completion-sources" variable nil nil [14089 14157])
            ("ac-current-prefix-def" variable nil nil [14159 14193])
            ("ac-ignoring-prefix-def" variable nil nil [14195 14230])
            ("ac-comphist" variable nil nil [14272 14332])
            ("ac-comphist-make-tab" function nil nil [14334 14401])
            ("ac-comphist-tab" function (:arguments ("db")) nil [14403 14447])
            ("ac-comphist-cache" function (:arguments ("db")) nil [14449 14495])
            ("ac-comphist-make" function (:arguments ("tab")) nil [14497 14621])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [14623 14882])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [14884 15177])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [15179 16328])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [16330 17242])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [17244 17413])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [17415 17781])
            ("ac-comphist-init" function nil nil [17783 17879])
            ("ac-comphist-load" function nil nil [17881 18270])
            ("ac-comphist-save" function nil nil [18272 18498])
            ("ac-buffer-dictionary" variable nil nil [18519 18552])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [18553 18611])
            ("ac-clear-dictionary-cache" function nil nil [18613 18869])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [18871 19278])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [19280 19662])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [19664 20112])
            ("ac-menu-at-wrapper-line-p" function nil nil [20149 20428])
            ("ac-stop-word-p" function (:arguments ("word")) nil [20430 20584])
            ("ac-prefix-default" function nil nil [20586 20909])
            ("ac-prefix-symbol" function nil nil [20911 21049])
            ("ac-prefix-file" function nil nil [21051 21181])
            ("ac-prefix-valid-file" function nil nil [21183 21791])
            ("ac-prefix-c-dot" function nil nil [21793 21963])
            ("ac-prefix-c-dot-ref" function nil nil [21965 22170])
            ("ac-prefix-cc-member" function nil nil [22172 22375])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [22377 22563])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [22565 22761])
            ("ac-source-entity" function (:arguments ("source")) nil [22763 22862])
            ("ac-source-available-p" function (:arguments ("source")) nil [22864 23765])
            ("ac-compile-sources" function (:arguments ("sources")) nil [23767 24505])
            ("ac-compiled-sources" function nil nil [24507 24641])
            ("ac-menu-live-p" function nil nil [24643 24696])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [24698 25165])
            ("ac-menu-delete" function nil nil [25167 25255])
            ("ac-inline-overlay" function nil nil [25257 25308])
            ("ac-inline-live-p" function nil nil [25310 25380])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [25382 27309])
            ("ac-inline-delete" function nil nil [27311 27453])
            ("ac-inline-hide" function nil nil [27455 27791])
            ("ac-inline-update" function nil nil [27793 28221])
            ("ac-put-prefix-overlay" function nil nil [28223 28729])
            ("ac-remove-prefix-overlay" function nil nil [28731 29046])
            ("ac-activate-completing-map" function nil nil [29048 29435])
            ("ac-deactivate-completing-map" function nil nil [29437 29777])
            ("ac-selected-candidate" function nil nil [29779 29865])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [29867 31466])
            ("ac-init" function nil nil [31468 31838])
            ("ac-candidates-1" function (:arguments ("source")) nil [31840 34074])
            ("ac-candidates" function nil nil [34076 35786])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [35788 36472])
            ("ac-reposition" function nil nil [36474 36834])
            ("ac-cleanup" function nil nil [36836 38289])
            ("ac-abort" function nil nil [38291 38350])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [38352 39823])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [39825 40209])
            ("ac-set-timer" function nil nil [40211 40332])
            ("ac-cancel-timer" function nil nil [40334 40439])
            ("ac-update" function (:arguments ("force")) nil [40441 41242])
            ("ac-update-greedy" function (:arguments ("force")) nil [41244 41560])
            ("ac-set-show-menu-timer" function nil nil [41562 41812])
            ("ac-cancel-show-menu-timer" function nil nil [41814 41959])
            ("ac-show-menu" function nil nil [41961 42111])
            ("ac-help" function (:arguments ("persist")) nil [42113 42228])
            ("ac-persist-help" function nil nil [42230 42286])
            ("ac-last-help" function (:arguments ("persist")) nil [42288 42436])
            ("ac-last-persist-help" function nil nil [42438 42504])
            ("ac-set-quick-help-timer" function nil nil [42506 42721])
            ("ac-cancel-quick-help-timer" function nil nil [42723 42872])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [42874 43846])
            ("ac-quick-help-use-pos-tip-p" function nil nil [43848 43971])
            ("ac-quick-help" function (:arguments ("force")) nil [43973 44697])
            ("ac-remove-quick-help" function nil nil [44699 44898])
            ("ac-last-quick-help" function nil nil [44900 45498])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [45500 45677])
            ("ac-define-quick-help-command" code nil nil [45679 45815])
            ("ac-define-quick-help-command" code nil nil [45817 45949])
            ("ac-isearch-callback" function (:arguments ("list")) nil [45984 46063])
            ("ac-isearch" function nil nil [46065 46610])
            ("auto-complete-1" function (:arguments ("sources" "triggered")) nil [46646 47631])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [47648 47786])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [47788 48319])
            ("ac-next" function (:user-visible-flag t) nil [48321 48558])
            ("ac-previous" function (:user-visible-flag t) nil [48560 48813])
            ("ac-expand" function (:user-visible-flag t) nil [48815 49396])
            ("ac-expand-common" function (:user-visible-flag t) nil [49398 49739])
            ("ac-complete-1" function (:arguments ("candidate")) nil [49741 50351])
            ("ac-complete" function (:user-visible-flag t) nil [50353 50451])
            ("ac-start" function
               (:user-visible-flag t
                :arguments ("requires" "force-init" "triggered"))
                nil [50453 51883])
            ("ac-stop" function (:user-visible-flag t) nil [51885 51989])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [51991 52061])
            ("ac-mouse-1" function (:arguments ("event")) nil [52063 52187])
            ("ac-mouse-4" function (:arguments ("event")) nil [52189 52251])
            ("ac-mouse-5" function (:arguments ("event")) nil [52253 52311])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [52313 52593])
            ("ac-clear-variables-every-minute-timer" variable nil nil [52625 52675])
            ("ac-clear-variables-after-save" variable nil nil [52676 52718])
            ("ac-clear-variables-every-minute" variable nil nil [52719 52763])
            ("ac-minutes-counter" variable nil nil [52764 52793])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [52795 52925])
            ("ac-clear-variables-after-save" function nil nil [52927 53109])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [53111 53242])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [53244 53340])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [53342 53443])
            ("ac-clear-variables-every-minute" function nil nil [53445 53644])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [53674 53797])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [53799 54145])
            ("ac-fallback-key-sequence" function nil nil [54147 54331])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [54333 54669])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [54671 54886])
            ("ac-handle-pre-command" function nil nil [54888 55822])
            ("ac-handle-post-command" function nil nil [55824 56213])
            ("ac-setup" function nil nil [56215 56749])
            ("define-minor-mode" code nil nil [56751 57392])
            ("auto-complete-mode-maybe" function nil nil [57394 57592])
            ("define-global-minor-mode" code nil nil [57594 57716])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [57765 58157])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [58159 58444])
            ("ac-define-source" function (:arguments ("name" "source")) nil [58472 59059])
            ("ac-word-index" variable nil nil [59087 59113])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [59115 60015])
            ("ac-incremental-update-word-index" function nil nil [60017 60568])
            ("ac-update-word-index-1" function nil nil [60570 60991])
            ("ac-update-word-index" function nil nil [60993 61207])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [61209 61803])
            ("ac-define-source" code nil nil [61805 61878])
            ("ac-define-source" code nil nil [61880 61991])
            ("ac-define-source" code nil nil [61993 62228])
            ("ac-symbols-cache" variable nil nil [62253 62282])
            ("ac-clear-variable-every-10-minutes" code nil nil [62283 62337])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [62339 63823])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [63825 65599])
            ("ac-symbol-candidates" function nil nil [65601 65887])
            ("ac-define-source" code nil nil [65889 66028])
            ("ac-functions-cache" variable nil nil [66055 66086])
            ("ac-clear-variable-every-10-minutes" code nil nil [66087 66143])
            ("ac-function-candidates" function nil nil [66145 66354])
            ("ac-define-source" code nil nil [66356 66544])
            ("ac-variables-cache" variable nil nil [66571 66602])
            ("ac-clear-variable-every-10-minutes" code nil nil [66603 66659])
            ("ac-variable-candidates" function nil nil [66661 66869])
            ("ac-define-source" code nil nil [66871 67014])
            ("ac-emacs-lisp-features" variable nil nil [67040 67075])
            ("ac-clear-variable-every-10-minutes" code nil nil [67076 67136])
            ("ac-emacs-lisp-feature-candidates" function nil nil [67138 67799])
            ("ac-define-source" code nil nil [67801 67978])
            ("defvaralias" code nil nil [67980 68044])
            ("ac-define-source" code nil nil [68063 68258])
            ("ac-define-source" code nil nil [68297 68404])
            ("ac-filename-cache" variable nil nil [68425 68455])
            ("ac-filename-candidate" function nil nil [68457 69218])
            ("ac-define-source" code nil nil [69220 69418])
            ("ac-define-source" code nil nil [69441 69530])
            ("auto-complete" package nil nil [69532 69556]))          
    :file "auto-complete.el"
    :pointmax 69588
    :fsize 69587
    :lastmodtime '(21005 34624 0 0)
    :unmatched-syntax '((close-paren 1424 . 1425) (symbol 1391 . 1408) (open-paren 1390 . 1391))
    )
   (semanticdb-table "auto-complete-config.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [911 924])
            ("auto-complete" include nil nil [927 951])
            ("ac-imenu-index" variable nil nil [991 1018])
            ("ac-clear-variable-every-10-minutes" code nil nil [1020 1072])
            ("ac-imenu-candidates" function nil nil [1074 2307])
            ("ac-define-source" code nil nil [2309 2412])
            ("ac-gtags-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :foreground "navy"))))
                :type "face")
                nil [2424 2567])
            ("ac-gtags-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "navy"))))
                :type "face")
                nil [2569 2726])
            ("ac-gtags-candidate" function nil nil [2728 2861])
            ("ac-define-source" code nil nil [2863 3058])
            ("ac-yasnippet-candidate-face" variable
               (:default-value (quote ((t (:inherit ac-candidate-face :background "sandybrown" :foreground "black"))))
                :type "face")
                nil [3074 3269])
            ("ac-yasnippet-selection-face" variable
               (:default-value (quote ((t (:inherit ac-selection-face :background "coral3"))))
                :type "face")
                nil [3271 3438])
            ("ac-yasnippet-table-hash" function (:arguments ("table")) nil [3440 3620])
            ("ac-yasnippet-table-parent" function (:arguments ("table")) nil [3622 3812])
            ("ac-yasnippet-candidate-1" function (:arguments ("table")) nil [3814 4309])
            ("ac-yasnippet-candidates" function nil nil [4311 5214])
            ("ac-define-source" code nil nil [5216 5459])
            ("ac-semantic-candidates" function (:arguments ("prefix")) nil [5474 5983])
            ("ac-semantic-doc" function (:arguments ("symbol")) nil [5985 6264])
            ("ac-define-source" code nil nil [6266 6546])
            ("ac-define-source" code nil nil [6548 6788])
            ("ac-eclim-candidates" function nil nil [6800 6921])
            ("ac-define-source" code nil nil [6923 7046])
            ("ac-css-property-alist" variable
               (:constant-flag t
                :default-value (quote (("azimuth" angle "left-side" "far-left" "left" "center-left" "center" "center-right" "right" "far-right" "right-side" "behind" "leftwards" "rightwards") ("background" background-color background-image background-repeat background-attachment background-position) ("background-attachment" "scroll" "fixed") ("background-color" color "transparent") ("background-image" uri "none") ("background-position" percentage length "left" "center" "right" percentage length "top" "center" "bottom" "left" "center" "right" "top" "center" "bottom") ("background-repeat" "repeat" "repeat-x" "repeat-y" "no-repeat") ("border" border-width border-style border-color) ("border-bottom" border) ("border-bottom-color" border-color) ("border-bottom-style" border-style) ("border-bottom-width" border-width) ("border-collapse" "collapse" "separate") ("border-color" color "transparent") ("border-left" border) ("border-left-color" border-color) ("border-left-style" border-style) ("border-left-width" border-width) ("border-right" border) ("border-right-color" border-color) ("border-right-style" border-style) ("border-right-width" border-width) ("border-spacing" length length) ("border-style" border-style) ("border-top" border) ("border-top-color" border-color) ("border-top-style" border-style) ("border-top-width" border-width) ("border-width" border-width) ("bottom" length percentage "auto") ("caption-side" "top" "bottom") ("clear" "none" "left" "right" "both") ("clip" shape "auto") ("color" color) ("content" "normal" "none" string uri counter "attr()" "open-quote" "close-quote" "no-open-quote" "no-close-quote") ("counter-increment" identifier integer "none") ("counter-reset" identifier integer "none") ("cue" cue-before cue-after) ("cue-after" uri "none") ("cue-before" uri "none") ("cursor" uri "*" "auto" "crosshair" "default" "pointer" "move" "e-resize" "ne-resize" "nw-resize" "n-resize" "se-resize" "sw-resize" "s-resize" "w-resize" "text" "wait" "help" "progress") ("direction" "ltr" "rtl") ("display" "inline" "block" "list-item" "run-in" "inline-block" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none") ("elevation" angle "below" "level" "above" "higher" "lower") ("empty-cells" "show" "hide") ("float" "left" "right" "none") ("font" font-style font-variant font-weight font-size "/" line-height font-family "caption" "icon" "menu" "message-box" "small-caption" "status-bar") ("font-family" family-name generic-family) ("font-size" absolute-size relative-size length percentage) ("font-style" "normal" "italic" "oblique") ("font-variant" "normal" "small-caps") ("font-weight" "normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900") ("height" length percentage "auto") ("left" length percentage "auto") ("letter-spacing" "normal" length) ("line-height" "normal" number length percentage) ("list-style" list-style-type list-style-position list-style-image) ("list-style-image" uri "none") ("list-style-position" "inside" "outside") ("list-style-type" "disc" "circle" "square" "decimal" "decimal-leading-zero" "lower-roman" "upper-roman" "lower-greek" "lower-latin" "upper-latin" "armenian" "georgian" "lower-alpha" "upper-alpha" "none") ("margin" margin-width) ("margin-bottom" margin-width) ("margin-left" margin-width) ("margin-right" margin-width) ("margin-top" margin-width) ("max-height" length percentage "none") ("max-width" length percentage "none") ("min-height" length percentage) ("min-width" length percentage) ("orphans" integer) ("outline" outline-color outline-style outline-width) ("outline-color" color "invert") ("outline-style" border-style) ("outline-width" border-width) ("overflow" "visible" "hidden" "scroll" "auto") ("padding" padding-width) ("padding-bottom" padding-width) ("padding-left" padding-width) ("padding-right" padding-width) ("padding-top" padding-width) ("page-break-after" "auto" "always" "avoid" "left" "right") ("page-break-before" "auto" "always" "avoid" "left" "right") ("page-break-inside" "avoid" "auto") ("pause" time percentage) ("pause-after" time percentage) ("pause-before" time percentage) ("pitch" frequency "x-low" "low" "medium" "high" "x-high") ("pitch-range" number) ("play-during" uri "mix" "repeat" "auto" "none") ("position" "static" "relative" "absolute" "fixed") ("quotes" string string "none") ("richness" number) ("right" length percentage "auto") ("speak" "normal" "none" "spell-out") ("speak-header" "once" "always") ("speak-numeral" "digits" "continuous") ("speak-punctuation" "code" "none") ("speech-rate" number "x-slow" "slow" "medium" "fast" "x-fast" "faster" "slower") ("stress" number) ("table-layout" "auto" "fixed") ("text-align" "left" "right" "center" "justify") ("text-decoration" "none" "underline" "overline" "line-through" "blink") ("text-indent" length percentage) ("text-transform" "capitalize" "uppercase" "lowercase" "none") ("top" length percentage "auto") ("unicode-bidi" "normal" "embed" "bidi-override") ("vertical-align" "baseline" "sub" "super" "top" "text-top" "middle" "bottom" "text-bottom" percentage length) ("visibility" "visible" "hidden" "collapse") ("voice-family" specific-voice generic-voice "*" specific-voice generic-voice) ("volume" number percentage "silent" "x-soft" "soft" "medium" "loud" "x-loud") ("white-space" "normal" "pre" "nowrap" "pre-wrap" "pre-line") ("widows" integer) ("width" length percentage "auto") ("word-spacing" "normal" length) ("z-index" "auto" integer))))
                nil [7086 13316])
            ("ac-css-value-classes" variable
               (:constant-flag t
                :default-value (quote ((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large" "xx-large") (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove" "ridge" "inset" "outset") (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy" "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow" "rgb") (counter "counter") (family-name "Courier" "Helvetica" "Times") (generic-family "serif" "sans-serif" "cursive" "fantasy" "monospace") (generic-voice "male" "female" "child") (margin-width "auto") (relative-size "larger" "smaller") (shape "rect") (uri "url"))))
                nil [13318 14125])
            ("ac-css-pseudo-classes" variable
               (:constant-flag t
                :default-value (quote ("active" "after" "before" "first" "first-child" "first-letter" "first-line" "focus" "hover" "lang" "left" "link" "right" "visited")))
                nil [14127 14359])
            ("ac-css-property" variable nil nil [14361 14419])
            ("ac-css-prefix" function nil nil [14421 14612])
            ("ac-css-property-candidates" function nil nil [14614 15251])
            ("ac-define-source" code nil nil [15253 15379])
            ("ac-define-source" code nil nil [15390 15528])
            ("ac-define-source" code nil nil [15541 15667])
            ("ac-ropemacs-loaded" variable nil nil [15714 15745])
            ("ac-ropemacs-require" function nil nil [15746 15996])
            ("ac-ropemacs-setup" function nil nil [15998 16184])
            ("ac-ropemacs-initialize" function nil nil [16186 16467])
            ("ac-ropemacs-completions-cache" variable nil nil [16469 16511])
            ("ac-source-ropemacs" variable (:default-value (quote ((init lambda nil (setq ac-ropemacs-completions-cache (mapcar (lambda (completion) (concat ac-prefix completion)) (ignore-errors (rope-completions))))) (candidates . ac-ropemacs-completions-cache)))) nil [16512 16844])
            ("ac-source-rcodetools" variable (:default-value (quote ((init lambda nil (require (quote rcodetools)) (condition-case x (save-excursion (rct-exec-and-eval rct-complete-command-name "--completion-emacs-icicles")) (error) (setq rct-method-completion-table nil))) (candidates lambda nil (all-completions ac-prefix (mapcar (lambda (completion) (replace-regexp-in-string "	.*$" "" (car completion))) rct-method-completion-table)))))) nil [16861 17481])
            ("ac-common-setup" function nil nil [17509 17587])
            ("ac-emacs-lisp-mode-setup" function nil nil [17589 17764])
            ("ac-cc-mode-setup" function nil nil [17766 17872])
            ("ac-ruby-mode-setup" function nil nil [17874 17903])
            ("ac-css-mode-setup" function nil nil [17905 17999])
            ("ac-config-default" function nil nil [18001 18430])
            ("auto-complete-config" package nil nil [18432 18463]))          
    :file "auto-complete-config.el"
    :pointmax 18502
    :fsize 18501
    :lastmodtime '(21005 33534 0 0)
    :unmatched-syntax '((close-paren 924 . 925) (symbol 891 . 908) (open-paren 890 . 891))
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!plugins!auto-complete-suite!auto-complete!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
