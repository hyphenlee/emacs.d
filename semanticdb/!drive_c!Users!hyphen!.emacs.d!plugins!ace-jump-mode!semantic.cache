;; Object ace-jump-mode/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ace-jump-mode/"
  :tables (list 
   (semanticdb-table "ace-jump-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [3057 3070])
            ("aj-position" type
               (:members ("offset" "visual-area")
                :type "struct")
                nil [3308 3350])
            ("aj-position-buffer" function (:arguments ("aj-pos")) nil [3352 3497])
            ("aj-position-window" function (:arguments ("aj-pos")) nil [3499 3644])
            ("aj-position-frame" function (:arguments ("aj-pos")) nil [3646 3788])
            ("aj-position-recover-buffer" function (:arguments ("aj-pos")) nil [3790 3959])
            ("aj-visual-area" type
               (:members ("buffer" "window" "frame" "recover-buffer")
                :type "struct")
                nil [4146 4207])
            ("aj-queue" type
               (:members ("head" "tail")
                :type "struct")
                nil [4291 4321])
            ("aj-queue-push" function (:arguments ("item" "q")) nil [4323 4654])
            ("aj-queue-pop" function (:arguments ("q")) nil [4656 5075])
            ("or" code nil nil [5133 5254])
            ("ace-jump-word-mode-use-query-char" variable (:default-value t) nil [5277 5396])
            ("ace-jump-mode-case-fold" variable (:default-value case-fold-search) nil [5398 5560])
            ("ace-jump-mode-mark-ring" variable nil nil [5562 5660])
            ("ace-jump-mode-mark-ring-max" variable (:default-value 100) nil [5662 5750])
            ("ace-jump-mode-gray-background" variable (:default-value t) nil [5753 5984])
            ("ace-jump-mode-scope" variable (:default-value (quote global)) nil [5986 6392])
            ("ace-jump-mode-detect-punc" variable (:default-value t) nil [6394 6716])
            ("ace-jump-mode-submode-list" variable
               (:user-visible-flag t
                :default-value (quote (ace-jump-word-mode ace-jump-char-mode ace-jump-line-mode)))
                nil [6719 7417])
            ("ace-jump-mode-move-keys" variable
               (:user-visible-flag t
                :default-value (nconc (loop for i from 97 to 122 collect i) (loop for i from 65 to 90 collect i)))
                nil [7419 7883])
            ("ace-jump-mode" variable nil nil [7926 7976])
            ("ace-jump-background-overlay-list" variable nil nil [7977 8078])
            ("ace-jump-search-tree" variable nil nil [8079 8220])
            ("ace-jump-query-char" variable nil nil [8221 8305])
            ("ace-jump-current-mode" variable nil nil [8306 8420])
            ("ace-jump-recover-visual-area-list" variable nil nil [8422 8801])
            ("ace-jump-sync-emacs-mark-ring" variable nil nil [8802 9274])
            ("ace-jump" customgroup (:user-visible-flag t) nil [9276 9340])
            ("ace-jump-face-background" variable
               (:default-value (quote ((t (:foreground "gray40"))))
                :type "face")
                nil [9362 9489])
            ("ace-jump-face-foreground" variable
               (:default-value (quote ((((class color)) (:foreground "red")) (((background dark)) (:foreground "gray100")) (((background light)) (:foreground "gray0")) (t (:foreground "gray100"))))
                :type "face")
                nil [9492 9761])
            ("ace-jump-mode-before-jump-hook" variable nil nil [9764 9881])
            ("ace-jump-mode-end-hook" variable nil nil [9883 9980])
            ("ace-jump-allow-invisible" variable nil nil [9982 10256])
            ("ace-jump-char-category" function (:arguments ("query-char")) nil [10259 11271])
            ("ace-jump-search-candidate" function (:arguments ("re-query-string" "visual-area-list")) nil [11274 13104])
            ("ace-jump-tree-breadth-first-construct" function (:arguments ("total-leaf-node" "max-child-node")) nil [13106 14914])
            ("ace-jump-tree-preorder-traverse" function (:arguments ("tree" "leaf-func" "branch-func")) nil [14916 15721])
            ("ace-jump-populate-overlay-to-search-tree" function (:arguments ("tree" "candidate-list")) nil [15724 17622])
            ("ace-jump-delete-overlay-in-search-tree" function (:arguments ("tree")) nil [17625 17953])
            ("ace-jump-buffer-substring" function (:arguments ("pos")) nil [17955 18214])
            ("ace-jump-update-overlay-in-search-tree" function (:arguments ("tree" "keys")) nil [18216 20107])
            ("ace-jump-list-visual-area" function nil nil [20111 21125])
            ("ace-jump-mode-make-indirect-buffer" function (:arguments ("visual-area-list")) nil [21128 23086])
            ("ace-jump-do" function (:arguments ("re-query-string")) nil [23089 26660])
            ("ace-jump-jump-to" function (:arguments ("position")) nil [26663 27672])
            ("ace-jump-push-mark" function nil nil [27674 28564])
            ("ace-jump-mode-pop-mark" function (:user-visible-flag t) nil [28582 32587])
            ("ace-jump-quick-exchange" function (:user-visible-flag t) nil [32589 33396])
            ("ace-jump-char-mode" function
               (:user-visible-flag t
                :arguments ("query-char"))
                nil [33416 34053])
            ("ace-jump-word-mode" function
               (:user-visible-flag t
                :arguments ("head-char"))
                nil [34071 35452])
            ("ace-jump-line-mode" function (:user-visible-flag t) nil [35470 35890])
            ("ace-jump-mode" function
               (:user-visible-flag t
                :arguments ("prefix"))
                nil [35907 36873])
            ("ace-jump-move" function (:user-visible-flag t) nil [36875 38666])
            ("ace-jump-done" function (:user-visible-flag t) nil [38670 40140])
            ("ace-jump-kill-buffer" function (:arguments ("buffer")) nil [40142 40428])
            ("ace-jump-move-to-end-if" function (:arguments ("l" "pred")) nil [40567 41133])
            ("ace-jump-move-first-to-end-if" function (:arguments ("l" "pred")) nil [41135 41504])
            ("pop-mark" function (:arguments ("before" "ace-jump-pop-mark-advice")) nil [41510 42128])
            ("pop-global-mark" function (:arguments ("before" "ace-jump-pop-global-mark-advice")) nil [42143 42949])
            ("ace-jump-mode-enable-mark-sync" function nil nil [42998 43702])
            ("ace-jump-mode-disable-mark-sync" function nil nil [43704 44430])
            ("ace-jump-mode" package nil nil [44433 44457]))          
    :file "ace-jump-mode.el"
    :pointmax 44567
    :fsize 44567
    :lastmodtime '(21005 33519 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "README.md"
    :major-mode 'scheme-mode
    :tags nil
    :file "README.md"
    :pointmax 2374
    :fsize 2373
    :lastmodtime '(21005 33519 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!plugins!ace-jump-mode!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
