;; Object dash-1.8.0/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "dash-1.8.0/"
  :tables (list 
   (semanticdb-table "dash.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("defalias" code nil nil [944 1033])
            ("-last-item" function (:arguments ("list")) nil [1035 1141])
            ("!cons" function (:arguments ("car" "cdr")) nil [1143 1255])
            ("!cdr" function (:arguments ("list")) nil [1257 1354])
            ("--each" function (:arguments ("list" "body")) nil [1356 1652])
            ("put" code nil nil [1654 1691])
            ("-each" function (:arguments ("list" "fn")) nil [1693 1827])
            ("--each-while" function (:arguments ("list" "pred" "body")) nil [1829 2152])
            ("put" code nil nil [2154 2197])
            ("-each-while" function (:arguments ("list" "pred" "fn")) nil [2199 2397])
            ("--dotimes" function (:arguments ("num" "body")) nil [2399 2625])
            ("put" code nil nil [2627 2667])
            ("-dotimes" function (:arguments ("num" "fn")) nil [2669 2822])
            ("-map" function (:arguments ("fn" "list")) nil [2824 2950])
            ("--map" function (:arguments ("form" "list")) nil [2952 3070])
            ("--reduce-from" function (:arguments ("form" "initial-value" "list")) nil [3072 3238])
            ("-reduce-from" function (:arguments ("fn" "initial-value" "list")) nil [3240 3633])
            ("--reduce" function (:arguments ("form" "list")) nil [3635 3865])
            ("-reduce" function (:arguments ("fn" "list")) nil [3867 4357])
            ("-reduce-r-from" function (:arguments ("fn" "initial-value" "list")) nil [4359 4782])
            ("--reduce-r-from" function (:arguments ("form" "initial-value" "list")) nil [4784 4954])
            ("-reduce-r" function (:arguments ("fn" "list")) nil [4956 5583])
            ("--reduce-r" function (:arguments ("form" "list")) nil [5585 5711])
            ("--filter" function (:arguments ("form" "list")) nil [5713 5900])
            ("-filter" function (:arguments ("pred" "list")) nil [5902 6067])
            ("defalias" code nil nil [6069 6097])
            ("defalias" code nil nil [6098 6128])
            ("--remove" function (:arguments ("form" "list")) nil [6130 6248])
            ("-remove" function (:arguments ("pred" "list")) nil [6250 6403])
            ("defalias" code nil nil [6405 6433])
            ("defalias" code nil nil [6434 6464])
            ("--keep" function (:arguments ("form" "list")) nil [6466 6700])
            ("-keep" function (:arguments ("fn" "list")) nil [6702 6840])
            ("--map-when" function (:arguments ("pred" "rep" "list")) nil [6842 7040])
            ("--map-indexed" function (:arguments ("form" "list")) nil [7042 7238])
            ("-map-indexed" function (:arguments ("fn" "list")) nil [7240 7484])
            ("-map-when" function (:arguments ("pred" "rep" "list")) nil [7486 7777])
            ("defalias" code nil nil [7779 7818])
            ("defalias" code nil nil [7819 7856])
            ("-flatten" function (:arguments ("l")) nil [7858 8033])
            ("-concat" function (:arguments ("lists")) nil [8035 8173])
            ("--mapcat" function (:arguments ("form" "list")) nil [8175 8300])
            ("-mapcat" function (:arguments ("fn" "list")) nil [8302 8469])
            ("-cons*" function (:arguments ("args")) nil [8471 8897])
            ("--first" function (:arguments ("form" "list")) nil [8899 9096])
            ("-first" function (:arguments ("pred" "list")) nil [9098 9294])
            ("--last" function (:arguments ("form" "list")) nil [9296 9476])
            ("-last" function (:arguments ("pred" "list")) nil [9478 9604])
            ("--count" function (:arguments ("pred" "list")) nil [9606 9788])
            ("-count" function (:arguments ("pred" "list")) nil [9790 9920])
            ("---truthy?" function (:arguments ("val")) nil [9922 9965])
            ("--any?" function (:arguments ("form" "list")) nil [9967 10065])
            ("-any?" function (:arguments ("pred" "list")) nil [10067 10209])
            ("defalias" code nil nil [10211 10236])
            ("defalias" code nil nil [10237 10264])
            ("defalias" code nil nil [10266 10291])
            ("defalias" code nil nil [10292 10319])
            ("defalias" code nil nil [10320 10346])
            ("defalias" code nil nil [10347 10375])
            ("--all?" function (:arguments ("form" "list")) nil [10377 10561])
            ("-all?" function (:arguments ("pred" "list")) nil [10563 10706])
            ("defalias" code nil nil [10708 10734])
            ("defalias" code nil nil [10735 10763])
            ("defalias" code nil nil [10765 10790])
            ("defalias" code nil nil [10791 10818])
            ("defalias" code nil nil [10819 10846])
            ("defalias" code nil nil [10847 10876])
            ("--none?" function (:arguments ("form" "list")) nil [10878 10970])
            ("-none?" function (:arguments ("pred" "list")) nil [10972 11095])
            ("defalias" code nil nil [11097 11124])
            ("defalias" code nil nil [11125 11154])
            ("--only-some?" function (:arguments ("form" "list")) nil [11156 11434])
            ("-only-some?" function (:arguments ("pred" "list")) nil [11436 11695])
            ("defalias" code nil nil [11697 11734])
            ("defalias" code nil nil [11735 11774])
            ("-slice" function (:arguments ("list" "from" "to")) nil [11776 12417])
            ("-take" function (:arguments ("n" "list")) nil [12419 12663])
            ("-drop" function (:arguments ("n" "list")) nil [12665 12778])
            ("--take-while" function (:arguments ("form" "list")) nil [12780 12974])
            ("-take-while" function (:arguments ("pred" "list")) nil [12976 13143])
            ("--drop-while" function (:arguments ("form" "list")) nil [13145 13357])
            ("-drop-while" function (:arguments ("pred" "list")) nil [13359 13523])
            ("-split-at" function (:arguments ("n" "list")) nil [13525 13790])
            ("-rotate" function (:arguments ("n" "list")) nil [13792 14034])
            ("-insert-at" function (:arguments ("n" "x" "list")) nil [14036 14223])
            ("--split-with" function (:arguments ("pred" "list")) nil [14225 14662])
            ("-split-with" function (:arguments ("pred" "list")) nil [14664 14851])
            ("--separate" function (:arguments ("form" "list")) nil [14853 15108])
            ("-separate" function (:arguments ("pred" "list")) nil [15110 15272])
            ("---partition-all-in-steps-reversed" function (:arguments ("n" "step" "list")) nil [15274 15653])
            ("-partition-all-in-steps" function (:arguments ("n" "step" "list")) nil [15655 15908])
            ("-partition-in-steps" function (:arguments ("n" "step" "list")) nil [15910 16302])
            ("-partition-all" function (:arguments ("n" "list")) nil [16304 16495])
            ("-partition" function (:arguments ("n" "list")) nil [16497 16723])
            ("--partition-by" function (:arguments ("form" "list")) nil [16725 17510])
            ("-partition-by" function (:arguments ("fn" "list")) nil [17512 17667])
            ("--partition-by-header" function (:arguments ("form" "list")) nil [17669 18606])
            ("-partition-by-header" function (:arguments ("fn" "list")) nil [18608 18911])
            ("--group-by" function (:arguments ("form" "list")) nil [18913 19734])
            ("-group-by" function (:arguments ("fn" "list")) nil [19736 19913])
            ("-interpose" function (:arguments ("sep" "list")) nil [19915 20205])
            ("-interleave" function (:arguments ("lists")) nil [20207 20470])
            ("--zip-with" function (:arguments ("form" "list1" "list2")) nil [20472 20986])
            ("-zip-with" function (:arguments ("fn" "list1" "list2")) nil [20988 21386])
            ("-zip" function (:arguments ("list1" "list2")) nil [21388 21660])
            ("-partial" function (:arguments ("fn" "args")) nil [21662 21948])
            ("-rpartial" function (:arguments ("fn" "args")) nil [21950 22312])
            ("-juxt" function (:arguments ("fns")) nil [22314 22777])
            ("-applify" function (:arguments ("fn")) nil [22779 22933])
            ("->" function (:arguments ("x" "form" "more")) nil [22935 23387])
            ("->>" function (:arguments ("x" "form" "more")) nil [23389 23783])
            ("-->" function (:arguments ("x" "form" "more")) nil [23785 24178])
            ("put" code nil nil [24180 24213])
            ("put" code nil nil [24214 24248])
            ("put" code nil nil [24249 24283])
            ("-when-let" function (:arguments ("var-val" "body")) nil [24285 24547])
            ("-when-let*" function (:arguments ("vars-vals" "body")) nil [24549 24943])
            ("--when-let" function (:arguments ("val" "body")) nil [24945 25100])
            ("-if-let" function (:arguments ("var-val" "then" "else")) nil [25102 25379])
            ("-if-let*" function (:arguments ("vars-vals" "then" "else")) nil [25381 25858])
            ("--if-let" function (:arguments ("val" "then" "else")) nil [25860 26032])
            ("put" code nil nil [26034 26074])
            ("put" code nil nil [26075 26116])
            ("put" code nil nil [26117 26158])
            ("put" code nil nil [26159 26197])
            ("put" code nil nil [26198 26237])
            ("put" code nil nil [26238 26277])
            ("-distinct" function (:arguments ("list")) nil [26279 26562])
            ("-union" function (:arguments ("list" "list2")) nil [26564 26920])
            ("defalias" code nil nil [26922 26950])
            ("-intersection" function (:arguments ("list" "list2")) nil [26952 27203])
            ("-difference" function (:arguments ("list" "list2")) nil [27205 27443])
            ("-compare-fn" variable nil nil [27445 27656])
            ("-contains?" function (:arguments ("list" "element")) nil [27658 28166])
            ("defalias" code nil nil [28168 28203])
            ("-sort" function (:arguments ("predicate" "list")) nil [28205 28523])
            ("--sort" function (:arguments ("form" "list")) nil [28525 28650])
            ("-repeat" function (:arguments ("n" "x")) nil [28652 28803])
            ("-sum" function (:arguments ("list")) nil [28805 28870])
            ("-product" function (:arguments ("list")) nil [28872 28945])
            ("-min" function (:arguments ("x" "xs")) nil [28947 29047])
            ("-min-by" function (:arguments ("pred" "list")) nil [29049 29417])
            ("--min-by" function (:arguments ("form" "list")) nil [29419 29544])
            ("-max" function (:arguments ("x" "xs")) nil [29546 29645])
            ("-max-by" function (:arguments ("pred" "list")) nil [29647 30014])
            ("--max-by" function (:arguments ("form" "list")) nil [30016 30141])
            ("eval-after-load" code nil nil [30143 35307])
            ("dash" package nil nil [35309 35324]))          
    :file "dash.el"
    :pointmax 35347
    :fsize 35346
    :lastmodtime '(21005 35300 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!plugins!dash-1.8.0!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
