;; Object wttr-config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "wttr-config/"
  :tables (list 
   (semanticdb-table "wttr-font.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("cl" include nil nil [48 61])
            ("if" code nil nil [63 126])
            ("wttr/font:ascii-font-candidates" variable
               (:constant-flag t
                :default-value (quote ("Cousine" "WenQuanYi Micro Hei Mono" "文泉驿等宽微米黑" "Consolas")))
                nil [129 235])
            ("wttr/font:non-ascii-font-candidates" variable
               (:constant-flag t
                :default-value (quote ("文泉驿等宽微米黑" "Microsoft YaHei" "MS Gothic")))
                nil [238 330])
            ("wttr/font:default-font-size" variable
               (:constant-flag t
                :default-value 18)
                nil [333 374])
            ("wttr/font:existp" function (:arguments ("font-name")) nil [377 515])
            ("let" code nil nil [518 1128])
            ("wttr-font" package nil nil [3079 3099]))          
    :file "wttr-font.el"
    :pointmax 3102
    :fsize 3241
    :lastmodtime '(21306 11698 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-utils.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr/os:windowsp" variable
               (:constant-flag t
                :default-value (eq system-type (quote windows-nt)))
                nil [50 156])
            ("wttr/os:linuxp" variable
               (:constant-flag t
                :default-value (eq system-type (quote gnu/linux)))
                nil [158 252])
            ("wttr/os:win32p" variable
               (:constant-flag t
                :default-value (and wttr/os:windowsp (not (getenv "PROGRAMW6432"))))
                nil [254 419])
            ("wttr/os:win64p" variable
               (:constant-flag t
                :default-value (and wttr/os:windowsp (getenv "PROGRAMW6432")))
                nil [421 581])
            ("wttr/host:MSWSp" variable
               (:constant-flag t
                :default-value (string-equal system-name "WTTR-T5500"))
                nil [583 699])
            ("wttr/host:HOMEp" variable
               (:constant-flag t
                :default-value (string-equal system-name "WTTR-HOME-T61"))
                nil [701 809])
            ("wttr/plugin:base-directory" variable
               (:constant-flag t
                :default-value "~/.emacs.d/plugins")
                nil [811 930])
            ("wttr/prepend-to-exec-path" function (:arguments ("path")) nil [1821 2188])
            ("wttr/log:message" function (:arguments ("message" "args")) nil [2190 2373])
            ("wttr/prepend-to-load-path" function (:arguments ("path")) nil [2426 2577])
            ("wttr/plugin:expand-file-name" function (:arguments ("relative-path" "base-diretory")) nil [2580 2853])
            ("wttr/plugin:prepend-to-load-path" function (:arguments ("plugin-folder-name" "base-diretory")) nil [2856 3507])
            ("wttr/delete-trailing-whitespace-when-save" function nil nil [3510 3790])
            ("wttr/kill-buffer-may-have-clients" function (:user-visible-flag t) nil [3793 4108])
            ("when" code nil nil [4140 4404])
            ("wttr-utils" package nil nil [4407 4428]))          
    :file "wttr-utils.el"
    :pointmax 4429
    :fsize 4548
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-basic.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("setq" code nil nil [73 103])
            ("setq" code nil nil [104 149])
            ("set-language-environment" code nil nil [151 190])
            ("setq" code nil nil [298 330])
            ("global-font-lock-mode" code nil nil [506 531])
            ("tool-bar-mode" code nil nil [571 588])
            ("set-scroll-bar-mode" code nil nil [608 633])
            ("display-time-mode" code nil nil [663 684])
            ("setq" code nil nil [685 718])
            ("setq" code nil nil [719 753])
            ("setq" code nil nil [754 789])
            ("setq" code nil nil [790 821])
            ("setq" code nil nil [858 885])
            ("show-paren-mode" code nil nil [902 921])
            ("setq" code nil nil [922 958])
            ("transient-mark-mode" code nil nil [981 1004])
            ("setq" code nil nil [1047 1164])
            ("when" code nil nil [1262 1347])
            ("setq" code nil nil [1456 1489])
            ("put" code nil nil [1523 1560])
            ("setq" code nil nil [1603 1634])
            ("mouse-avoidance-mode" code nil nil [1710 1738])
            ("setq-default" code nil nil [1773 1809])
            ("setq" code nil nil [1810 1838])
            ("fset" code nil nil [1857 1886])
            ("setq" code nil nil [1932 1962])
            ("if" code nil nil [2012 2076])
            ("setq" code nil nil [2140 2164])
            ("setq" code nil nil [2388 2432])
            ("setq" code nil nil [2433 2467])
            ("setq" code nil nil [2700 2751])
            ("setq" code nil nil [2776 2816])
            ("setq" code nil nil [2860 2894])
            ("setq" code nil nil [2943 2963])
            ("setq" code nil nil [3035 3057])
            ("setq-default" code nil nil [3175 3210])
            ("setq-default" code nil nil [3211 3237])
            ("setq" code nil nil [3273 3305])
            ("when" code nil nil [3455 3807])
            ("copy-line" function nil nil [4425 4631])
            ("global-set-key" code nil nil [4632 4670])
            ("global-set-key" code nil nil [4671 4709])
            ("custom-set-variables" code nil nil [4710 4764])
            ("wttr-basic" package nil nil [4765 4786]))          
    :file "wttr-basic.el"
    :pointmax 4787
    :fsize 4940
    :lastmodtime '(21335 6240 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-modes.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [27 40])
            ("loop" code nil nil [43 152])
            ("wttr-modes" package nil nil [155 176]))          
    :file "wttr-modes.el"
    :pointmax 177
    :fsize 176
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-mode-line.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("cl" include nil nil [70 83])
            ("wttr/mode-line:current-height" function nil nil [86 405])
            ("wttr/defun-bicolor-face" function (:arguments ("face" "fg-color" "bg-color")) nil [407 608])
            ("wttr/defun-bicolor-transition-face" function (:arguments ("face" "bicolor-face-from" "bicolor-face-to")) nil [610 872])
            ("wttr/bicolor-face-attribute" function (:arguments ("face")) nil [882 1007])
            ("wttr/mode-line:data-generator-left-triangle" function (:arguments ("height" "width")) nil [1009 1867])
            ("wttr/mode-line:data-generator-eight-trigrams" function (:arguments ("height" "width")) nil [1869 2619])
            ("wttr/create-bicolor-xpm" function (:arguments ("height" "width" "fg-color" "bg-color" "data-generator")) nil [2621 4258])
            ("wttr/create-bicolor-xpm-from-face" function (:arguments ("height" "width" "bicolor-face" "data-generator")) nil [4262 4516])
            ("wttr/mode-line:create-left-triangle-xpm" function (:arguments ("bicolor-face" "width")) nil [4519 5087])
            ("wttr/mode-line:create-eight-trigrams-xpm" function (:arguments ("bicolor-face")) nil [5089 5434])
            ("wttr/mode-line:decorate-string-face" function (:arguments ("mode-line-var" "bicolor-face")) nil [5437 6784])
            ("wttr/defun-bicolor-face" code nil nil [6788 6876])
            ("wttr/defun-bicolor-face" code nil nil [6877 6950])
            ("wttr/defun-bicolor-transition-face" code nil nil [6951 7158])
            ("wttr/defun-bicolor-transition-face" code nil nil [7159 7334])
            ("wttr/mode-line:create-triangle-seperator" function (:arguments ("face")) nil [7336 7494])
            ("wttr/mode-line:create-eight-trigrams-seperator" function (:arguments ("face")) nil [7496 7661])
            ("wttr/plugin:prepend-to-load-path" code nil nil [7663 7709])
            ("nyan-mode" include nil nil [7710 7730])
            ("setq-default" code nil nil [7731 9161])
            ("wttr-mode-line" package nil nil [10223 10248]))          
    :file "wttr-mode-line.el"
    :pointmax 10250
    :fsize 10493
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-key.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("global-set-key" code nil nil [49 92])
            ("global-set-key" code nil nil [93 157])
            ("global-set-key" code nil nil [183 226])
            ("global-set-key" code nil nil [227 260])
            ("global-set-key" code nil nil [289 339])
            ("global-set-key" code nil nil [340 383])
            ("kid-switch-to-shell" function nil nil [414 778])
            ("global-set-key" code nil nil [779 833])
            ("w32-open-current-file-in-explorer" function (:user-visible-flag t) nil [886 1175])
            ("global-set-key" code nil nil [1176 1242])
            ("w32-open-shell-from-current-file-directory" function (:user-visible-flag t) nil [1294 1595])
            ("global-set-key" code nil nil [1596 1671])
            ("wttr/w32:copy-current-file-name" function (:arguments ("prefix")) nil [1673 1904])
            ("global-set-key" code nil nil [1905 1969])
            ("wttr-key" package nil nil [1972 1991]))          
    :file "wttr-key.el"
    :pointmax 1992
    :fsize 2056
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-color-theme.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("wttr/plugin:prepend-to-load-path" code nil nil [64 118])
            ("color-theme" include nil nil [119 141])
            ("color-theme-initialize" code nil nil [221 245])
            ("color-theme-dark-blue2" code nil nil [246 270])
            ("wttr-color-theme" package nil nil [421 448]))          
    :file "wttr-color-theme.el"
    :pointmax 449
    :fsize 466
    :lastmodtime '(21306 10673 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!wttr-config!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
