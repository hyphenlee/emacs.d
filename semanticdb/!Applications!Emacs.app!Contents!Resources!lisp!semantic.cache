;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables
  (list
    (semanticdb-table "subr.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("declare-function" function (:arguments ("_fn" "_file" "_arglist" "_fileonly")) nil [1111 2631])
            ("defalias" code nil nil [2660 2681])
            ("noreturn" function (:arguments ("form")) nil [2683 2887])
            ("1value" function (:arguments ("form")) nil [2889 3127])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3129 3589])
            ("lambda" function (:arguments ("cdr")) nil [3591 4749])
            ("setq-local" function (:arguments ("var" "val")) nil [4751 4963])
            ("defvar-local" function (:arguments ("var" "val" "docstring")) nil [4965 5406])
            ("apply-partially" function (:arguments ("fun" "args")) nil [5408 5823])
            ("push" function (:arguments ("newelt" "place")) nil [5825 6419])
            ("pop" function (:arguments ("place")) nil [6421 7232])
            ("when" function (:arguments ("cond" "body")) nil [7234 7522])
            ("unless" function (:arguments ("cond" "body")) nil [7524 7810])
            ("dolist" function (:arguments ("spec" "body")) nil [7812 9091])
            ("dotimes" function (:arguments ("spec" "body")) nil [9093 10558])
            ("declare" function (:arguments ("_specs")) nil [10560 11135])
            ("ignore-errors" function (:arguments ("body")) nil [11137 11444])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [11475 11623])
            ("error" function (:arguments ("args")) nil [11680 12066])
            ("user-error" function (:arguments ("format" "args")) nil [12068 12594])
            ("define-error" function (:arguments ("name" "message" "parent")) nil [12596 13508])
            ("frame-configuration-p" function (:arguments ("object")) nil [13622 13877])
            ("caar" function (:arguments ("x")) nil [13903 13974])
            ("cadr" function (:arguments ("x")) nil [13976 14047])
            ("cdar" function (:arguments ("x")) nil [14049 14120])
            ("cddr" function (:arguments ("x")) nil [14122 14193])
            ("last" function (:arguments ("list" "n")) nil [14195 14612])
            ("butlast" function (:arguments ("list" "n")) nil [14614 14842])
            ("nbutlast" function (:arguments ("list" "n")) nil [14844 15121])
            ("zerop" function (:arguments ("number")) nil [15123 15353])
            ("delete-dups" function (:arguments ("list")) nil [15355 15708])
            ("delete-consecutive-dups" function (:arguments ("list" "circular")) nil [15785 16253])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [16255 18072])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [18074 18823])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [18863 19663])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [19665 19987])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [19989 20257])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [20259 20694])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [20696 21180])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [21182 21675])
            ("remove" function (:arguments ("elt" "seq")) nil [21677 22030])
            ("remq" function (:arguments ("elt" "list")) nil [22032 22363])
            ("kbd" function (:arguments ("keys")) nil [22388 22698])
            ("put" code nil nil [22699 22717])
            ("undefined" function (:user-visible-flag t) nil [22719 23174])
            ("put" code nil nil [23269 23304])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [23306 23870])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [23872 24524])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [24526 26587])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [26589 27269])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [27271 27741])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [27795 28395])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [28397 28863])
            ("keymap-canonicalize" function (:arguments ("map")) nil [28865 30734])
            ("put" code nil nil [30736 30793])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [30795 31170])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [31201 31947])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [31949 32753])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32755 32951])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32953 33182])
            ("key-substitution-in-progress" variable nil nil [33238 33331])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [33333 34717])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [34719 36384])
            ("global-map" variable nil nil [36533 36707])
            ("esc-map" variable nil nil [36709 36849])
            ("ctl-x-map" variable nil nil [36851 36986])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [36988 37066])
            ("defalias" code nil nil [37067 37105])
            ("define-key" code nil nil [37106 37148])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [37150 37222])
            ("defalias" code nil nil [37223 37261])
            ("define-key" code nil nil [37262 37304])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [37344 37399])
            ("listify-key-sequence" function (:arguments ("key")) nil [37401 37639])
            ("eventp" function (:arguments ("obj")) nil [37641 37842])
            ("event-modifiers" function (:arguments ("event")) nil [37844 39138])
            ("event-basic-type" function (:arguments ("event")) nil [39140 39908])
            ("mouse-movement-p" function (:arguments ("object")) nil [39910 40043])
            ("mouse-event-p" function (:arguments ("object")) nil [40045 40263])
            ("event-start" function (:arguments ("event")) nil [40265 41425])
            ("event-end" function (:arguments ("event")) nil [41427 41745])
            ("event-click-count" function (:arguments ("event")) nil [41747 41957])
            ("posnp" function (:arguments ("obj")) nil [42014 42314])
            ("posn-window" function (:arguments ("position")) nil [42348 42530])
            ("posn-area" function (:arguments ("position")) nil [42532 42856])
            ("posn-point" function (:arguments ("position")) nil [42858 43324])
            ("posn-set-point" function (:arguments ("position")) nil [43326 43646])
            ("posn-x-y" function (:arguments ("position")) nil [43648 43901])
            ("declare-function" code nil nil [43903 43969])
            ("posn-col-row" function (:arguments ("position")) nil [43971 45549])
            ("posn-actual-col-row" function (:arguments ("position")) nil [45551 45985])
            ("posn-timestamp" function (:arguments ("position")) nil [45987 46175])
            ("posn-string" function (:arguments ("position")) nil [46177 46536])
            ("posn-image" function (:arguments ("position")) nil [46538 46778])
            ("posn-object" function (:arguments ("position")) nil [46780 47149])
            ("posn-object-x-y" function (:arguments ("position")) nil [47151 47438])
            ("posn-object-width-height" function (:arguments ("position")) nil [47440 47700])
            ("define-obsolete-function-alias" code nil nil [47743 47808])
            ("define-obsolete-function-alias" code nil nil [47809 47882])
            ("define-obsolete-function-alias" code nil nil [47883 47947])
            ("define-obsolete-function-alias" code nil nil [47948 48019])
            ("define-obsolete-function-alias" code nil nil [48020 48093])
            ("define-obsolete-function-alias" code nil nil [48094 48166])
            ("make-obsolete" code nil nil [48168 48234])
            ("make-obsolete" code nil nil [48235 48284])
            ("insert-string" function (:arguments ("args")) nil [48286 48604])
            ("makehash" function (:arguments ("test")) nil [48606 48726])
            ("log10" function (:arguments ("x")) nil [48728 48837])
            ("defalias" code nil nil [48885 48919])
            ("make-obsolete" code nil nil [48920 48974])
            ("defalias" code nil nil [48975 49011])
            ("make-obsolete" code nil nil [49012 49068])
            ("make-obsolete" code nil nil [49069 49176])
            ("set-advertised-calling-convention" code nil nil [49177 49278])
            ("set-advertised-calling-convention" code nil nil [49279 49347])
            ("set-advertised-calling-convention" code nil nil [49348 49433])
            ("set-advertised-calling-convention" code nil nil [49434 49503])
            ("set-advertised-calling-convention" code nil nil [49504 49573])
            ("make-obsolete-variable" code nil nil [49978 50053])
            ("make-obsolete-variable" code nil nil [50054 50133])
            ("make-obsolete-variable" code nil nil [50134 50201])
            ("make-obsolete-variable" code nil nil [50202 50267])
            ("make-obsolete-variable" code nil nil [50268 50329])
            ("make-obsolete-variable" code nil nil [50330 50401])
            ("make-obsolete-variable" code nil nil [50402 50467])
            ("make-obsolete-variable" code nil nil [50468 50529])
            ("make-obsolete-variable" code nil nil [50530 50605])
            ("make-obsolete-variable" code nil nil [50606 50683])
            ("make-obsolete-variable" code nil nil [50684 50763])
            ("make-obsolete-variable" code nil nil [50764 50841])
            ("make-obsolete-variable" code nil nil [50842 50921])
            ("make-obsolete-variable" code nil nil [50922 51011])
            ("make-obsolete-variable" code nil nil [51012 51087])
            ("make-obsolete-variable" code nil nil [51088 51169])
            ("make-obsolete-variable" code nil nil [51170 51253])
            ("make-obsolete-variable" code nil nil [51254 51349])
            ("make-obsolete-variable" code nil nil [51350 51437])
            ("make-obsolete-variable" code nil nil [51438 51519])
            ("make-obsolete-variable" code nil nil [51520 51607])
            ("make-obsolete-variable" code nil nil [51608 51699])
            ("make-obsolete-variable" code nil nil [51700 51765])
            ("make-obsolete-variable" code nil nil [51766 51831])
            ("make-obsolete-variable" code nil nil [51832 51935])
            ("make-obsolete-variable" code nil nil [51936 52029])
            ("make-obsolete-variable" code nil nil [52030 52093])
            ("make-obsolete-variable" code nil nil [52094 52234])
            ("make-obsolete-variable" code nil nil [52236 52300])
            ("make-obsolete-variable" code nil nil [52301 52384])
            ("make-obsolete-variable" code nil nil [52385 52457])
            ("make-obsolete-variable" code nil nil [52458 52534])
            ("make-obsolete" code nil nil [52535 52591])
            ("make-obsolete" code nil nil [52592 52652])
            ("make-obsolete" code nil nil [52654 52708])
            ("make-obsolete" code nil nil [52709 52765])
            ("define-obsolete-variable-alias" code nil nil [52804 52891])
            ("define-obsolete-variable-alias" code nil nil [52893 52986])
            ("define-obsolete-variable-alias" code nil nil [52987 53080])
            ("make-obsolete-variable" code nil nil [53326 53390])
            ("defvaralias" code nil nil [53392 53449])
            ("defalias" code nil nil [53522 53566])
            ("defalias" code nil nil [53567 53611])
            ("defalias" code nil nil [53612 53645])
            ("defalias" code nil nil [53646 53679])
            ("defalias" code nil nil [53680 53715])
            ("defalias" code nil nil [53716 53742])
            ("defalias" code nil nil [53743 53769])
            ("defalias" code nil nil [53770 53792])
            ("defalias" code nil nil [53818 53857])
            ("defalias" code nil nil [53858 53912])
            ("defalias" code nil nil [53913 53983])
            ("defalias" code nil nil [53984 54056])
            ("defalias" code nil nil [54057 54100])
            ("defalias" code nil nil [54101 54145])
            ("defalias" code nil nil [54146 54179])
            ("defalias" code nil nil [54180 54213])
            ("defalias" code nil nil [54245 54288])
            ("defalias" code nil nil [54289 54338])
            ("defalias" code nil nil [54340 54393])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [54432 56561])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [56563 58231])
            ("letrec" function (:arguments ("binders" "body")) nil [58233 58862])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [58864 61917])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [61919 65266])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [65269 66588])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [66590 67802])
            ("delay-mode-hooks" variable nil nil [67824 67918])
            ("delayed-mode-hooks" variable nil nil [67919 68000])
            ("make-variable-buffer-local" code nil nil [68001 68049])
            ("put" code nil nil [68050 68092])
            ("change-major-mode-after-body-hook" variable nil nil [68094 68208])
            ("after-change-major-mode-hook" variable nil nil [68210 68312])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [68314 69197])
            ("delay-mode-hooks" function (:arguments ("body")) nil [69199 69600])
            ("derived-mode-p" function (:arguments ("modes")) nil [69661 69974])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [70165 70358])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [70360 73045])
            ("autoloadp" function (:arguments ("object")) nil [73067 73169])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [73653 74860])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [74862 76268])
            ("process-lines" function (:arguments ("program" "args")) nil [76293 76898])
            ("process-live-p" function (:arguments ("process")) nil [76900 77213])
            ("make-obsolete" code nil nil [77233 77358])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [77359 77703])
            ("process-kill-buffer-query-function" function nil nil [77705 78124])
            ("add-hook" code nil nil [78126 78201])
            ("process-get" function (:arguments ("process" "propname")) nil [78232 78444])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [78446 78685])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [78725 78775])
            ("read-key-delay" variable (:default-value 0.01) nil [78777 78805])
            ("read-key" function (:arguments ("prompt")) nil [78854 81560])
            ("read-passwd-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "" (function delete-minibuffer-contents)) map)) nil [81562 81899])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [81901 84613])
            ("read-number" function (:arguments ("prompt" "default")) nil [84615 85685])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [85687 87426])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [87428 90071])
            ("declare-function" code nil nil [90111 90190])
            ("y-or-n-p" function (:arguments ("prompt")) nil [90192 93670])
            ("atomic-change-group" function (:arguments ("body")) nil [93701 94907])
            ("prepare-change-group" function (:arguments ("buffer")) nil [94909 96385])
            ("activate-change-group" function (:arguments ("handle")) nil [96387 96625])
            ("accept-change-group" function (:arguments ("handle")) nil [96627 96918])
            ("cancel-change-group" function (:arguments ("handle")) nil [96920 98091])
            ("define-obsolete-function-alias" code nil nil [98149 98231])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [98233 99733])
            ("copy-overlay" function (:arguments ("o")) nil [99762 100336])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [100338 101346])
            ("suspend-hook" variable nil nil [101368 101452])
            ("suspend-resume-hook" variable nil nil [101454 101552])
            ("temp-buffer-show-hook" variable nil nil [101554 101770])
            ("temp-buffer-setup-hook" variable nil nil [101772 102003])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [102005 102380])
            ("buffer-narrowed-p" function nil nil [102413 102547])
            ("find-tag-default-bounds" function nil nil [102549 103552])
            ("find-tag-default" function nil nil [103554 103820])
            ("find-tag-default-as-regexp" function nil nil [103822 104257])
            ("find-tag-default-as-symbol-regexp" function nil nil [104259 104818])
            ("play-sound" function (:arguments ("sound")) nil [104820 105639])
            ("declare-function" code nil nil [105641 105697])
            ("shell-quote-argument" function (:arguments ("argument")) nil [105699 107844])
            ("string-or-null-p" function (:arguments ("object")) nil [107846 107983])
            ("booleanp" function (:arguments ("object")) nil [107985 108143])
            ("special-form-p" function (:arguments ("object")) nil [108145 108390])
            ("macrop" function (:arguments ("object")) nil [108392 108624])
            ("field-at-pos" function (:arguments ("pos")) nil [108626 108896])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [108898 109261])
            ("function-get" function (:arguments ("f" "prop" "autoload")) nil [109263 110073])
            ("yank-handled-properties" variable nil nil [110180 110212])
            ("yank-excluded-properties" variable nil nil [110213 110246])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [110248 111037])
            ("yank-undo-function" variable nil nil [111039 111066])
            ("insert-for-yank" function (:arguments ("string")) nil [111068 111427])
            ("insert-for-yank-1" function (:arguments ("string")) nil [111429 113779])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [113781 114266])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [114268 114954])
            ("yank-handle-font-lock-face-property" function (:arguments ("face" "start" "end")) nil [114956 115268])
            ("yank-handle-category-property" function (:arguments ("category" "start" "end")) nil [115407 115845])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [115883 116796])
            ("set-advertised-calling-convention" code nil nil [116797 116926])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [116928 117347])
            ("set-advertised-calling-convention" code nil nil [117348 117482])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [117484 118929])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [118931 119375])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [119430 119818])
            ("internal--before-with-selected-window" function (:arguments ("window")) nil [119820 120340])
            ("internal--after-with-selected-window" function (:arguments ("state")) nil [120342 120902])
            ("with-selected-window" function (:arguments ("window" "body")) nil [120904 122042])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [122044 122785])
            ("save-window-excursion" function (:arguments ("body")) nil [122787 123606])
            ("internal-temp-output-buffer-show" function (:arguments ("buffer")) nil [123608 125003])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [125056 127509])
            ("with-temp-file" function (:arguments ("file" "body")) nil [127511 128206])
            ("with-temp-message" function (:arguments ("message" "body")) nil [128208 129135])
            ("with-temp-buffer" function (:arguments ("body")) nil [129137 129696])
            ("with-silent-modifications" function (:arguments ("body")) nil [129698 130675])
            ("with-output-to-string" function (:arguments ("body")) nil [130677 131122])
            ("with-local-quit" function (:arguments ("body")) nil [131124 131879])
            ("while-no-input" function (:arguments ("body")) nil [131881 132381])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [132383 132936])
            ("define-obsolete-function-alias" code nil nil [132938 133033])
            ("with-demoted-errors" function (:arguments ("format" "body")) nil [133035 133972])
            ("combine-after-change-calls" function (:arguments ("body")) nil [133974 134669])
            ("with-case-table" function (:arguments ("table" "body")) nil [134671 135192])
            ("with-file-modes" function (:arguments ("modes" "body")) nil [135194 135619])
            ("save-match-data-internal" variable nil nil [135653 135686])
            ("save-match-data" function (:arguments ("body")) nil [135944 136624])
            ("match-string" function (:arguments ("num" "string")) nil [136626 137271])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [137273 137997])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [138000 138649])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [138652 139837])
            ("looking-at-p" function (:arguments ("regexp")) nil [139839 140017])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [140019 140239])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [140241 142151])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [142173 142526])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls" "trim")) nil [142788 145904])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [145906 146467])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [146469 147105])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [147139 147543])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [147545 150124])
            ("string-prefix-p" function (:arguments ("prefix" "string" "ignore-case")) nil [150127 150522])
            ("string-suffix-p" function (:arguments ("suffix" "string" "ignore-case")) nil [150524 150933])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [150935 151718])
            ("load-history-regexp" function (:arguments ("file")) nil [151758 152394])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [152396 152832])
            ("put" code nil nil [152834 152880])
            ("eval-after-load" function (:arguments ("file" "form")) nil [152881 156762])
            ("with-eval-after-load" function (:arguments ("file" "body")) nil [156764 157044])
            ("after-load-functions" variable nil nil [157046 157219])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [157221 158784])
            ("eval-next-after-load" function (:arguments ("file")) nil [158786 159086])
            ("display-delayed-warnings" function nil nil [159090 159357])
            ("collapse-delayed-warnings" function nil nil [159359 160038])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [160168 160508])
            ("delay-warning" function (:arguments ("type" "message" "level" "buffer-name")) nil [160510 160765])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [160794 161137])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [161139 161363])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [161387 162023])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [162025 162345])
            ("syntax-after" function (:arguments ("pos")) nil [162347 162720])
            ("syntax-class" function (:arguments ("syntax")) nil [162722 163074])
            ("forward-whitespace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [163121 163704])
            ("forward-symbol" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [163719 164268])
            ("forward-same-syntax" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [164289 164771])
            ("text-clone--maintaining" variable nil nil [164793 164829])
            ("text-clone--maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [164831 166897])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [166899 169147])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [169255 170833])
            ("called-interactively-p-functions" variable nil nil [170836 171253])
            ("internal--funcall-interactively" variable
               (:constant-flag t
                :default-value (symbol-function (quote funcall-interactively)))
                nil [171255 171340])
            ("called-interactively-p" function (:arguments ("kind")) nil [171342 175523])
            ("interactive-p" function nil nil [175525 176535])
            ("internal-push-keymap" function (:arguments ("keymap" "symbol")) nil [176537 176882])
            ("internal-pop-keymap" function (:arguments ("keymap" "symbol")) nil [176884 177192])
            ("define-obsolete-function-alias" code nil nil [177194 177281])
            ("set-transient-map" function (:arguments ("map" "keep-pred" "on-exit")) nil [177283 179769])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [180352 181119])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [181121 182966])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [182968 183467])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [183469 183586])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [183588 185294])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [185296 185451])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [185453 186557])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [186594 186753])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?snapshot$" . -4) ("^[-_+]$" . -4) ("^[-_+ ]?\\(cvs\\|git\\|bzr\\|svn\\|hg\\|darcs\\)$" . -4) ("^[-_+ ]?alpha$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rc\\)$" . -1))))
                nil [186756 188251])
            ("version-to-list" function (:arguments ("ver")) nil [188254 190658])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [190661 191492])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [191495 192294])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [192297 193082])
            ("version-list-not-zero" function (:arguments ("lst")) nil [193084 193394])
            ("version<" function (:arguments ("v1" "v2")) nil [193397 193901])
            ("version<=" function (:arguments ("v1" "v2")) nil [193903 194421])
            ("version=" function (:arguments ("v1" "v2")) nil [194423 194917])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [194931 194993])
            ("when" code nil nil [195155 195280])
            ("unmsys--file-name" function (:arguments ("file")) nil [195413 195900]))          
      :file "subr.el.gz"
      :pointmax 195925
      :fsize 58375
      :lastmodtime '(21495 62584 0 0)
      :unmatched-syntax nil))
  :file "!Applications!Emacs.app!Contents!Resources!lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
