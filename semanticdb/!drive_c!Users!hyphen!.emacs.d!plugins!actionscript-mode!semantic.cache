;; Object actionscript-mode/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "actionscript-mode/"
  :tables (list 
   (semanticdb-table "actionscript-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [1483 1496])
            ("font-lock" include nil nil [1497 1517])
            ("regexp-opt" include nil nil [1539 1560])
            ("actionscript-mode-version" variable
               (:constant-flag t
                :default-value "7.2.2")
                nil [1563 1645])
            ("actionscript" customgroup (:user-visible-flag t) nil [1647 1740])
            ("actionscript-mode-syntax-table" variable nil nil [1742 1837])
            ("if" code nil nil [1839 3144])
            ("actionscript-mode-map" variable nil nil [3146 3225])
            ("if" code nil nil [3227 3657])
            ("actionscript-mode-hook" variable (:user-visible-flag t) nil [3659 3775])
            ("preprocessor-kwds" variable
               (:constant-flag t
                :default-value (quote ("#include" "#define" "#else" "#endif" "#ifdef" "#ifndef")))
                nil [3833 3922])
            ("actionscript-constant-kwds" variable
               (:constant-flag t
                :default-value (quote ("true" "false" "null" "undefined" "NaN" "Infinity" "-Infinity")))
                nil [3937 4041])
            ("actionscript-global-funcs" variable
               (:constant-flag t
                :default-value (quote ("Array" "Boolean" "decodeURI" "decodeURIComponent" "encodeURI" "encodeURIComponent" "escape" "int" "isFinite" "isNaN" "isXMLName" "Number" "Object" "parseFloat" "parseInt" "String" "trace" "uint" "unescape" "XML" "XMLList")))
                nil [4059 4329])
            ("actionscript-global-classes" variable
               (:constant-flag t
                :default-value (quote ("ArgumentError" "arguments" "Array" "Boolean" "Class" "Date" "DefinitionError" "Error" "EvalError" "Function" "int" "Math" "Namespace" "Number" "Object" "QName" "RangeError" "ReferenceError" "RegExp" "SecurityError" "String" "SyntaxError" "TypeError" "uint" "URIError" "VerifyError" "XML" "XMLList")))
                nil [4352 4701])
            ("actionscript-global-props" variable
               (:constant-flag t
                :default-value (quote ("this")))
                nil [4719 4766])
            ("actionscript-symbol-operators" variable
               (:constant-flag t
                :default-value (quote ("+" "+=" "[]" "=" "&" "&=" "<<" "<<=" "~" "|" "|=" ">>" ">>=" ">>>" ">>>=" "^" "^=" "/*" "*/" "," "?:" "--" "/" "/=" "." "==" ">" ">=" "++" "!=" "<>" "<" "<=" "//" "&&" "!" "||" "%" "%=" "*" "*=" "{}" "()" "===" "!==" "\"" "-" "-=" ":")))
                nil [4781 5073])
            ("actionscript-word-operators" variable
               (:constant-flag t
                :default-value (quote ("as" "is" "instanceof" "new" "typeof" "void")))
                nil [5075 5162])
            ("actionscript-specifier-kwds" variable
               (:constant-flag t
                :default-value (quote ("override" "instrinsic" "private" "protected" "public" "static" "dynamic")))
                nil [5199 5316])
            ("actionscript-class-kwds" variable
               (:constant-flag t
                :default-value (quote ("class" "interface")))
                nil [5356 5414])
            ("actionscript-package-kwds" variable
               (:constant-flag t
                :default-value (quote ("package")))
                nil [5416 5466])
            ("actionscript-other-decl-kwds" variable
               (:constant-flag t
                :default-value (quote ("import")))
                nil [5528 5580])
            ("actionscript-other-decl-2-kwds" variable
               (:constant-flag t
                :default-value (quote ("var" "function" "const")))
                nil [5620 5690])
            ("actionscript-decl-level-kwds" variable
               (:constant-flag t
                :default-value (quote ("extends" "implements")))
                nil [5748 5814])
            ("actionscript-conditional-kwds" variable
               (:constant-flag t
                :default-value (quote ("for" "for each" "if" "while" "switch" "catch")))
                nil [5941 6032])
            ("actionscript-block-stmt-1-kwds" variable
               (:constant-flag t
                :default-value (quote ("do" "else" "finally" "try")))
                nil [6086 6160])
            ("actionscript-simple-stmt-kwds" variable
               (:constant-flag t
                :default-value (quote ("break" "continue" "return" "throw")))
                nil [6222 6303])
            ("actionscript-label-kwds" variable
               (:constant-flag t
                :default-value (quote ("case" "default")))
                nil [6347 6402])
            ("actionscript-expr-kwds" variable
               (:constant-flag t
                :default-value (quote ("super")))
                nil [6456 6501])
            ("actionscript-other-kwds" variable
               (:constant-flag t
                :default-value (quote ("delete" "get" "set" "with")))
                nil [6555 6621])
            ("actionscript-keywords" variable
               (:constant-flag t
                :default-value (regexp-opt (append actionscript-constant-kwds actionscript-global-funcs actionscript-global-classes actionscript-global-props actionscript-specifier-kwds actionscript-class-kwds actionscript-package-kwds actionscript-other-decl-kwds actionscript-other-decl-2-kwds actionscript-decl-level-kwds actionscript-conditional-kwds actionscript-block-stmt-1-kwds actionscript-simple-stmt-kwds actionscript-label-kwds actionscript-expr-kwds actionscript-other-kwds) (quote words)))
                nil [7124 7714])
            ("actionscript-identifier-re" variable
               (:constant-flag t
                :default-value "[a-zA-Z_$][a-zA-Z0-9_$]*")
                nil [7716 7837])
            ("actionscript-mode-hook" variable (:user-visible-flag t) nil [7839 7955])
            ("actionscript-font-lock-level" variable
               (:user-visible-flag t
                :default-value 2)
                nil [7957 8276])
            ("actionscript-font-lock-keywords-1" variable
               (:constant-flag t
                :default-value (list (\` ((\, (regexp-opt preprocessor-kwds (quote words))) 0 (quote font-lock-proceprocessor-face))) (\` ((\, (regexp-opt actionscript-constant-kwds (quote words))) 0 (quote font-lock-constant-face))) (\` ((\, (regexp-opt actionscript-global-funcs (quote words))) 0 (quote font-lock-function-name-face))) (\` ((\, (regexp-opt actionscript-global-props (quote words))) 0 (quote font-lock-variable-name-face))) (\` ((\, (regexp-opt actionscript-word-operators (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-specifier-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-class-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-package-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-other-decl-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-other-decl-2-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-decl-level-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-conditional-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-block-stmt-1-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-simple-stmt-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-label-kwds (quote words))) 0 (quote font-lock-constant-face))) (\` ((\, (regexp-opt actionscript-expr-kwds (quote words))) 0 (quote font-lock-keyword-face))) (\` ((\, (regexp-opt actionscript-other-kwds (quote words))) 0 (quote font-lock-keyword-face)))))
                nil [8358 9978])
            ("actionscript-font-lock-keywords-2" variable
               (:constant-flag t
                :default-value (append actionscript-font-lock-keywords-1 (list (list (concat (regexp-opt actionscript-other-decl-kwds (quote words)) "[ 	]*\\(?:" actionscript-identifier-re "\\.\\)*\\(" actionscript-identifier-re "\\)?") (quote (2 (quote font-lock-type-face) nil t)) (list (concat "[ 	]*\\(" actionscript-identifier-re "\\)\\.") (quote (goto-char (match-end 1))) (quote (goto-char (match-end 0))) (quote (1 (quote font-lock-constant-face) nil t)))) (list (concat (regexp-opt (append actionscript-package-kwds) (quote words)) "[ 	]*\\(" actionscript-identifier-re "\\)?") (quote (2 (quote font-lock-constant-face) nil t))) (list (concat (regexp-opt (append actionscript-class-kwds actionscript-decl-level-kwds) (quote words)) "[ 	]*\\(" actionscript-identifier-re "\\)?") (quote (2 (quote font-lock-type-face) nil t))) (list (concat "\\<function\\>[ 	
]+\\(?:\\(?:get\\|set\\)[ 	
]+\\)?\\(?:\\(" actionscript-identifier-re "\\)\\)?") (quote (1 (quote font-lock-function-name-face) nil t))) (list (concat "\\<for\\>[ 	
]*([ 	
]*\\(?:var[ 	
]+\\)?" actionscript-identifier-re "[ 	
]*\\(?::[ 	
]*\\([a-zA-Z0-9_$*]*\\)\\)?[ 	
]+\\(in\\)[ 	
]+") (quote (2 (quote font-lock-keyword-face) nil t))) (list (concat "\\<var\\>" "\\([ 	]*" actionscript-identifier-re "\\)") (quote (font-lock-match-c-style-declaration-item-and-skip-to-next (goto-char (match-beginning 1)) (goto-char (match-beginning 1)) (1 (quote font-lock-variable-name-face))))))))
                nil [9980 12727])
            ("actionscript-font-lock-keywords-3" variable
               (:constant-flag t
                :default-value (append actionscript-font-lock-keywords-2 (list)))
                nil [12729 13133])
            ("as-get-function-re" function (:arguments ("function-name")) nil [13220 15368])
            ("as-function-re" variable
               (:constant-flag t
                :default-value (as-get-function-re))
                nil [15459 15572])
            ("as-get-attribute-re" function (:arguments ("attribute-name")) nil [15574 16917])
            ("as-attribute-re" variable
               (:constant-flag t
                :default-value (as-get-attribute-re))
                nil [16919 17042])
            ("as-imenu-generic-expression" variable (:default-value (\` ((nil (\, as-function-re) 3)))) nil [17065 17129])
            ("as-imenu-init" function (:arguments ("mode-generic-expression")) nil [17131 17267])
            ("as-get-beginning-of-defun" function nil nil [17269 17422])
            ("as-get-end-of-defun" function nil nil [17424 17720])
            ("as-get-end-of-defun2" function nil nil [17722 18106])
            ("as-beginning-of-defun" function nil nil [18108 18270])
            ("as-inside-defun?" function nil nil [18272 18452])
            ("as-end-of-defun" function nil nil [18454 18670])
            ("as-mark-defun" function nil nil [18672 18919])
            ("actionscript-indent-line" function (:user-visible-flag t) nil [19104 19534])
            ("as3-calculate-indentation" function nil nil [19536 19978])
            ("as3-maybe-skip-leading-close-delim" function nil nil [19980 20148])
            ("as3-face-at-point" function (:arguments ("pos")) nil [20150 20272])
            ("as3-count-scope-depth" function (:arguments ("rstart" "rend")) nil [20274 21203])
            ("actionscript-mode" function (:user-visible-flag t) nil [21305 22408])
            ("add-to-list" code nil nil [22488 22599])
            ("actionscript-mode" package nil nil [22601 22629])
            ("reload-actionscript-mode" function nil nil [22646 22881])
            ("define-key" code nil nil [22883 22937]))          
    :file "actionscript-mode.el"
    :pointmax 22973
    :fsize 22972
    :lastmodtime '(21005 34620 0 0)
    :unmatched-syntax '((close-paren 1560 . 1561) (symbol 1519 . 1536) (open-paren 1518 . 1519))
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!plugins!actionscript-mode!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
