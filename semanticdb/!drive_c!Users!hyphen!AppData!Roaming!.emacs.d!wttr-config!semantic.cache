;; Object wttr-config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "wttr-config/"
  :tables (list 
   (semanticdb-table "wttr-utils.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr/os:windowsp" variable
               (:constant-flag t
                :default-value (eq system-type (quote windows-nt)))
                nil [50 156])
            ("wttr/os:linuxp" variable
               (:constant-flag t
                :default-value (eq system-type (quote gnu/linux)))
                nil [158 252])
            ("wttr/os:win32p" variable
               (:constant-flag t
                :default-value (and wttr/os:windowsp (not (getenv "PROGRAMW6432"))))
                nil [254 419])
            ("wttr/os:win64p" variable
               (:constant-flag t
                :default-value (and wttr/os:windowsp (getenv "PROGRAMW6432")))
                nil [421 581])
            ("wttr/host:MSWSp" variable
               (:constant-flag t
                :default-value (string-equal system-name "WTTR-T5500"))
                nil [583 699])
            ("wttr/host:HOMEp" variable
               (:constant-flag t
                :default-value (string-equal system-name "WTTR-HOME-T61"))
                nil [701 809])
            ("wttr/plugin:base-directory" variable
               (:constant-flag t
                :default-value "~/.emacs.d/plugins")
                nil [811 930])
            ("wttr/prepend-to-exec-path" function (:arguments ("path")) nil [1821 2188])
            ("wttr/log:message" function (:arguments ("message" "args")) nil [2190 2373])
            ("wttr/prepend-to-load-path" function (:arguments ("path")) nil [2426 2577])
            ("wttr/plugin:expand-file-name" function (:arguments ("relative-path" "base-diretory")) nil [2580 2853])
            ("wttr/plugin:prepend-to-load-path" function (:arguments ("plugin-folder-name" "base-diretory")) nil [2856 3507])
            ("wttr/delete-trailing-whitespace-when-save" function nil nil [3510 3790])
            ("wttr/kill-buffer-may-have-clients" function (:user-visible-flag t) nil [3793 4108])
            ("when" code nil nil [4140 4404])
            ("wttr-utils" package nil nil [4407 4428]))          
    :file "wttr-utils.el"
    :pointmax 4429
    :fsize 4548
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-basic.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("setq" code nil nil [73 106])
            ("setq" code nil nil [107 153])
            ("setq" code nil nil [262 294])
            ("global-font-lock-mode" code nil nil [470 495])
            ("tool-bar-mode" code nil nil [535 552])
            ("set-scroll-bar-mode" code nil nil [572 597])
            ("display-time-mode" code nil nil [627 648])
            ("setq" code nil nil [649 682])
            ("setq" code nil nil [683 717])
            ("setq" code nil nil [718 753])
            ("setq" code nil nil [754 785])
            ("setq" code nil nil [822 849])
            ("show-paren-mode" code nil nil [866 885])
            ("setq" code nil nil [886 922])
            ("transient-mark-mode" code nil nil [945 968])
            ("setq" code nil nil [1011 1128])
            ("when" code nil nil [1226 1311])
            ("setq" code nil nil [1420 1453])
            ("put" code nil nil [1487 1524])
            ("setq" code nil nil [1567 1598])
            ("mouse-avoidance-mode" code nil nil [1674 1702])
            ("setq-default" code nil nil [1737 1773])
            ("setq" code nil nil [1774 1802])
            ("fset" code nil nil [1821 1850])
            ("setq" code nil nil [1896 1926])
            ("set-language-environment" code nil nil [1940 1973])
            ("if" code nil nil [1974 2038])
            ("setq" code nil nil [2102 2126])
            ("setq" code nil nil [2350 2394])
            ("setq" code nil nil [2395 2429])
            ("setq" code nil nil [2662 2713])
            ("setq" code nil nil [2738 2778])
            ("setq" code nil nil [2822 2856])
            ("setq" code nil nil [2905 2925])
            ("setq" code nil nil [2997 3019])
            ("setq-default" code nil nil [3137 3172])
            ("setq-default" code nil nil [3173 3199])
            ("setq" code nil nil [3235 3267])
            ("when" code nil nil [3417 3736])
            ("wttr-basic" package nil nil [4343 4364]))          
    :file "wttr-basic.el"
    :pointmax 4365
    :fsize 4506
    :lastmodtime '(21018 55417 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "wttr-font.el"
    :file "wttr-font.el"
    :fsize 3241
    :lastmodtime '(21005 33503 0 0)
    )
   (semanticdb-table "wttr-key.el"
    :file "wttr-key.el"
    :fsize 2056
    :lastmodtime '(21005 33503 0 0)
    )
   (semanticdb-table "wttr-color-theme.el"
    :file "wttr-color-theme.el"
    :fsize 414
    :lastmodtime '(21005 33503 0 0)
    )
   (semanticdb-table "wttr-mode-line.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("wttr-utils" include nil nil [26 47])
            ("cl" include nil nil [70 83])
            ("wttr/mode-line:current-height" function nil nil [86 405])
            ("wttr/defun-bicolor-face" function (:arguments ("face" "fg-color" "bg-color")) nil [407 608])
            ("wttr/defun-bicolor-transition-face" function (:arguments ("face" "bicolor-face-from" "bicolor-face-to")) nil [610 872])
            ("wttr/bicolor-face-attribute" function (:arguments ("face")) nil [882 1007])
            ("wttr/mode-line:data-generator-left-triangle" function (:arguments ("height" "width")) nil [1009 1867])
            ("wttr/mode-line:data-generator-eight-trigrams" function (:arguments ("height" "width")) nil [1869 2619])
            ("wttr/create-bicolor-xpm" function (:arguments ("height" "width" "fg-color" "bg-color" "data-generator")) nil [2621 4258])
            ("wttr/create-bicolor-xpm-from-face" function (:arguments ("height" "width" "bicolor-face" "data-generator")) nil [4262 4516])
            ("wttr/mode-line:create-left-triangle-xpm" function (:arguments ("bicolor-face" "width")) nil [4519 5087])
            ("wttr/mode-line:create-eight-trigrams-xpm" function (:arguments ("bicolor-face")) nil [5089 5434])
            ("wttr/mode-line:decorate-string-face" function (:arguments ("mode-line-var" "bicolor-face")) nil [5437 6784])
            ("wttr/defun-bicolor-face" code nil nil [6788 6876])
            ("wttr/defun-bicolor-face" code nil nil [6877 6950])
            ("wttr/defun-bicolor-transition-face" code nil nil [6951 7158])
            ("wttr/defun-bicolor-transition-face" code nil nil [7159 7334])
            ("wttr/mode-line:create-triangle-seperator" function (:arguments ("face")) nil [7336 7494])
            ("wttr/mode-line:create-eight-trigrams-seperator" function (:arguments ("face")) nil [7496 7661])
            ("wttr/plugin:prepend-to-load-path" code nil nil [7663 7709])
            ("nyan-mode" include nil nil [7710 7730])
            ("setq-default" code nil nil [7731 9161])
            ("wttr-mode-line" package nil nil [10223 10248]))          
    :file "wttr-mode-line.el"
    :pointmax 10250
    :fsize 10493
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax '((close-paren 83 . 84) (symbol 50 . 67) (open-paren 49 . 50))
    )
   (semanticdb-table "wttr-modes.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("cl" include nil nil [27 40])
            ("loop" code nil nil [43 152])
            ("wttr-modes" package nil nil [155 176]))          
    :file "wttr-modes.el"
    :pointmax 177
    :fsize 176
    :lastmodtime '(21005 33503 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!drive_c!Users!hyphen!AppData!Roaming!.emacs.d!wttr-config!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
