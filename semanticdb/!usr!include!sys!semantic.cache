;; Object sys/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sys/"
  :tables
  (list
    (semanticdb-table "cdefs.h"
      :major-mode 'c-mode
      :tags 
        '( ("_CDEFS_H_" variable (:constant-flag t) nil [3392 3401])
            ("__BEGIN_DECLS" variable (:constant-flag t) nil [3499 3512])
            ("__END_DECLS" variable (:constant-flag t) nil [3521 3532])
            ("__P" variable (:constant-flag t) nil [4622 4625])
            ("__CONCAT" variable (:constant-flag t) nil [4679 4687])
            ("__STRING" variable (:constant-flag t) nil [4708 4716])
            ("const" variable (:constant-flag t) nil [5364 5369])
            ("inline" variable (:constant-flag t) nil [5419 5425])
            ("signed" variable (:constant-flag t) nil [5444 5450])
            ("volatile" variable (:constant-flag t) nil [5469 5477])
            ("__dead2" variable (:constant-flag t) nil [5569 5576])
            ("__pure2" variable (:constant-flag t) nil [5612 5619])
            ("__unused" variable (:constant-flag t) nil [5785 5793])
            ("__used" variable (:constant-flag t) nil [5980 5986])
            ("__deprecated" variable (:constant-flag t) nil [6462 6474])
            ("__deprecated_msg" variable (:constant-flag t) nil [6925 6941])
            ("__deprecated_enum_msg" variable (:constant-flag t) nil [7204 7225])
            ("__unavailable" variable (:constant-flag t) nil [7367 7380])
            ("__dead" variable (:constant-flag t) nil [7506 7512])
            ("__pure" variable (:constant-flag t) nil [7521 7527])
            ("__restrict" variable (:constant-flag t) nil [7748 7758])
            ("__header_inline" variable (:constant-flag t) nil [9117 9132])
            ("__header_always_inline" variable (:constant-flag t) nil [9192 9214])
            ("__printflike" variable (:constant-flag t) nil [9824 9836])
            ("__scanflike" variable (:constant-flag t) nil [9932 9943])
            ("__IDSTRING" variable (:constant-flag t) nil [10039 10049])
            ("__COPYRIGHT" variable (:constant-flag t) nil [10133 10144])
            ("__RCSID" variable (:constant-flag t) nil [10204 10211])
            ("__SCCSID" variable (:constant-flag t) nil [10268 10276])
            ("__PROJECT_VERSION" variable (:constant-flag t) nil [10343 10360])
            ("__FBSDID" variable (:constant-flag t) nil [10497 10505])
            ("__DECONST" variable (:constant-flag t) nil [10544 10553])
            ("__DEVOLATILE" variable (:constant-flag t) nil [10642 10654])
            ("__DEQUALIFY" variable (:constant-flag t) nil [10745 10756])
            ("__DARWIN_ONLY_64_BIT_INO_T" variable (:constant-flag t) nil [12448 12474])
            ("__DARWIN_ONLY_VERS_1050" variable (:constant-flag t) nil [12560 12583])
            ("__DARWIN_SUF_UNIX03" variable (:constant-flag t) nil [17800 17819])
            ("__DARWIN_SUF_64_BIT_INO_T" variable (:constant-flag t) nil [17845 17870])
            ("__DARWIN_SUF_NON_CANCELABLE" variable (:constant-flag t) nil [17895 17922])
            ("__DARWIN_SUF_1050" variable (:constant-flag t) nil [17947 17964])
            ("__DARWIN_SUF_EXTSN" variable (:constant-flag t) nil [18018 18036])
            ("__DARWIN_ALIAS" variable (:constant-flag t) nil [18098 18112])
            ("__DARWIN_ALIAS_C" variable (:constant-flag t) nil [18172 18188])
            ("__DARWIN_ALIAS_I" variable (:constant-flag t) nil [18276 18292])
            ("__DARWIN_INODE64" variable (:constant-flag t) nil [18378 18394])
            ("__DARWIN_1050" variable (:constant-flag t) nil [18461 18474])
            ("__DARWIN_1050ALIAS" variable (:constant-flag t) nil [18532 18550])
            ("__DARWIN_1050ALIAS_C" variable (:constant-flag t) nil [18628 18648])
            ("__DARWIN_1050ALIAS_I" variable (:constant-flag t) nil [18753 18773])
            ("__DARWIN_1050INODE64" variable (:constant-flag t) nil [18876 18896])
            ("__DARWIN_EXTSN" variable (:constant-flag t) nil [18980 18994])
            ("__DARWIN_EXTSN_C" variable (:constant-flag t) nil [19053 19069])
            ("sys/_symbol_aliasing.h" include (:system-flag t) nil [19181 19214])
            ("__DARWIN_ALIAS_STARTING" variable (:constant-flag t) nil [19537 19560])
            ("sys/_posix_availability.h" include (:system-flag t) nil [21635 21671])
            ("__POSIX_C_DEPRECATED" variable (:constant-flag t) nil [21681 21701])
            ("__DARWIN_C_ANSI" variable (:constant-flag t) nil [22064 22079])
            ("__DARWIN_C_FULL" variable (:constant-flag t) nil [22104 22119])
            ("__DARWIN_C_LEVEL" variable (:constant-flag t) nil [22364 22380])
            ("__DARWIN_NO_LONG_LONG" variable (:constant-flag t) nil [22913 22934])
            ("__CAST_AWAY_QUALIFIER" variable (:constant-flag t) nil [24615 24636])
            ("__XNU_PRIVATE_EXTERN" variable (:constant-flag t) nil [24899 24919]))          
      :file "cdefs.h"
      :pointmax 25214
      :fsize 25213
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax '((symbol 25169 . 25181) (symbol 25157 . 25168) (symbol 25151 . 25156) (punctuation 25150 . 25151) (symbol 4698 . 4699) (symbol 4693 . 4694))
      :lexical-table 
        '(("const" . ((symbol "__const" 5371 . 5378)))
          ("__dead2" . ((symbol "__attribute__" 5578 . 5591) (semantic-list "((noreturn))" 5591 . 5603)))
          ("__pure2" . ((symbol "__attribute__" 5621 . 5634) (semantic-list "((const))" 5634 . 5643)))
          ("__unavailable" . ((symbol "__attribute__" 7381 . 7394) (semantic-list "((unavailable))" 7394 . 7409)))
          ("__DARWIN_ONLY_VERS_1050" . ((number "0" 12585 . 12586)))
          ("__POSIX_C_DEPRECATED" (spp-arg-list ("ver") 21701 . 21706) . ((spp-symbol-merge ((symbol "___POSIX_C_DEPRECATED_STARTING_" 21707 . 21738) (symbol "ver" 21740 . 21743)) 21707 . 21743)))
          ("__DEVOLATILE" (spp-arg-list ("type" "var") 10654 . 10665) . ((symbol "__CAST_AWAY_QUALIFIER" 10666 . 10687) (semantic-list "(var, volatile, type)" 10687 . 10708)))
          ("__DARWIN_1050" (spp-arg-list ("sym") 18474 . 18479) . ((symbol "__asm" 18481 . 18486) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_1050)" 18486 . 18523)))
          ("inline" . ((symbol "__inline" 5427 . 5435)))
          ("volatile" . ((symbol "__volatile" 5478 . 5488)))
          ("__unused" . ((symbol "__attribute__" 5794 . 5807) (semantic-list "((unused))" 5807 . 5817)))
          ("__printflike" (spp-arg-list ("fmtarg" "firstvararg") 9836 . 9857) . ((symbol "__attribute__" 9862 . 9875) (semantic-list "((__format__ (__printf__, fmtarg, firstvararg)))" 9875 . 9923)))
          ("__DARWIN_ALIAS" (spp-arg-list ("sym") 18112 . 18117) . ((symbol "__asm" 18119 . 18124) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_UNIX03)" 18124 . 18163)))
          ("__DARWIN_ALIAS_C" (spp-arg-list ("sym") 18188 . 18193) . ((symbol "__asm" 18195 . 18200) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03)" 18200 . 18267)))
          ("__DARWIN_1050INODE64" (spp-arg-list ("sym") 18896 . 18901) . ((symbol "__asm" 18902 . 18907) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T)" 18907 . 18970)))
          ("__END_DECLS")
          ("__used" . ((symbol "__attribute__" 5988 . 6001) (semantic-list "((used))" 6001 . 6009)))
          ("__scanflike" (spp-arg-list ("fmtarg" "firstvararg") 9943 . 9964) . ((symbol "__attribute__" 9969 . 9982) (semantic-list "((__format__ (__scanf__, fmtarg, firstvararg)))" 9982 . 10029)))
          ("__IDSTRING" (spp-arg-list ("name" "string") 10049 . 10062) . 
              ((STATIC "static" 10063 . 10069) (CONST "const" 10070 . 10075) (CHAR "char" 10076 . 10080) (symbol "name" 10081 . 10085) (semantic-list "[]" 10085 . 10087) (symbol "__used" 10088 . 10094) (punctuation "=" 10095 . 10096) (symbol "string" 10097 . 10103)))
          ("__DARWIN_ONLY_64_BIT_INO_T" . ((number "0" 12475 . 12476)))
          ("__DARWIN_EXTSN_C" (spp-arg-list ("sym") 19069 . 19074) . ((symbol "__asm" 19076 . 19081) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_EXTSN __DARWIN_SUF_NON_CANCELABLE)" 19081 . 19147)))
          ("__DARWIN_C_FULL" . ((number "900000L" 22128 . 22135)))
          ("__DARWIN_C_LEVEL" . ((symbol "__DARWIN_C_FULL" 22388 . 22403)))
          ("__CAST_AWAY_QUALIFIER" (spp-arg-list ("variable" "qualifier" "type") 24636 . 24663) . 
              ((semantic-list "(type)" 24665 . 24671) (semantic-list "(long)" 24672 . 24678) (semantic-list "(variable)" 24678 . 24688)))
          ("__STRING" (spp-arg-list ("x") 4716 . 4719) . ((string "\"x\"" 4720 . 4723)))
          ("__dead")
          ("__pure")
          ("__header_always_inline" . 
              ((symbol "__header_inline" 9218 . 9233) (symbol "__attribute__" 9234 . 9247) (semantic-list "((__always_inline__))" 9248 . 9269)))
          ("__COPYRIGHT" (spp-arg-list ("s") 10144 . 10147) . ((symbol "__IDSTRING" 10148 . 10158) (semantic-list "(copyright,s)" 10158 . 10171)))
          ("__DARWIN_1050ALIAS" (spp-arg-list ("sym") 18550 . 18555) . ((symbol "__asm" 18557 . 18562) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_UNIX03)" 18562 . 18619)))
          ("__DARWIN_1050ALIAS_I" (spp-arg-list ("sym") 18773 . 18778) . ((symbol "__asm" 18779 . 18784) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03)" 18784 . 18867)))
          ("_CDEFS_H_")
          ("__deprecated" . ((symbol "__attribute__" 6475 . 6488) (semantic-list "((deprecated))" 6488 . 6502)))
          ("__header_inline" . ((STATIC "static" 9143 . 9149) (symbol "__inline" 9150 . 9158)))
          ("__FBSDID" (spp-arg-list ("s") 10505 . 10508))
          ("__DARWIN_EXTSN" (spp-arg-list ("sym") 18994 . 18999) . ((symbol "__asm" 19001 . 19006) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_EXTSN)" 19006 . 19044)))
          ("__DARWIN_C_ANSI" . ((number "010000L" 22088 . 22095)))
          ("__deprecated_enum_msg" (spp-arg-list ("_msg") 7225 . 7231))
          ("__DARWIN_SUF_EXTSN" . ((string "\"$DARWIN_EXTSN\"" 18038 . 18053)))
          ("__DARWIN_INODE64" (spp-arg-list ("sym") 18394 . 18399) . ((symbol "__asm" 18401 . 18406) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T)" 18406 . 18451)))
          ("__BEGIN_DECLS")
          ("__CONCAT" (spp-arg-list ("x" "y") 4687 . 4692))
          ("__deprecated_msg" (spp-arg-list ("_msg") 6941 . 6947) . ((symbol "__attribute__" 6948 . 6961) (semantic-list "((deprecated))" 6961 . 6975)))
          ("__RCSID" (spp-arg-list ("s") 10211 . 10214) . ((symbol "__IDSTRING" 10215 . 10225) (semantic-list "(rcsid,s)" 10225 . 10234)))
          ("__DEQUALIFY" (spp-arg-list ("type" "var") 10756 . 10767) . ((symbol "__CAST_AWAY_QUALIFIER" 10768 . 10789) (semantic-list "(var, const volatile, type)" 10789 . 10816)))
          ("__DARWIN_SUF_64_BIT_INO_T")
          ("__DARWIN_ALIAS_I" (spp-arg-list ("sym") 18292 . 18297) . ((symbol "__asm" 18299 . 18304) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03)" 18304 . 18369)))
          ("__XNU_PRIVATE_EXTERN" . ((symbol "__attribute__" 24920 . 24933) (semantic-list "((visibility(\"hidden\")))" 24933 . 24957)))
          ("__restrict" . ((symbol "restrict" 7759 . 7767)))
          ("__DARWIN_SUF_UNIX03")
          ("__DARWIN_ALIAS_STARTING" (spp-arg-list ("_mac" "_iphone" "x") 19560 . 19578))
          ("__P" (spp-arg-list ("protos") 4625 . 4633) . ((semantic-list "()" 4634 . 4636)))
          ("__SCCSID" (spp-arg-list ("s") 10276 . 10279) . ((symbol "__IDSTRING" 10280 . 10290) (semantic-list "(sccsid,s)" 10290 . 10300)))
          ("__DECONST" (spp-arg-list ("type" "var") 10553 . 10564) . ((symbol "__CAST_AWAY_QUALIFIER" 10565 . 10586) (semantic-list "(var, const, type)" 10586 . 10604)))
          ("__DARWIN_SUF_NON_CANCELABLE")
          ("__DARWIN_NO_LONG_LONG" . ((semantic-list "(defined(__STRICT_ANSI__) \\
				&& (__STDC_VERSION__-0 < 199901L) \\
				&& !defined(__GNUG__))" 22935 . 23029)))
          ("signed" . ((symbol "__signed" 5452 . 5460)))
          ("__PROJECT_VERSION" (spp-arg-list ("s") 10360 . 10363) . ((symbol "__IDSTRING" 10364 . 10374) (semantic-list "(project_version,s)" 10374 . 10393)))
          ("__DARWIN_SUF_1050")
          ("__DARWIN_1050ALIAS_C" (spp-arg-list ("sym") 18648 . 18653) . ((symbol "__asm" 18654 . 18659) (semantic-list "(\"_\" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03)" 18659 . 18744)))
          )
)
    (semanticdb-table "_symbol_aliasing.h"
      :major-mode 'c-mode
      :tags 
        '( ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" variable (:constant-flag t) nil [1623 1666])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" variable (:constant-flag t) nil [1868 1911])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" variable (:constant-flag t) nil [2113 2156])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" variable (:constant-flag t) nil [2358 2401])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" variable (:constant-flag t) nil [2603 2646])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" variable (:constant-flag t) nil [2848 2891])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" variable (:constant-flag t) nil [3093 3136])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" variable (:constant-flag t) nil [3338 3381])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" variable (:constant-flag t) nil [3583 3626])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" variable (:constant-flag t) nil [3828 3871])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" variable (:constant-flag t) nil [4073 4116])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" variable (:constant-flag t) nil [4318 4361])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" variable (:constant-flag t) nil [4563 4606])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" variable (:constant-flag t) nil [4808 4851])
            ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" variable (:constant-flag t) nil [5053 5096])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" variable (:constant-flag t) nil [5290 5328])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" variable (:constant-flag t) nil [5522 5560])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" variable (:constant-flag t) nil [5754 5792])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" variable (:constant-flag t) nil [5986 6024])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" variable (:constant-flag t) nil [6218 6256])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" variable (:constant-flag t) nil [6450 6488])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" variable (:constant-flag t) nil [6682 6720])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" variable (:constant-flag t) nil [6914 6952])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" variable (:constant-flag t) nil [7146 7184])
            ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" variable (:constant-flag t) nil [7378 7416]))          
      :file "_symbol_aliasing.h"
      :pointmax 7428
      :fsize 7427
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" (spp-arg-list ("x") 2156 . 2159))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" (spp-arg-list ("x") 4361 . 4364))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" (spp-arg-list ("x") 6952 . 6955))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" (spp-arg-list ("x") 7184 . 7187))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" (spp-arg-list ("x") 7416 . 7419))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" (spp-arg-list ("x") 3136 . 3139))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" (spp-arg-list ("x") 3381 . 3384))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" (spp-arg-list ("x") 5096 . 5099))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" (spp-arg-list ("x") 3626 . 3629))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" (spp-arg-list ("x") 3871 . 3874))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" (spp-arg-list ("x") 5328 . 5331))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" (spp-arg-list ("x") 2401 . 2404))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" (spp-arg-list ("x") 5560 . 5563))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" (spp-arg-list ("x") 2646 . 2649))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" (spp-arg-list ("x") 4606 . 4609))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" (spp-arg-list ("x") 5792 . 5795))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" (spp-arg-list ("x") 2891 . 2894))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" (spp-arg-list ("x") 4851 . 4854))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" (spp-arg-list ("x") 6024 . 6027))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" (spp-arg-list ("x") 6256 . 6259))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" (spp-arg-list ("x") 1666 . 1669))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" (spp-arg-list ("x") 6488 . 6491))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" (spp-arg-list ("x") 1911 . 1914))
          ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" (spp-arg-list ("x") 4116 . 4119))
          ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" (spp-arg-list ("x") 6720 . 6723))
          )
)
    (semanticdb-table "_posix_availability.h"
      :major-mode 'c-mode
      :tags 
        '( ("___POSIX_C_DEPRECATED_STARTING_198808L" variable (:constant-flag t) nil [1599 1637])
            ("___POSIX_C_DEPRECATED_STARTING_199009L" variable (:constant-flag t) nil [1809 1847])
            ("___POSIX_C_DEPRECATED_STARTING_199209L" variable (:constant-flag t) nil [2019 2057])
            ("___POSIX_C_DEPRECATED_STARTING_199309L" variable (:constant-flag t) nil [2229 2267])
            ("___POSIX_C_DEPRECATED_STARTING_199506L" variable (:constant-flag t) nil [2439 2477])
            ("___POSIX_C_DEPRECATED_STARTING_200112L" variable (:constant-flag t) nil [2649 2687])
            ("___POSIX_C_DEPRECATED_STARTING_200809L" variable (:constant-flag t) nil [2859 2897]))          
      :file "_posix_availability.h"
      :pointmax 2906
      :fsize 2905
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("___POSIX_C_DEPRECATED_STARTING_199506L")
          ("___POSIX_C_DEPRECATED_STARTING_200112L")
          ("___POSIX_C_DEPRECATED_STARTING_199009L")
          ("___POSIX_C_DEPRECATED_STARTING_198808L")
          ("___POSIX_C_DEPRECATED_STARTING_199209L")
          ("___POSIX_C_DEPRECATED_STARTING_199309L")
          ("___POSIX_C_DEPRECATED_STARTING_200809L")
          )
)
    (semanticdb-table "types.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_TYPES_H_" variable (:constant-flag t) nil [3621 3634])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3636 3665])
            ("sys/cdefs.h" include (:system-flag t) nil [3689 3711])
            ("machine/types.h" include (:system-flag t) nil [3754 3780])
            ("sys/_types.h" include (:system-flag t) nil [3781 3804])
            ("machine/endian.h" include (:system-flag t) nil [3806 3833])
            ("u_quad_t" type
               (:typedef ("u_int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4179 4207])
            ("quad_t" type
               (:typedef ("int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4220 4245])
            ("qaddr_t" type
               (:typedef ("quad_t" type (:type "class") nil nil)
                :pointer 1
                :type "typedef")
                nil [4246 4272])
            ("caddr_t" type
               (:typedef ("char")
                :pointer 1
                :type "typedef")
                nil [4274 4299])
            ("daddr_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4319 4345])
            ("sys/_types/_dev_t.h" include (:system-flag t) nil [4366 4396])
            ("fixpt_t" type
               (:typedef ("u_int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4422 4449])
            ("sys/_types/_blkcnt_t.h" include (:system-flag t) nil [4476 4509])
            ("sys/_types/_blksize_t.h" include (:system-flag t) nil [4510 4544])
            ("sys/_types/_gid_t.h" include (:system-flag t) nil [4545 4575])
            ("sys/_types/_in_addr_t.h" include (:system-flag t) nil [4576 4610])
            ("sys/_types/_in_port_t.h" include (:system-flag t) nil [4611 4645])
            ("sys/_types/_ino_t.h" include (:system-flag t) nil [4646 4676])
            ("sys/_types/_key_t.h" include (:system-flag t) nil [4866 4896])
            ("sys/_types/_mode_t.h" include (:system-flag t) nil [4897 4928])
            ("sys/_types/_nlink_t.h" include (:system-flag t) nil [4929 4961])
            ("sys/_types/_id_t.h" include (:system-flag t) nil [4962 4991])
            ("sys/_types/_pid_t.h" include (:system-flag t) nil [4992 5022])
            ("sys/_types/_off_t.h" include (:system-flag t) nil [5023 5053])
            ("segsz_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [5055 5081])
            ("swblk_t" type
               (:typedef ("int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [5101 5127])
            ("sys/_types/_uid_t.h" include (:system-flag t) nil [5147 5177])
            ("sys/_types/_clock_t.h" include (:system-flag t) nil [5985 6017])
            ("sys/_types/_size_t.h" include (:system-flag t) nil [6018 6049])
            ("sys/_types/_ssize_t.h" include (:system-flag t) nil [6050 6082])
            ("sys/_types/_time_t.h" include (:system-flag t) nil [6083 6114])
            ("sys/_types/_useconds_t.h" include (:system-flag t) nil [6116 6151])
            ("sys/_types/_suseconds_t.h" include (:system-flag t) nil [6152 6188])
            ("sys/_types/_pthread_attr_t.h" include (:system-flag t) nil [7465 7504])
            ("sys/_types/_pthread_cond_t.h" include (:system-flag t) nil [7505 7544])
            ("sys/_types/_pthread_condattr_t.h" include (:system-flag t) nil [7545 7588])
            ("sys/_types/_pthread_mutex_t.h" include (:system-flag t) nil [7589 7629])
            ("sys/_types/_pthread_mutexattr_t.h" include (:system-flag t) nil [7630 7674])
            ("sys/_types/_pthread_once_t.h" include (:system-flag t) nil [7675 7714])
            ("sys/_types/_pthread_rwlock_t.h" include (:system-flag t) nil [7715 7756])
            ("sys/_types/_pthread_rwlockattr_t.h" include (:system-flag t) nil [7757 7802])
            ("sys/_types/_pthread_t.h" include (:system-flag t) nil [7803 7837])
            ("sys/_types/_pthread_key_t.h" include (:system-flag t) nil [7867 7905])
            ("sys/_types/_fsblkcnt_t.h" include (:system-flag t) nil [7935 7970])
            ("sys/_types/_fsfilcnt_t.h" include (:system-flag t) nil [7971 8006]))          
      :file "types.h"
      :pointmax 8036
      :fsize 8035
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS_TYPES_H_")
          )
)
    (semanticdb-table "file.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_FILE_H_" variable (:constant-flag t) nil [3324 3336])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3338 3367])
            ("sys/types.h" include (:system-flag t) nil [3368 3390])
            ("sys/fcntl.h" include (:system-flag t) nil [3391 3413])
            ("sys/unistd.h" include (:system-flag t) nil [3414 3437])
            ("sys/queue.h" include (:system-flag t) nil [3438 3460])
            ("sys/cdefs.h" include (:system-flag t) nil [3461 3483])
            ("_KAUTH_CRED_T" variable (:constant-flag t) nil [3516 3529])
            ("ucred" type
               (:prototype t
                :type "struct")
                nil [3530 3543])
            ("kauth_cred_t" type
               (:typedef ("ucred" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [3544 3579])
            ("posix_cred" type
               (:prototype t
                :type "struct")
                nil [3580 3598])
            ("posix_cred_t" type
               (:typedef ("posix_cred" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [3599 3639]))          
      :file "file.h"
      :pointmax 3723
      :fsize 3722
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS_FILE_H_")
          ("_KAUTH_CRED_T")
          )
)
    (semanticdb-table "time.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_TIME_H_" variable (:constant-flag t) nil [3312 3324])
            ("sys/cdefs.h" include (:system-flag t) nil [3326 3348])
            ("sys/_types.h" include (:system-flag t) nil [3349 3372])
            ("Availability.h" include (:system-flag t) nil [3373 3398])
            ("sys/_types/_fd_def.h" include (:system-flag t) nil [3549 3580])
            ("sys/_types/_timespec.h" include (:system-flag t) nil [3581 3614])
            ("sys/_types/_timeval.h" include (:system-flag t) nil [3615 3647])
            ("sys/_types/_time_t.h" include (:system-flag t) nil [3649 3680])
            ("sys/_types/_suseconds_t.h" include (:system-flag t) nil [3681 3717])
            ("itimerval" type
               (:members 
                  ( ("it_interval" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [3829 3856])
                    ("it_value" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [3879 3903]))                  
                :type "struct")
                nil [3809 3926])
            ("ITIMER_REAL" variable (:constant-flag t) nil [4019 4030])
            ("ITIMER_VIRTUAL" variable (:constant-flag t) nil [4041 4055])
            ("ITIMER_PROF" variable (:constant-flag t) nil [4066 4077])
            ("sys/_types/_fd_setsize.h" include (:system-flag t) nil [4317 4352])
            ("sys/_types/_fd_set.h" include (:system-flag t) nil [4353 4384])
            ("sys/_types/_fd_clr.h" include (:system-flag t) nil [4385 4416])
            ("sys/_types/_fd_isset.h" include (:system-flag t) nil [4417 4450])
            ("sys/_types/_fd_zero.h" include (:system-flag t) nil [4451 4483])
            ("getitimer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [7070 7074])
                    ("" variable
                       (:pointer 1
                        :type ("itimerval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7075 7094]))                  
                :type "int")
                nil [7056 7095])
            ("gettimeofday" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7113 7140])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7130 7141])
                    ("" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7142 7159])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7149 7160]))                  
                :type "int")
                nil [7096 7161])
            ("sys/_select.h" include (:system-flag t) nil [7163 7187])
            ("setitimer" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [7228 7232])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("itimerval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7233 7268])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7258 7269])
                    ("" variable
                       (:pointer 1
                        :type ("itimerval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7272 7301])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7291 7302]))                  
                :type "int")
                nil [7214 7303])
            ("utimes" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7315 7328])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7329 7352]))                  
                :type "int")
                nil [7304 7353]))          
      :file "time.h"
      :pointmax 7396
      :fsize 7395
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("ITIMER_PROF" . ((number "2" 4078 . 4079)))
          ("ITIMER_REAL" . ((number "0" 4031 . 4032)))
          ("ITIMER_VIRTUAL" . ((number "1" 4056 . 4057)))
          ("_SYS_TIME_H_")
          )
)
    (semanticdb-table "resource.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_RESOURCE_H_" variable (:constant-flag t) nil [3309 3325])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3327 3356])
            ("sys/cdefs.h" include (:system-flag t) nil [3357 3379])
            ("sys/_types.h" include (:system-flag t) nil [3380 3403])
            ("Availability.h" include (:system-flag t) nil [3515 3540])
            ("sys/_types/_timeval.h" include (:system-flag t) nil [3626 3658])
            ("sys/_types/_id_t.h" include (:system-flag t) nil [3727 3756])
            ("rlim_t" type
               (:typedef ("__uint64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3827 3853])
            ("PRIO_PROCESS" variable (:constant-flag t) nil [4023 4035])
            ("PRIO_PGRP" variable (:constant-flag t) nil [4078 4087])
            ("PRIO_USER" variable (:constant-flag t) nil [4130 4139])
            ("RUSAGE_SELF" variable (:constant-flag t) nil [5057 5068])
            ("RUSAGE_CHILDREN" variable (:constant-flag t) nil [5114 5129])
            ("rusage" type
               (:members 
                  ( ("ru_utime" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [5554 5578])
                    ("ru_stime" variable (:type ("timeval" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [5606 5630])
                    ("ru_maxrss" variable (:type "long") (reparse-symbol classsubparts) [5940 5955])
                    ("ru_first" variable (:constant-flag t) (reparse-symbol classsubparts) [5998 6006])
                    ("ru_ixrss" variable (:type "long") (reparse-symbol classsubparts) [6053 6067])
                    ("ru_idrss" variable (:type "long") (reparse-symbol classsubparts) [6109 6123])
                    ("ru_isrss" variable (:type "long") (reparse-symbol classsubparts) [6161 6175])
                    ("ru_minflt" variable (:type "long") (reparse-symbol classsubparts) [6213 6228])
                    ("ru_majflt" variable (:type "long") (reparse-symbol classsubparts) [6256 6271])
                    ("ru_nswap" variable (:type "long") (reparse-symbol classsubparts) [6297 6311])
                    ("ru_inblock" variable (:type "long") (reparse-symbol classsubparts) [6331 6347])
                    ("ru_oublock" variable (:type "long") (reparse-symbol classsubparts) [6388 6404])
                    ("ru_msgsnd" variable (:type "long") (reparse-symbol classsubparts) [6446 6461])
                    ("ru_msgrcv" variable (:type "long") (reparse-symbol classsubparts) [6493 6508])
                    ("ru_nsignals" variable (:type "long") (reparse-symbol classsubparts) [6544 6561])
                    ("ru_nvcsw" variable (:type "long") (reparse-symbol classsubparts) [6596 6610])
                    ("ru_nivcsw" variable (:type "long") (reparse-symbol classsubparts) [6655 6670])
                    ("ru_last" variable (:constant-flag t) (reparse-symbol classsubparts) [6700 6707]))                  
                :type "struct")
                nil [5537 6804])
            ("RLIM_INFINITY" variable (:constant-flag t) nil [8752 8765])
            ("RLIM_SAVED_MAX" variable (:constant-flag t) nil [8817 8831])
            ("RLIM_SAVED_CUR" variable (:constant-flag t) nil [8887 8901])
            ("RLIMIT_CPU" variable (:constant-flag t) nil [9103 9113])
            ("RLIMIT_FSIZE" variable (:constant-flag t) nil [9152 9164])
            ("RLIMIT_DATA" variable (:constant-flag t) nil [9192 9203])
            ("RLIMIT_STACK" variable (:constant-flag t) nil [9239 9251])
            ("RLIMIT_CORE" variable (:constant-flag t) nil [9280 9291])
            ("RLIMIT_AS" variable (:constant-flag t) nil [9324 9333])
            ("RLIMIT_NOFILE" variable (:constant-flag t) nil [9649 9662])
            ("_RLIMIT_POSIX_FLAG" variable (:constant-flag t) nil [9852 9870])
            ("rlimit" type
               (:members 
                  ( ("rlim_cur" variable (:type ("rlim_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10081 10097])
                    ("rlim_max" variable (:type ("rlim_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10127 10143]))                  
                :type "struct")
                nil [10064 10180])
            ("getpriority" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [11398 11402])
                    ("" variable (:type ("id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11403 11408]))                  
                :type "int")
                nil [11382 11409])
            ("getrlimit" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [11594 11598])
                    ("" variable
                       (:pointer 1
                        :type ("rlimit" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11599 11615]))                  
                :type "int")
                nil [11580 11642])
            ("getrusage" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [11657 11661])
                    ("" variable
                       (:pointer 1
                        :type ("rusage" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11662 11678]))                  
                :type "int")
                nil [11643 11679])
            ("setpriority" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [11696 11700])
                    ("" variable (:type ("id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11701 11706])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [11707 11711]))                  
                :type "int")
                nil [11680 11712])
            ("setrlimit" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [11902 11906])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("rlimit" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11907 11929]))                  
                :type "int")
                nil [11888 11956]))          
      :file "resource.h"
      :pointmax 12001
      :fsize 12000
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("ru_first" . ((symbol "ru_ixrss" 6007 . 6015)))
          ("PRIO_PROCESS" . ((number "0" 4036 . 4037)))
          ("RUSAGE_SELF" . ((number "0" 5069 . 5070)))
          ("RLIMIT_STACK" . ((number "3" 9252 . 9253)))
          ("_SYS_RESOURCE_H_")
          ("RUSAGE_CHILDREN" . ((punctuation "-" 5130 . 5131) (number "1" 5131 . 5132)))
          ("_RLIMIT_POSIX_FLAG" . ((number "0x1000" 9871 . 9877)))
          ("RLIM_SAVED_MAX" . ((symbol "RLIM_INFINITY" 8832 . 8845)))
          ("RLIMIT_CPU" . ((number "0" 9114 . 9115)))
          ("RLIM_INFINITY" . ((semantic-list "(((__uint64_t)1 << 63) - 1)" 8766 . 8793)))
          ("RLIMIT_DATA" . ((number "2" 9204 . 9205)))
          ("RLIMIT_FSIZE" . ((number "1" 9165 . 9166)))
          ("RLIM_SAVED_CUR" . ((symbol "RLIM_INFINITY" 8902 . 8915)))
          ("ru_last" . ((symbol "ru_nivcsw" 6709 . 6718)))
          ("RLIMIT_AS" . ((number "5" 9334 . 9335)))
          ("PRIO_USER" . ((number "2" 4140 . 4141)))
          ("RLIMIT_CORE" . ((number "4" 9292 . 9293)))
          ("PRIO_PGRP" . ((number "1" 4088 . 4089)))
          ("RLIMIT_NOFILE" . ((number "8" 9663 . 9664)))
          )
)
    (semanticdb-table "errno.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_ERRNO_H_" variable (:constant-flag t) nil [3616 3629])
            ("sys/cdefs.h" include (:system-flag t) nil [3631 3653])
            ("__error" function
               (:prototype-flag t
                :pointer 1
                :typemodifiers ("extern")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3799 3804]))                  
                :type "int")
                nil [3778 3805])
            ("errno" variable (:constant-flag t) nil [3814 3819])
            ("EPERM" variable (:constant-flag t) nil [3877 3882])
            ("ENOENT" variable (:constant-flag t) nil [3925 3931])
            ("ESRCH" variable (:constant-flag t) nil [3976 3981])
            ("EINTR" variable (:constant-flag t) nil [4016 4021])
            ("EIO" variable (:constant-flag t) nil [4064 4067])
            ("ENXIO" variable (:constant-flag t) nil [4105 4110])
            ("E2BIG" variable (:constant-flag t) nil [4151 4156])
            ("ENOEXEC" variable (:constant-flag t) nil [4198 4205])
            ("EBADF" variable (:constant-flag t) nil [4242 4247])
            ("ECHILD" variable (:constant-flag t) nil [4286 4292])
            ("EDEADLK" variable (:constant-flag t) nil [4331 4338])
            ("ENOMEM" variable (:constant-flag t) nil [4409 4415])
            ("EACCES" variable (:constant-flag t) nil [4458 4464])
            ("EFAULT" variable (:constant-flag t) nil [4502 4508])
            ("EBUSY" variable (:constant-flag t) nil [4636 4641])
            ("EEXIST" variable (:constant-flag t) nil [4684 4690])
            ("EXDEV" variable (:constant-flag t) nil [4722 4727])
            ("ENODEV" variable (:constant-flag t) nil [4765 4771])
            ("ENOTDIR" variable (:constant-flag t) nil [4825 4832])
            ("EISDIR" variable (:constant-flag t) nil [4868 4874])
            ("EINVAL" variable (:constant-flag t) nil [4909 4915])
            ("ENFILE" variable (:constant-flag t) nil [4952 4958])
            ("EMFILE" variable (:constant-flag t) nil [5008 5014])
            ("ENOTTY" variable (:constant-flag t) nil [5054 5060])
            ("ETXTBSY" variable (:constant-flag t) nil [5111 5118])
            ("EFBIG" variable (:constant-flag t) nil [5153 5158])
            ("ENOSPC" variable (:constant-flag t) nil [5193 5199])
            ("ESPIPE" variable (:constant-flag t) nil [5243 5249])
            ("EROFS" variable (:constant-flag t) nil [5282 5287])
            ("EMLINK" variable (:constant-flag t) nil [5329 5335])
            ("EPIPE" variable (:constant-flag t) nil [5370 5375])
            ("EDOM" variable (:constant-flag t) nil [5428 5432])
            ("ERANGE" variable (:constant-flag t) nil [5485 5491])
            ("EAGAIN" variable (:constant-flag t) nil [5566 5572])
            ("EWOULDBLOCK" variable (:constant-flag t) nil [5625 5636])
            ("EINPROGRESS" variable (:constant-flag t) nil [5681 5692])
            ("EALREADY" variable (:constant-flag t) nil [5737 5745])
            ("ENOTSOCK" variable (:constant-flag t) nil [5841 5849])
            ("EDESTADDRREQ" variable (:constant-flag t) nil [5899 5911])
            ("EMSGSIZE" variable (:constant-flag t) nil [5959 5967])
            ("EPROTOTYPE" variable (:constant-flag t) nil [6003 6013])
            ("ENOPROTOOPT" variable (:constant-flag t) nil [6063 6074])
            ("EPROTONOSUPPORT" variable (:constant-flag t) nil [6116 6131])
            ("ENOTSUP" variable (:constant-flag t) nil [6280 6287])
            ("EAFNOSUPPORT" variable (:constant-flag t) nil [7027 7039])
            ("EADDRINUSE" variable (:constant-flag t) nil [7106 7116])
            ("EADDRNOTAVAIL" variable (:constant-flag t) nil [7158 7171])
            ("ENETDOWN" variable (:constant-flag t) nil [7271 7279])
            ("ENETUNREACH" variable (:constant-flag t) nil [7314 7325])
            ("ENETRESET" variable (:constant-flag t) nil [7367 7376])
            ("ECONNABORTED" variable (:constant-flag t) nil [7431 7443])
            ("ECONNRESET" variable (:constant-flag t) nil [7495 7505])
            ("ENOBUFS" variable (:constant-flag t) nil [7549 7556])
            ("EISCONN" variable (:constant-flag t) nil [7602 7609])
            ("ENOTCONN" variable (:constant-flag t) nil [7657 7665])
            ("ETIMEDOUT" variable (:constant-flag t) nil [7881 7890])
            ("ECONNREFUSED" variable (:constant-flag t) nil [7929 7941])
            ("ELOOP" variable (:constant-flag t) nil [7980 7985])
            ("ENAMETOOLONG" variable (:constant-flag t) nil [8039 8051])
            ("EHOSTUNREACH" variable (:constant-flag t) nil [8205 8217])
            ("ENOTEMPTY" variable (:constant-flag t) nil [8253 8262])
            ("EDQUOT" variable (:constant-flag t) nil [8456 8462])
            ("ESTALE" variable (:constant-flag t) nil [8529 8535])
            ("ENOLCK" variable (:constant-flag t) nil [8942 8948])
            ("ENOSYS" variable (:constant-flag t) nil [8987 8993])
            ("EOVERFLOW" variable (:constant-flag t) nil [9374 9383])
            ("ECANCELED" variable (:constant-flag t) nil [9724 9733])
            ("EIDRM" variable (:constant-flag t) nil [9772 9777])
            ("ENOMSG" variable (:constant-flag t) nil [9816 9822])
            ("EILSEQ" variable (:constant-flag t) nil [9872 9878])
            ("EBADMSG" variable (:constant-flag t) nil [10015 10022])
            ("EMULTIHOP" variable (:constant-flag t) nil [10054 10063])
            ("ENODATA" variable (:constant-flag t) nil [10091 10098])
            ("ENOLINK" variable (:constant-flag t) nil [10149 10156])
            ("ENOSR" variable (:constant-flag t) nil [10185 10190])
            ("ENOSTR" variable (:constant-flag t) nil [10230 10236])
            ("EPROTO" variable (:constant-flag t) nil [10269 10275])
            ("ETIME" variable (:constant-flag t) nil [10311 10316])
            ("ENOPOLICY" variable (:constant-flag t) nil [10578 10587]))          
      :file "errno.h"
      :pointmax 10965
      :fsize 10964
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("ENOMEM" . ((number "12" 4417 . 4419)))
          ("EINVAL" . ((number "22" 4917 . 4919)))
          ("EINPROGRESS" . ((number "36" 5693 . 5695)))
          ("ECONNRESET" . ((number "54" 7506 . 7508)))
          ("ENOBUFS" . ((number "55" 7558 . 7560)))
          ("ETIMEDOUT" . ((number "60" 7891 . 7893)))
          ("ENOSTR" . ((number "99" 10238 . 10240)))
          ("ETIME" . ((number "101" 10318 . 10321)))
          ("ENOENT" . ((number "2" 3933 . 3934)))
          ("ESRCH" . ((number "3" 3983 . 3984)))
          ("EBADF" . ((number "9" 4249 . 4250)))
          ("ECHILD" . ((number "10" 4294 . 4296)))
          ("EAGAIN" . ((number "35" 5574 . 5576)))
          ("ENETDOWN" . ((number "50" 7280 . 7282)))
          ("EHOSTUNREACH" . ((number "65" 8218 . 8220)))
          ("EILSEQ" . ((number "92" 9880 . 9882)))
          ("ENOSR" . ((number "98" 10192 . 10194)))
          ("ENOPROTOOPT" . ((number "42" 6075 . 6077)))
          ("EADDRINUSE" . ((number "48" 7117 . 7119)))
          ("EBADMSG" . ((number "94" 10024 . 10026)))
          ("ENODATA" . ((number "96" 10100 . 10102)))
          ("ENOPOLICY" . ((number "103" 10588 . 10591)))
          ("_SYS_ERRNO_H_")
          ("EINTR" . ((number "4" 4023 . 4024)))
          ("ENOTDIR" . ((number "20" 4834 . 4836)))
          ("EISDIR" . ((number "21" 4876 . 4878)))
          ("ENOTTY" . ((number "25" 5062 . 5064)))
          ("ENOTSUP" . ((number "45" 6289 . 6291)))
          ("EDQUOT" . ((number "69" 8464 . 8466)))
          ("ESTALE" . ((number "70" 8537 . 8539)))
          ("ENOSYS" . ((number "78" 8995 . 8997)))
          ("EOVERFLOW" . ((number "84" 9384 . 9386)))
          ("EXDEV" . ((number "18" 4729 . 4731)))
          ("EMFILE" . ((number "24" 5016 . 5018)))
          ("EFBIG" . ((number "27" 5160 . 5162)))
          ("EALREADY" . ((number "37" 5746 . 5748)))
          ("ENOTSOCK" . ((number "38" 5850 . 5852)))
          ("EAFNOSUPPORT" . ((number "47" 7040 . 7042)))
          ("ENETRESET" . ((number "52" 7377 . 7379)))
          ("ESPIPE" . ((number "29" 5251 . 5253)))
          ("EPIPE" . ((number "32" 5377 . 5379)))
          ("ERANGE" . ((number "34" 5493 . 5495)))
          ("ENAMETOOLONG" . ((number "63" 8052 . 8054)))
          ("ENODEV" . ((number "19" 4773 . 4775)))
          ("EROFS" . ((number "30" 5289 . 5291)))
          ("ENOTEMPTY" . ((number "66" 8263 . 8265)))
          ("EIDRM" . ((number "90" 9779 . 9781)))
          ("ENFILE" . ((number "23" 4960 . 4962)))
          ("EDOM" . ((number "33" 5434 . 5436)))
          ("EADDRNOTAVAIL" . ((number "49" 7172 . 7174)))
          ("EACCES" . ((number "13" 4466 . 4468)))
          ("EEXIST" . ((number "17" 4692 . 4694)))
          ("EDESTADDRREQ" . ((number "39" 5912 . 5914)))
          ("EPERM" . ((number "1" 3884 . 3885)))
          ("EIO" . ((number "5" 4069 . 4070)))
          ("EDEADLK" . ((number "11" 4340 . 4342)))
          ("EMLINK" . ((number "31" 5337 . 5339)))
          ("EMSGSIZE" . ((number "40" 5968 . 5970)))
          ("ECONNREFUSED" . ((number "61" 7942 . 7944)))
          ("ENOLCK" . ((number "77" 8950 . 8952)))
          ("ENOLINK" . ((number "97" 10158 . 10160)))
          ("EPROTO" . ((number "100" 10277 . 10280)))
          ("ENXIO" . ((number "6" 4112 . 4113)))
          ("E2BIG" . ((number "7" 4158 . 4159)))
          ("EFAULT" . ((number "14" 4510 . 4512)))
          ("ECANCELED" . ((number "89" 9734 . 9736)))
          ("ENOMSG" . ((number "91" 9824 . 9826)))
          ("ENOEXEC" . ((number "8" 4207 . 4208)))
          ("EBUSY" . ((number "16" 4643 . 4645)))
          ("EWOULDBLOCK" . ((symbol "EAGAIN" 5637 . 5643)))
          ("EPROTONOSUPPORT" . ((number "43" 6132 . 6134)))
          ("ENETUNREACH" . ((number "51" 7326 . 7328)))
          ("ECONNABORTED" . ((number "53" 7444 . 7446)))
          ("EISCONN" . ((number "56" 7611 . 7613)))
          ("ENOTCONN" . ((number "57" 7666 . 7668)))
          ("ELOOP" . ((number "62" 7987 . 7989)))
          ("errno" . ((semantic-list "(*__error())" 3820 . 3832)))
          ("ETXTBSY" . ((number "26" 5120 . 5122)))
          ("ENOSPC" . ((number "28" 5201 . 5203)))
          ("EPROTOTYPE" . ((number "41" 6014 . 6016)))
          ("EMULTIHOP" . ((number "95" 10064 . 10066)))
          )
)
    (semanticdb-table "appleapiopts.h"
      :major-mode 'c-mode
      :tags 
        '( ("__SYS_APPLEAPIOPTS_H__" variable (:constant-flag t) nil [1375 1397])
            ("__APPLE_API_STANDARD" variable (:constant-flag t) nil [1437 1457])
            ("__APPLE_API_STABLE" variable (:constant-flag t) nil [1528 1546])
            ("__APPLE_API_EVOLVING" variable (:constant-flag t) nil [1657 1677])
            ("__APPLE_API_UNSTABLE" variable (:constant-flag t) nil [1750 1770])
            ("__APPLE_API_PRIVATE" variable (:constant-flag t) nil [1842 1861])
            ("__APPLE_API_OBSOLETE" variable (:constant-flag t) nil [1933 1953]))          
      :file "appleapiopts.h"
      :pointmax 2071
      :fsize 2070
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("__APPLE_API_STANDARD")
          ("__APPLE_API_UNSTABLE")
          ("__APPLE_API_OBSOLETE")
          ("__APPLE_API_EVOLVING")
          ("__SYS_APPLEAPIOPTS_H__")
          ("__APPLE_API_PRIVATE")
          ("__APPLE_API_STABLE")
          )
)
    (semanticdb-table "_types.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS__TYPES_H_" variable (:constant-flag t) nil [1362 1376])
            ("sys/cdefs.h" include (:system-flag t) nil [1378 1400])
            ("machine/_types.h" include (:system-flag t) nil [1401 1428])
            ("__PTHREAD_SIZE__" variable (:constant-flag t) nil [1863 1879])
            ("__PTHREAD_ATTR_SIZE__" variable (:constant-flag t) nil [1903 1924])
            ("__PTHREAD_MUTEXATTR_SIZE__" variable (:constant-flag t) nil [1941 1967])
            ("__PTHREAD_MUTEX_SIZE__" variable (:constant-flag t) nil [1978 2000])
            ("__PTHREAD_CONDATTR_SIZE__" variable (:constant-flag t) nil [2016 2041])
            ("__PTHREAD_COND_SIZE__" variable (:constant-flag t) nil [2053 2074])
            ("__PTHREAD_ONCE_SIZE__" variable (:constant-flag t) nil [2091 2112])
            ("__PTHREAD_RWLOCK_SIZE__" variable (:constant-flag t) nil [2128 2151])
            ("__PTHREAD_RWLOCKATTR_SIZE__" variable (:constant-flag t) nil [2167 2194])
            ("__darwin_pthread_handler_rec" type
               (:members 
                  ( ("__routine" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [2288 2295]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2260 2296])
                    ("__arg" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [2320 2342])
                    ("__next" variable
                       (:pointer 1
                        :type ("__darwin_pthread_handler_rec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [2369 2413]))                  
                :type "struct")
                nil [2221 2416])
            ("_opaque_pthread_attr_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2449 2460])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2461 2498]))                  
                :type "struct")
                nil [2417 2501])
            ("_opaque_pthread_cond_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2534 2545])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2546 2583]))                  
                :type "struct")
                nil [2502 2586])
            ("_opaque_pthread_condattr_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2623 2634])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2635 2676]))                  
                :type "struct")
                nil [2587 2679])
            ("_opaque_pthread_mutex_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2713 2724])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2725 2763]))                  
                :type "struct")
                nil [2680 2766])
            ("_opaque_pthread_mutexattr_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2804 2815])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2816 2858]))                  
                :type "struct")
                nil [2767 2861])
            ("_opaque_pthread_once_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2894 2905])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2906 2943]))                  
                :type "struct")
                nil [2862 2946])
            ("_opaque_pthread_rwlock_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [2981 2992])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [2993 3032]))                  
                :type "struct")
                nil [2947 3035])
            ("_opaque_pthread_rwlockattr_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [3074 3085])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [3086 3129]))                  
                :type "struct")
                nil [3036 3132])
            ("_opaque_pthread_t" type
               (:members 
                  ( ("__sig" variable (:type "long") (reparse-symbol classsubparts) [3160 3171])
                    ("__cleanup_stack" variable
                       (:pointer 1
                        :type ("__darwin_pthread_handler_rec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [3172 3226])
                    ("__opaque" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [3227 3259]))                  
                :type "struct")
                nil [3133 3262])
            ("__DARWIN_NULL" variable (:constant-flag t) nil [3508 3521])
            ("__darwin_blkcnt_t" type
               (:typedef ("__int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3771 3807])
            ("__darwin_blksize_t" type
               (:typedef ("__int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3827 3864])
            ("__darwin_dev_t" type
               (:typedef ("__int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [3892 3925])
            ("__darwin_fsblkcnt_t" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [3939 3980])
            ("__darwin_fsfilcnt_t" type
               (:typedef ("unsigned int")
                :type "typedef")
                nil [4016 4057])
            ("__darwin_gid_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4093 4127])
            ("__darwin_id_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4163 4196])
            ("__darwin_ino64_t" type
               (:typedef ("__uint64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4232 4268])
            ("__darwin_ino_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4434 4468])
            ("__darwin_mach_port_name_t" type
               (:typedef ("__darwin_natural_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4533 4586])
            ("__darwin_mach_port_t" type
               (:typedef ("__darwin_mach_port_name_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4606 4661])
            ("__darwin_mode_t" type
               (:typedef ("__uint16_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4681 4716])
            ("__darwin_off_t" type
               (:typedef ("__int64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4750 4783])
            ("__darwin_pid_t" type
               (:typedef ("__int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [4817 4850])
            ("__darwin_pthread_attr_t" type
               (:typedef ("_opaque_pthread_attr_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4886 4951])
            ("__darwin_pthread_cond_t" type
               (:typedef ("_opaque_pthread_cond_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4982 5047])
            ("__darwin_pthread_condattr_t" type
               (:typedef ("_opaque_pthread_condattr_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5078 5151])
            ("__darwin_pthread_key_t" type
               (:typedef ("unsigned long")
                :type "typedef")
                nil [5182 5227])
            ("__darwin_pthread_mutex_t" type
               (:typedef ("_opaque_pthread_mutex_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5258 5325])
            ("__darwin_pthread_mutexattr_t" type
               (:typedef ("_opaque_pthread_mutexattr_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5356 5431])
            ("__darwin_pthread_once_t" type
               (:typedef ("_opaque_pthread_once_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5462 5527])
            ("__darwin_pthread_rwlock_t" type
               (:typedef ("_opaque_pthread_rwlock_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5558 5627])
            ("__darwin_pthread_rwlockattr_t" type
               (:typedef ("_opaque_pthread_rwlockattr_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5658 5735])
            ("__darwin_pthread_t" type
               (:typedef ("_opaque_pthread_t" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [5766 5822])
            ("__darwin_sigset_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [5853 5890])
            ("__darwin_suseconds_t" type
               (:typedef ("__int32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [5914 5953])
            ("__darwin_uid_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [5979 6013])
            ("__darwin_useconds_t" type
               (:typedef ("__uint32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [6036 6075])
            ("__darwin_uuid_t" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [6101 6143])
            ("__darwin_uuid_string_t" type
               (:typedef ("char")
                :type "typedef")
                nil [6144 6184]))          
      :file "_types.h"
      :pointmax 6214
      :fsize 6213
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("__PTHREAD_CONDATTR_SIZE__" . ((number "4" 2043 . 2044)))
          ("__PTHREAD_SIZE__" . ((number "596" 1890 . 1893)))
          ("__DARWIN_NULL" . ((symbol "__null" 3522 . 3528)))
          ("__PTHREAD_RWLOCKATTR_SIZE__" . ((number "12" 2195 . 2197)))
          ("__PTHREAD_MUTEX_SIZE__" . ((number "40" 2005 . 2007)))
          ("__PTHREAD_COND_SIZE__" . ((number "24" 2080 . 2082)))
          ("_SYS__TYPES_H_")
          ("__PTHREAD_MUTEXATTR_SIZE__" . ((number "8" 1968 . 1969)))
          ("__PTHREAD_RWLOCK_SIZE__" . ((number "124" 2155 . 2158)))
          ("__PTHREAD_ATTR_SIZE__" . ((number "36" 1930 . 1932)))
          ("__PTHREAD_ONCE_SIZE__" . ((number "4" 2118 . 2119)))
          )
)
    (semanticdb-table "fcntl.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_FCNTL_H_" variable (:constant-flag t) nil [3611 3624])
            ("sys/_types.h" include (:system-flag t) nil [3775 3798])
            ("sys/cdefs.h" include (:system-flag t) nil [3799 3821])
            ("Availability.h" include (:system-flag t) nil [3822 3847])
            ("sys/_types/_size_t.h" include (:system-flag t) nil [3929 3960])
            ("sys/_types/_mode_t.h" include (:system-flag t) nil [3961 3992])
            ("sys/_types/_off_t.h" include (:system-flag t) nil [3993 4023])
            ("sys/_types/_pid_t.h" include (:system-flag t) nil [4024 4054])
            ("O_RDONLY" variable (:constant-flag t) nil [4434 4442])
            ("O_WRONLY" variable (:constant-flag t) nil [4487 4495])
            ("O_RDWR" variable (:constant-flag t) nil [4540 4546])
            ("O_ACCMODE" variable (:constant-flag t) nil [4599 4608])
            ("O_NONBLOCK" variable (:constant-flag t) nil [5044 5054])
            ("O_APPEND" variable (:constant-flag t) nil [5086 5094])
            ("sys/_types/_o_sync.h" include (:system-flag t) nil [5126 5157])
            ("O_CREAT" variable (:constant-flag t) nil [5580 5587])
            ("O_TRUNC" variable (:constant-flag t) nil [5633 5640])
            ("O_EXCL" variable (:constant-flag t) nil [5688 5694])
            ("O_NOCTTY" variable (:constant-flag t) nil [5892 5900])
            ("sys/_types/_o_dsync.h" include (:system-flag t) nil [6105 6137])
            ("F_DUPFD" variable (:constant-flag t) nil [7204 7211])
            ("F_GETFD" variable (:constant-flag t) nil [7256 7263])
            ("F_SETFD" variable (:constant-flag t) nil [7308 7315])
            ("F_GETFL" variable (:constant-flag t) nil [7360 7367])
            ("F_SETFL" variable (:constant-flag t) nil [7408 7415])
            ("F_GETOWN" variable (:constant-flag t) nil [7456 7464])
            ("F_SETOWN" variable (:constant-flag t) nil [7509 7517])
            ("F_GETLK" variable (:constant-flag t) nil [7562 7569])
            ("F_SETLK" variable (:constant-flag t) nil [7619 7626])
            ("F_SETLKW" variable (:constant-flag t) nil [7676 7684])
            ("FD_CLOEXEC" variable (:constant-flag t) nil [11005 11015])
            ("F_RDLCK" variable (:constant-flag t) nil [11109 11116])
            ("F_UNLCK" variable (:constant-flag t) nil [11155 11162])
            ("F_WRLCK" variable (:constant-flag t) nil [11188 11195])
            ("sys/_types/_seek_set.h" include (:system-flag t) nil [11323 11356])
            ("sys/_types/_s_ifmt.h" include (:system-flag t) nil [11485 11516])
            ("flock" type
               (:members 
                  ( ("l_start" variable (:type ("off_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12189 12203])
                    ("l_len" variable (:type ("off_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12227 12239])
                    ("l_pid" variable (:type ("pid_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12280 12292])
                    ("l_type" variable (:type "short") (reparse-symbol classsubparts) [12312 12325])
                    ("l_whence" variable (:type "short") (reparse-symbol classsubparts) [12362 12377]))                  
                :type "struct")
                nil [12173 12402])
            ("sys/_types/_timespec.h" include (:system-flag t) nil [12404 12437])
            ("open" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16538 16551])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [16552 16556])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [16557 16561]))                  
                :type "int")
                nil [16529 16585])
            ("creat" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [16596 16609])
                    ("" variable (:type ("mode_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16610 16617]))                  
                :type "int")
                nil [16586 16642])
            ("fcntl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [16653 16657])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [16658 16662])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [16663 16667]))                  
                :type "int")
                nil [16643 16692]))          
      :file "fcntl.h"
      :pointmax 17503
      :fsize 17502
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("F_GETFL" . ((number "3" 7369 . 7370)))
          ("O_ACCMODE" . ((number "0x0003" 4609 . 4615)))
          ("F_SETOWN" . ((number "6" 7518 . 7519)))
          ("F_SETLK" . ((number "8" 7628 . 7629)))
          ("O_WRONLY" . ((number "0x0001" 4496 . 4502)))
          ("O_APPEND" . ((number "0x0008" 5095 . 5101)))
          ("O_EXCL" . ((number "0x0800" 5696 . 5702)))
          ("F_DUPFD" . ((number "0" 7213 . 7214)))
          ("F_SETFD" . ((number "2" 7317 . 7318)))
          ("F_RDLCK" . ((number "1" 11118 . 11119)))
          ("O_NOCTTY" . ((number "0x20000" 5901 . 5908)))
          ("F_GETLK" . ((number "7" 7571 . 7572)))
          ("O_RDWR" . ((number "0x0002" 4548 . 4554)))
          ("F_GETFD" . ((number "1" 7265 . 7266)))
          ("F_WRLCK" . ((number "3" 11197 . 11198)))
          ("O_RDONLY" . ((number "0x0000" 4443 . 4449)))
          ("O_TRUNC" . ((number "0x0400" 5642 . 5648)))
          ("F_UNLCK" . ((number "2" 11164 . 11165)))
          ("_SYS_FCNTL_H_")
          ("FD_CLOEXEC" . ((number "1" 11016 . 11017)))
          ("F_SETFL" . ((number "4" 7417 . 7418)))
          ("F_GETOWN" . ((number "5" 7465 . 7466)))
          ("O_CREAT" . ((number "0x0200" 5589 . 5595)))
          ("O_NONBLOCK" . ((number "0x0004" 5055 . 5061)))
          ("F_SETLKW" . ((number "9" 7685 . 7686)))
          )
)
    (semanticdb-table "unistd.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_UNISTD_H_" variable (:constant-flag t) nil [3299 3313])
            ("sys/cdefs.h" include (:system-flag t) nil [3315 3337])
            ("_POSIX_VERSION" variable (:constant-flag t) nil [3710 3724])
            ("_POSIX2_VERSION" variable (:constant-flag t) nil [3742 3757])
            ("sys/_types/_posix_vdisable.h" include (:system-flag t) nil [3858 3897])
            ("_POSIX_THREAD_KEYS_MAX" variable (:constant-flag t) nil [3907 3929])
            ("F_OK" variable (:constant-flag t) nil [3965 3969])
            ("X_OK" variable (:constant-flag t) nil [4014 4018])
            ("W_OK" variable (:constant-flag t) nil [4079 4083])
            ("R_OK" variable (:constant-flag t) nil [4132 4136])
            ("sys/_types/_seek_set.h" include (:system-flag t) nil [5420 5453])
            ("_PC_LINK_MAX" variable (:constant-flag t) nil [5937 5949])
            ("_PC_MAX_CANON" variable (:constant-flag t) nil [5962 5975])
            ("_PC_MAX_INPUT" variable (:constant-flag t) nil [5988 6001])
            ("_PC_NAME_MAX" variable (:constant-flag t) nil [6014 6026])
            ("_PC_PATH_MAX" variable (:constant-flag t) nil [6039 6051])
            ("_PC_PIPE_BUF" variable (:constant-flag t) nil [6064 6076])
            ("_PC_CHOWN_RESTRICTED" variable (:constant-flag t) nil [6089 6109])
            ("_PC_NO_TRUNC" variable (:constant-flag t) nil [6121 6133])
            ("_PC_VDISABLE" variable (:constant-flag t) nil [6146 6158])
            ("_PC_2_SYMLINKS" variable (:constant-flag t) nil [6413 6427])
            ("_PC_ALLOC_SIZE_MIN" variable (:constant-flag t) nil [6477 6495])
            ("_PC_ASYNC_IO" variable (:constant-flag t) nil [6548 6560])
            ("_PC_FILESIZEBITS" variable (:constant-flag t) nil [6606 6622])
            ("_PC_PRIO_IO" variable (:constant-flag t) nil [6673 6684])
            ("_PC_REC_INCR_XFER_SIZE" variable (:constant-flag t) nil [6733 6755])
            ("_PC_REC_MAX_XFER_SIZE" variable (:constant-flag t) nil [6808 6829])
            ("_PC_REC_MIN_XFER_SIZE" variable (:constant-flag t) nil [6882 6903])
            ("_PC_REC_XFER_ALIGN" variable (:constant-flag t) nil [6956 6974])
            ("_PC_SYMLINK_MAX" variable (:constant-flag t) nil [7021 7036])
            ("_PC_SYNC_IO" variable (:constant-flag t) nil [7086 7097])
            ("_PC_XATTR_SIZE_BITS" variable (:constant-flag t) nil [7142 7161])
            ("_CS_PATH" variable (:constant-flag t) nil [7257 7265]))          
      :file "unistd.h"
      :pointmax 7300
      :fsize 7299
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_PC_LINK_MAX" . ((number "1" 5952 . 5953)))
          ("_PC_MAX_CANON" . ((number "2" 5978 . 5979)))
          ("_PC_ASYNC_IO" . ((number "17" 6562 . 6564)))
          ("R_OK" . ((semantic-list "(1<<2)" 4138 . 4144)))
          ("F_OK" . ((number "0" 3971 . 3972)))
          ("_PC_2_SYMLINKS" . ((number "15" 6429 . 6431)))
          ("_PC_REC_INCR_XFER_SIZE" . ((number "20" 6756 . 6758)))
          ("_PC_SYNC_IO" . ((number "25" 7099 . 7101)))
          ("_PC_REC_MAX_XFER_SIZE" . ((number "21" 6830 . 6832)))
          ("_PC_SYMLINK_MAX" . ((number "24" 7038 . 7040)))
          ("_POSIX2_VERSION" . ((number "200112L" 3759 . 3766)))
          ("_POSIX_THREAD_KEYS_MAX" . ((number "128" 3930 . 3933)))
          ("W_OK" . ((semantic-list "(1<<1)" 4085 . 4091)))
          ("_PC_CHOWN_RESTRICTED" . ((number "7" 6111 . 6112)))
          ("_PC_VDISABLE" . ((number "9" 6161 . 6162)))
          ("_PC_ALLOC_SIZE_MIN" . ((number "16" 6496 . 6498)))
          ("X_OK" . ((semantic-list "(1<<0)" 4020 . 4026)))
          ("_PC_PIPE_BUF" . ((number "6" 6079 . 6080)))
          ("_PC_REC_MIN_XFER_SIZE" . ((number "22" 6904 . 6906)))
          ("_CS_PATH" . ((number "1" 7268 . 7269)))
          ("_SYS_UNISTD_H_")
          ("_PC_MAX_INPUT" . ((number "3" 6004 . 6005)))
          ("_PC_NO_TRUNC" . ((number "8" 6136 . 6137)))
          ("_PC_NAME_MAX" . ((number "4" 6029 . 6030)))
          ("_PC_PATH_MAX" . ((number "5" 6054 . 6055)))
          ("_POSIX_VERSION" . ((number "200112L" 3726 . 3733)))
          ("_PC_FILESIZEBITS" . ((number "18" 6623 . 6625)))
          ("_PC_XATTR_SIZE_BITS" . ((number "26" 7163 . 7165)))
          ("_PC_PRIO_IO" . ((number "19" 6686 . 6688)))
          ("_PC_REC_XFER_ALIGN" . ((number "23" 6975 . 6977)))
          )
)
    (semanticdb-table "queue.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_QUEUE_H_" variable (:constant-flag t) nil [3002 3015])
            ("QMD_TRACE_ELEM" variable (:constant-flag t) nil [7661 7675])
            ("QMD_TRACE_HEAD" variable (:constant-flag t) nil [7690 7704])
            ("TRACEBUF" variable (:constant-flag t) nil [7719 7727])
            ("TRASHIT" variable (:constant-flag t) nil [7736 7743])
            ("__MISMATCH_TAGS_PUSH" variable (:constant-flag t) nil [8778 8798])
            ("__MISMATCH_TAGS_POP" variable (:constant-flag t) nil [8807 8826])
            ("SLIST_HEAD" variable (:constant-flag t) nil [8886 8896])
            ("SLIST_HEAD_INITIALIZER" variable (:constant-flag t) nil [9058 9080])
            ("SLIST_ENTRY" variable (:constant-flag t) nil [9112 9123])
            ("SLIST_EMPTY" variable (:constant-flag t) nil [9312 9323])
            ("SLIST_FIRST" variable (:constant-flag t) nil [9367 9378])
            ("SLIST_FOREACH" variable (:constant-flag t) nil [9414 9427])
            ("SLIST_FOREACH_SAFE" variable (:constant-flag t) nil [9560 9578])
            ("SLIST_FOREACH_PREVPTR" variable (:constant-flag t) nil [9734 9755])
            ("SLIST_INIT" variable (:constant-flag t) nil [9914 9924])
            ("SLIST_INSERT_AFTER" variable (:constant-flag t) nil [9999 10017])
            ("SLIST_INSERT_HEAD" variable (:constant-flag t) nil [10176 10193])
            ("SLIST_NEXT" variable (:constant-flag t) nil [10331 10341])
            ("SLIST_REMOVE" variable (:constant-flag t) nil [10387 10399])
            ("SLIST_REMOVE_AFTER" variable (:constant-flag t) nil [10864 10882])
            ("SLIST_REMOVE_HEAD" variable (:constant-flag t) nil [11010 11027])
            ("STAILQ_HEAD" variable (:constant-flag t) nil [11186 11197])
            ("STAILQ_HEAD_INITIALIZER" variable (:constant-flag t) nil [11419 11442])
            ("STAILQ_ENTRY" variable (:constant-flag t) nil [11494 11506])
            ("STAILQ_CONCAT" variable (:constant-flag t) nil [11702 11715])
            ("STAILQ_EMPTY" variable (:constant-flag t) nil [11934 11946])
            ("STAILQ_FIRST" variable (:constant-flag t) nil [11991 12003])
            ("STAILQ_FOREACH" variable (:constant-flag t) nil [12040 12054])
            ("STAILQ_FOREACH_SAFE" variable (:constant-flag t) nil [12186 12205])
            ("STAILQ_INIT" variable (:constant-flag t) nil [12363 12374])
            ("STAILQ_INSERT_AFTER" variable (:constant-flag t) nil [12498 12517])
            ("STAILQ_INSERT_HEAD" variable (:constant-flag t) nil [12741 12759])
            ("STAILQ_INSERT_TAIL" variable (:constant-flag t) nil [12965 12983])
            ("STAILQ_LAST" variable (:constant-flag t) nil [13160 13171])
            ("STAILQ_NEXT" variable (:constant-flag t) nil [13411 13422])
            ("STAILQ_REMOVE" variable (:constant-flag t) nil [13469 13482])
            ("STAILQ_REMOVE_HEAD" variable (:constant-flag t) nil [13958 13976])
            ("STAILQ_REMOVE_HEAD_UNTIL" variable (:constant-flag t) nil [14164 14188])
            ("STAILQ_REMOVE_AFTER" variable (:constant-flag t) nil [14397 14416])
            ("STAILQ_SWAP" variable (:constant-flag t) nil [14618 14629])
            ("LIST_HEAD" variable (:constant-flag t) nil [15216 15225])
            ("LIST_HEAD_INITIALIZER" variable (:constant-flag t) nil [15386 15407])
            ("LIST_ENTRY" variable (:constant-flag t) nil [15439 15449])
            ("QMD_LIST_CHECK_HEAD" variable (:constant-flag t) nil [16428 16447])
            ("QMD_LIST_CHECK_NEXT" variable (:constant-flag t) nil [16469 16488])
            ("QMD_LIST_CHECK_PREV" variable (:constant-flag t) nil [16509 16528])
            ("LIST_EMPTY" variable (:constant-flag t) nil [16608 16618])
            ("LIST_FIRST" variable (:constant-flag t) nil [16661 16671])
            ("LIST_FOREACH" variable (:constant-flag t) nil [16706 16718])
            ("LIST_FOREACH_SAFE" variable (:constant-flag t) nil [16849 16866])
            ("LIST_INIT" variable (:constant-flag t) nil [17020 17029])
            ("LIST_INSERT_AFTER" variable (:constant-flag t) nil [17103 17120])
            ("LIST_INSERT_BEFORE" variable (:constant-flag t) nil [17473 17491])
            ("LIST_INSERT_HEAD" variable (:constant-flag t) nil [17780 17796])
            ("LIST_NEXT" variable (:constant-flag t) nil [18100 18109])
            ("LIST_REMOVE" variable (:constant-flag t) nil [18154 18165])
            ("LIST_SWAP" variable (:constant-flag t) nil [18540 18549])
            ("TAILQ_HEAD" variable (:constant-flag t) nil [19056 19066])
            ("TAILQ_HEAD_INITIALIZER" variable (:constant-flag t) nil [19306 19328])
            ("TAILQ_ENTRY" variable (:constant-flag t) nil [19379 19390])
            ("TAILQ_CONCAT" variable (:constant-flag t) nil [19655 19667])
            ("TAILQ_EMPTY" variable (:constant-flag t) nil [20008 20019])
            ("TAILQ_FIRST" variable (:constant-flag t) nil [20063 20074])
            ("TAILQ_FOREACH" variable (:constant-flag t) nil [20110 20123])
            ("TAILQ_FOREACH_SAFE" variable (:constant-flag t) nil [20256 20274])
            ("TAILQ_FOREACH_REVERSE" variable (:constant-flag t) nil [20430 20451])
            ("TAILQ_FOREACH_REVERSE_SAFE" variable (:constant-flag t) nil [20609 20635])
            ("TAILQ_INIT" variable (:constant-flag t) nil [20816 20826])
            ("TAILQ_INSERT_AFTER" variable (:constant-flag t) nil [20977 20995])
            ("TAILQ_INSERT_BEFORE" variable (:constant-flag t) nil [21502 21521])
            ("TAILQ_INSERT_HEAD" variable (:constant-flag t) nil [21850 21867])
            ("TAILQ_INSERT_TAIL" variable (:constant-flag t) nil [22284 22301])
            ("TAILQ_LAST" variable (:constant-flag t) nil [22589 22599])
            ("TAILQ_NEXT" variable (:constant-flag t) nil [22739 22749])
            ("TAILQ_PREV" variable (:constant-flag t) nil [22795 22805])
            ("TAILQ_REMOVE" variable (:constant-flag t) nil [22954 22966])
            ("TAILQ_SWAP" variable (:constant-flag t) nil [23482 23492])
            ("CIRCLEQ_HEAD" variable (:constant-flag t) nil [24747 24759])
            ("CIRCLEQ_ENTRY" variable (:constant-flag t) nil [24967 24980])
            ("CIRCLEQ_EMPTY" variable (:constant-flag t) nil [25216 25229])
            ("CIRCLEQ_FIRST" variable (:constant-flag t) nil [25283 25296])
            ("CIRCLEQ_FOREACH" variable (:constant-flag t) nil [25332 25347])
            ("CIRCLEQ_INIT" variable (:constant-flag t) nil [25490 25502])
            ("CIRCLEQ_INSERT_AFTER" variable (:constant-flag t) nil [25625 25645])
            ("CIRCLEQ_INSERT_BEFORE" variable (:constant-flag t) nil [25995 26016])
            ("CIRCLEQ_INSERT_HEAD" variable (:constant-flag t) nil [26367 26386])
            ("CIRCLEQ_INSERT_TAIL" variable (:constant-flag t) nil [26705 26724])
            ("CIRCLEQ_LAST" variable (:constant-flag t) nil [27041 27053])
            ("CIRCLEQ_NEXT" variable (:constant-flag t) nil [27088 27100])
            ("CIRCLEQ_PREV" variable (:constant-flag t) nil [27145 27157])
            ("CIRCLEQ_REMOVE" variable (:constant-flag t) nil [27202 27216]))          
      :file "queue.h"
      :pointmax 28528
      :fsize 28527
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("SLIST_REMOVE_HEAD" (spp-arg-list ("head" "field") 11027 . 11040) . 
              ((DO "do" 11041 . 11043) (semantic-list "{				\\
	SLIST_FIRST((head)) = SLIST_NEXT(SLIST_FIRST((head)), field);	\\
}" 11044 . 11117) (WHILE "while" 11118 . 11123) (semantic-list "(0)" 11124 . 11127)))
          ("STAILQ_FOREACH_SAFE" (spp-arg-list ("var" "head" "field" "tvar") 12205 . 12229) . ((FOR "for" 12235 . 12238) (semantic-list "((var) = STAILQ_FIRST((head));				\\
	    (var) && ((tvar) = STAILQ_NEXT((var), field), 1);		\\
	    (var) = (tvar))" 12239 . 12353)))
          ("_SYS_QUEUE_H_")
          ("SLIST_FIRST" (spp-arg-list ("head") 9378 . 9384) . ((semantic-list "((head)->slh_first)" 9385 . 9404)))
          ("STAILQ_FIRST" (spp-arg-list ("head") 12003 . 12009) . ((semantic-list "((head)->stqh_first)" 12010 . 12030)))
          ("STAILQ_INSERT_AFTER" (spp-arg-list ("head" "tqelm" "elm" "field") 12517 . 12542) . 
              ((DO "do" 12543 . 12545) (semantic-list "{		\\
	if ((STAILQ_NEXT((elm), field) = STAILQ_NEXT((tqelm), field)) == NULL)\\
		(head)->stqh_last = &STAILQ_NEXT((elm), field);		\\
	STAILQ_NEXT((tqelm), field) = (elm);				\\
}" 12546 . 12721) (WHILE "while" 12722 . 12727) (semantic-list "(0)" 12728 . 12731)))
          ("STAILQ_SWAP" (spp-arg-list ("head1" "head2" "type") 14629 . 14649) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 14656 . 14676) (DO "do" 14685 . 14687) (semantic-list "{									\\
	struct type *swap_first = STAILQ_FIRST(head1);			\\
	struct type **swap_last = (head1)->stqh_last;			\\
	STAILQ_FIRST(head1) = STAILQ_FIRST(head2);			\\
	(head1)->stqh_last = (head2)->stqh_last;			\\
	STAILQ_FIRST(head2) = swap_first;				\\
	(head2)->stqh_last = swap_last;					\\
	if (STAILQ_EMPTY(head1))					\\
		(head1)->stqh_last = &STAILQ_FIRST(head1);		\\
	if (STAILQ_EMPTY(head2))					\\
		(head2)->stqh_last = &STAILQ_FIRST(head2);		\\
}" 14688 . 15137) (WHILE "while" 15138 . 15143) (semantic-list "(0)" 15144 . 15147) (symbol "__MISMATCH_TAGS_POP" 15157 . 15176)))
          ("LIST_HEAD_INITIALIZER" (spp-arg-list ("head") 15407 . 15413) . ((semantic-list "{ NULL }" 15421 . 15429)))
          ("TAILQ_FOREACH_REVERSE_SAFE" (spp-arg-list ("var" "head" "headname" "field" "tvar") 20635 . 20669) . ((FOR "for" 20673 . 20676) (semantic-list "((var) = TAILQ_LAST((head), headname);			\\
	    (var) && ((tvar) = TAILQ_PREV((var), headname, field), 1);	\\
	    (var) = (tvar))" 20677 . 20806)))
          ("TAILQ_INIT" (spp-arg-list ("head") 20826 . 20832) . 
              ((DO "do" 20833 . 20835) (semantic-list "{						\\
	TAILQ_FIRST((head)) = NULL;					\\
	(head)->tqh_last = &TAILQ_FIRST((head));			\\
	QMD_TRACE_HEAD(head);						\\
}" 20836 . 20957) (WHILE "while" 20958 . 20963) (semantic-list "(0)" 20964 . 20967)))
          ("TAILQ_INSERT_HEAD" (spp-arg-list ("head" "elm" "field") 21867 . 21885) . 
              ((DO "do" 21886 . 21888) (semantic-list "{			\\
	if ((TAILQ_NEXT((elm), field) = TAILQ_FIRST((head))) != NULL)	\\
		TAILQ_FIRST((head))->field.tqe_prev =			\\
		    &TAILQ_NEXT((elm), field);				\\
	else								\\
		(head)->tqh_last = &TAILQ_NEXT((elm), field);		\\
	TAILQ_FIRST((head)) = (elm);					\\
	(elm)->field.tqe_prev = &TAILQ_FIRST((head));			\\
	QMD_TRACE_HEAD(head);						\\
	QMD_TRACE_ELEM(&(elm)->field);					\\
}" 21889 . 22264) (WHILE "while" 22265 . 22270) (semantic-list "(0)" 22271 . 22274)))
          ("CIRCLEQ_FOREACH" (spp-arg-list ("var" "head" "field") 25347 . 25365) . ((FOR "for" 25372 . 25375) (semantic-list "((var) = (head)->cqh_first;					\\
	    (var) != (void *)(head);					\\
	    (var) = (var)->field.cqe_next)" 25375 . 25480)))
          ("TRACEBUF")
          ("SLIST_REMOVE_AFTER" (spp-arg-list ("elm" "field") 10882 . 10894) . 
              ((DO "do" 10895 . 10897) (semantic-list "{				\\
	SLIST_NEXT(elm, field) =					\\
	    SLIST_NEXT(SLIST_NEXT(elm, field), field);			\\
}" 10898 . 10990) (WHILE "while" 10991 . 10996) (semantic-list "(0)" 10997 . 11000)))
          ("LIST_INSERT_HEAD" (spp-arg-list ("head" "elm" "field") 17796 . 17814) . 
              ((DO "do" 17815 . 17817) (semantic-list "{				\\
	QMD_LIST_CHECK_HEAD((head), field);				\\
	if ((LIST_NEXT((elm), field) = LIST_FIRST((head))) != NULL)	\\
		LIST_FIRST((head))->field.le_prev = &LIST_NEXT((elm), field);\\
	LIST_FIRST((head)) = (elm);					\\
	(elm)->field.le_prev = &LIST_FIRST((head));			\\
}" 17818 . 18080) (WHILE "while" 18081 . 18086) (semantic-list "(0)" 18087 . 18090)))
          ("TAILQ_HEAD_INITIALIZER" (spp-arg-list ("head") 19328 . 19334) . ((semantic-list "{ NULL, &(head).tqh_first }" 19342 . 19369)))
          ("CIRCLEQ_ENTRY" (spp-arg-list ("type") 24980 . 24986) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 24994 . 25014) (STRUCT "struct" 25023 . 25029) (semantic-list "{								\\
	struct type *cqe_next;		/* next element */		\\
	struct type *cqe_prev;		/* previous element */		\\
}" 25030 . 25140) (symbol "__MISMATCH_TAGS_POP" 25151 . 25170)))
          ("QMD_TRACE_HEAD" (spp-arg-list ("head") 7704 . 7710))
          ("SLIST_INIT" (spp-arg-list ("head") 9924 . 9930) . 
              ((DO "do" 9931 . 9933) (semantic-list "{						\\
	SLIST_FIRST((head)) = NULL;					\\
}" 9934 . 9979) (WHILE "while" 9980 . 9985) (semantic-list "(0)" 9986 . 9989)))
          ("SLIST_REMOVE" (spp-arg-list ("head" "elm" "type" "field") 10399 . 10423) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 10429 . 10449) (DO "do" 10458 . 10460) (semantic-list "{									\\
	if (SLIST_FIRST((head)) == (elm)) {				\\
		SLIST_REMOVE_HEAD((head), field);			\\
	}								\\
	else {								\\
		struct type *curelm = SLIST_FIRST((head));		\\
		while (SLIST_NEXT(curelm, field) != (elm))		\\
			curelm = SLIST_NEXT(curelm, field);		\\
		SLIST_REMOVE_AFTER(curelm, field);			\\
	}								\\
	TRASHIT((elm)->field.sle_next);					\\
}" 10461 . 10815) (WHILE "while" 10816 . 10821) (semantic-list "(0)" 10822 . 10825) (symbol "__MISMATCH_TAGS_POP" 10835 . 10854)))
          ("STAILQ_CONCAT" (spp-arg-list ("head1" "head2") 11715 . 11729) . 
              ((DO "do" 11730 . 11732) (semantic-list "{				\\
	if (!STAILQ_EMPTY((head2))) {					\\
		*(head1)->stqh_last = (head2)->stqh_first;		\\
		(head1)->stqh_last = (head2)->stqh_last;		\\
		STAILQ_INIT((head2));					\\
	}								\\
}" 11733 . 11914) (WHILE "while" 11915 . 11920) (semantic-list "(0)" 11921 . 11924)))
          ("STAILQ_INIT" (spp-arg-list ("head") 12374 . 12380) . 
              ((DO "do" 12381 . 12383) (semantic-list "{						\\
	STAILQ_FIRST((head)) = NULL;					\\
	(head)->stqh_last = &STAILQ_FIRST((head));			\\
}" 12384 . 12478) (WHILE "while" 12479 . 12484) (semantic-list "(0)" 12485 . 12488)))
          ("STAILQ_INSERT_HEAD" (spp-arg-list ("head" "elm" "field") 12759 . 12777) . 
              ((DO "do" 12778 . 12780) (semantic-list "{			\\
	if ((STAILQ_NEXT((elm), field) = STAILQ_FIRST((head))) == NULL)	\\
		(head)->stqh_last = &STAILQ_NEXT((elm), field);		\\
	STAILQ_FIRST((head)) = (elm);					\\
}" 12781 . 12945) (WHILE "while" 12946 . 12951) (semantic-list "(0)" 12952 . 12955)))
          ("STAILQ_REMOVE" (spp-arg-list ("head" "elm" "type" "field") 13482 . 13506) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 13512 . 13532) (DO "do" 13541 . 13543) (semantic-list "{									\\
	if (STAILQ_FIRST((head)) == (elm)) {				\\
		STAILQ_REMOVE_HEAD((head), field);			\\
	}								\\
	else {								\\
		struct type *curelm = STAILQ_FIRST((head));		\\
		while (STAILQ_NEXT(curelm, field) != (elm))		\\
			curelm = STAILQ_NEXT(curelm, field);		\\
		STAILQ_REMOVE_AFTER(head, curelm, field);		\\
	}								\\
	TRASHIT((elm)->field.stqe_next);				\\
}" 13544 . 13909) (WHILE "while" 13910 . 13915) (semantic-list "(0)" 13916 . 13919) (symbol "__MISMATCH_TAGS_POP" 13929 . 13948)))
          ("LIST_EMPTY" (spp-arg-list ("head") 16618 . 16624) . ((semantic-list "((head)->lh_first == NULL)" 16625 . 16651)))
          ("LIST_FOREACH" (spp-arg-list ("var" "head" "field") 16718 . 16736) . ((FOR "for" 16744 . 16747) (semantic-list "((var) = LIST_FIRST((head));				\\
	    (var);							\\
	    (var) = LIST_NEXT((var), field))" 16748 . 16839)))
          ("TAILQ_FOREACH_REVERSE" (spp-arg-list ("var" "head" "headname" "field") 20451 . 20479) . ((FOR "for" 20484 . 20487) (semantic-list "((var) = TAILQ_LAST((head), headname);			\\
	    (var);							\\
	    (var) = TAILQ_PREV((var), headname, field))" 20488 . 20599)))
          ("CIRCLEQ_INSERT_AFTER" (spp-arg-list ("head" "listelm" "elm" "field") 25645 . 25672) . 
              ((DO "do" 25673 . 25675) (semantic-list "{		\\
	(elm)->field.cqe_next = (listelm)->field.cqe_next;		\\
	(elm)->field.cqe_prev = (listelm);				\\
	if ((listelm)->field.cqe_next == (void *)(head))		\\
		(head)->cqh_last = (elm);				\\
	else								\\
		(listelm)->field.cqe_next->field.cqe_prev = (elm);	\\
	(listelm)->field.cqe_next = (elm);				\\
}" 25676 . 25975) (WHILE "while" 25976 . 25981) (semantic-list "(0)" 25982 . 25985)))
          ("CIRCLEQ_LAST" (spp-arg-list ("head") 27053 . 27059) . ((semantic-list "((head)->cqh_last)" 27060 . 27078)))
          ("CIRCLEQ_PREV" (spp-arg-list ("elm" "field") 27157 . 27168) . ((semantic-list "((elm)->field.cqe_prev)" 27169 . 27192)))
          ("LIST_INSERT_BEFORE" (spp-arg-list ("listelm" "elm" "field") 17491 . 17512) . 
              ((DO "do" 17513 . 17515) (semantic-list "{			\\
	QMD_LIST_CHECK_PREV(listelm, field);				\\
	(elm)->field.le_prev = (listelm)->field.le_prev;		\\
	LIST_NEXT((elm), field) = (listelm);				\\
	*(listelm)->field.le_prev = (elm);				\\
	(listelm)->field.le_prev = &LIST_NEXT((elm), field);		\\
}" 17516 . 17760) (WHILE "while" 17761 . 17766) (semantic-list "(0)" 17767 . 17770)))
          ("TAILQ_ENTRY" (spp-arg-list ("type") 19390 . 19396) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 19404 . 19424) (STRUCT "struct" 19433 . 19439) (semantic-list "{								\\
	struct type *tqe_next;	/* next element */			\\
	struct type **tqe_prev;	/* address of previous next element */	\\
	TRACEBUF							\\
}" 19440 . 19583) (symbol "__MISMATCH_TAGS_POP" 19594 . 19613)))
          ("TAILQ_INSERT_BEFORE" (spp-arg-list ("listelm" "elm" "field") 21521 . 21542) . 
              ((DO "do" 21543 . 21545) (semantic-list "{			\\
	(elm)->field.tqe_prev = (listelm)->field.tqe_prev;		\\
	TAILQ_NEXT((elm), field) = (listelm);				\\
	*(listelm)->field.tqe_prev = (elm);				\\
	(listelm)->field.tqe_prev = &TAILQ_NEXT((elm), field);		\\
	QMD_TRACE_ELEM(&(elm)->field);					\\
	QMD_TRACE_ELEM(&listelm->field);				\\
}" 21546 . 21830) (WHILE "while" 21831 . 21836) (semantic-list "(0)" 21837 . 21840)))
          ("CIRCLEQ_HEAD" (spp-arg-list ("name" "type") 24759 . 24771) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 24778 . 24798) (STRUCT "struct" 24807 . 24813) (symbol "name" 24814 . 24818) (semantic-list "{								\\
	struct type *cqh_first;		/* first element */		\\
	struct type *cqh_last;		/* last element */		\\
}" 24819 . 24927) (symbol "__MISMATCH_TAGS_POP" 24938 . 24957)))
          ("CIRCLEQ_INSERT_BEFORE" (spp-arg-list ("head" "listelm" "elm" "field") 26016 . 26043) . 
              ((DO "do" 26044 . 26046) (semantic-list "{		\\
	(elm)->field.cqe_next = (listelm);				\\
	(elm)->field.cqe_prev = (listelm)->field.cqe_prev;		\\
	if ((listelm)->field.cqe_prev == (void *)(head))		\\
		(head)->cqh_first = (elm);				\\
	else								\\
		(listelm)->field.cqe_prev->field.cqe_next = (elm);	\\
	(listelm)->field.cqe_prev = (elm);				\\
}" 26047 . 26347) (WHILE "while" 26348 . 26353) (semantic-list "(0)" 26354 . 26357)))
          ("CIRCLEQ_NEXT" (spp-arg-list ("elm" "field") 27100 . 27111) . ((semantic-list "((elm)->field.cqe_next)" 27112 . 27135)))
          ("SLIST_EMPTY" (spp-arg-list ("head") 9323 . 9329) . ((semantic-list "((head)->slh_first == NULL)" 9330 . 9357)))
          ("STAILQ_EMPTY" (spp-arg-list ("head") 11946 . 11952) . ((semantic-list "((head)->stqh_first == NULL)" 11953 . 11981)))
          ("CIRCLEQ_INSERT_TAIL" (spp-arg-list ("head" "elm" "field") 26724 . 26742) . 
              ((DO "do" 26743 . 26745) (semantic-list "{			\\
	(elm)->field.cqe_next = (void *)(head);				\\
	(elm)->field.cqe_prev = (head)->cqh_last;			\\
	if ((head)->cqh_first == (void *)(head))			\\
		(head)->cqh_first = (elm);				\\
	else								\\
		(head)->cqh_last->field.cqe_next = (elm);		\\
	(head)->cqh_last = (elm);					\\
}" 26746 . 27021) (WHILE "while" 27022 . 27027) (semantic-list "(0)" 27028 . 27031)))
          ("CIRCLEQ_REMOVE" (spp-arg-list ("head" "elm" "field") 27216 . 27234) . 
              ((DO "do" 27235 . 27237) (semantic-list "{				\\
	if ((elm)->field.cqe_next == (void *)(head))			\\
		(head)->cqh_last = (elm)->field.cqe_prev;		\\
	else								\\
		(elm)->field.cqe_next->field.cqe_prev =			\\
		    (elm)->field.cqe_prev;				\\
	if ((elm)->field.cqe_prev == (void *)(head))			\\
		(head)->cqh_first = (elm)->field.cqe_next;		\\
	else								\\
		(elm)->field.cqe_prev->field.cqe_next =			\\
		    (elm)->field.cqe_next;				\\
}" 27238 . 27631) (WHILE "while" 27632 . 27637) (semantic-list "(0)" 27638 . 27641)))
          ("QMD_TRACE_ELEM" (spp-arg-list ("elem") 7675 . 7681))
          ("STAILQ_REMOVE_AFTER" (spp-arg-list ("head" "elm" "field") 14416 . 14434) . 
              ((DO "do" 14435 . 14437) (semantic-list "{			\\
	if ((STAILQ_NEXT(elm, field) =					\\
	     STAILQ_NEXT(STAILQ_NEXT(elm, field), field)) == NULL)	\\
		(head)->stqh_last = &STAILQ_NEXT((elm), field);		\\
}" 14438 . 14598) (WHILE "while" 14599 . 14604) (semantic-list "(0)" 14605 . 14608)))
          ("LIST_HEAD" (spp-arg-list ("name" "type") 15225 . 15237) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 15245 . 15265) (STRUCT "struct" 15274 . 15280) (symbol "name" 15281 . 15285) (semantic-list "{								\\
	struct type *lh_first;	/* first element */			\\
}" 15286 . 15346) (symbol "__MISMATCH_TAGS_POP" 15357 . 15376)))
          ("LIST_NEXT" (spp-arg-list ("elm" "field") 18109 . 18121) . ((semantic-list "((elm)->field.le_next)" 18122 . 18144)))
          ("TAILQ_FOREACH" (spp-arg-list ("var" "head" "field") 20123 . 20141) . ((FOR "for" 20149 . 20152) (semantic-list "((var) = TAILQ_FIRST((head));				\\
	    (var);							\\
	    (var) = TAILQ_NEXT((var), field))" 20153 . 20246)))
          ("CIRCLEQ_FIRST" (spp-arg-list ("head") 25296 . 25302) . ((semantic-list "((head)->cqh_first)" 25303 . 25322)))
          ("__MISMATCH_TAGS_POP")
          ("SLIST_HEAD_INITIALIZER" (spp-arg-list ("head") 9080 . 9086) . ((semantic-list "{ NULL }" 9094 . 9102)))
          ("SLIST_INSERT_HEAD" (spp-arg-list ("head" "elm" "field") 10193 . 10211) . 
              ((DO "do" 10212 . 10214) (semantic-list "{			\\
	SLIST_NEXT((elm), field) = SLIST_FIRST((head));			\\
	SLIST_FIRST((head)) = (elm);					\\
}" 10215 . 10311) (WHILE "while" 10312 . 10317) (semantic-list "(0)" 10318 . 10321)))
          ("STAILQ_HEAD_INITIALIZER" (spp-arg-list ("head") 11442 . 11448) . ((semantic-list "{ NULL, &(head).stqh_first }" 11456 . 11484)))
          ("LIST_FOREACH_SAFE" (spp-arg-list ("var" "head" "field" "tvar") 16866 . 16890) . ((FOR "for" 16896 . 16899) (semantic-list "((var) = LIST_FIRST((head));				\\
	    (var) && ((tvar) = LIST_NEXT((var), field), 1);		\\
	    (var) = (tvar))" 16900 . 17010)))
          ("TAILQ_FOREACH_SAFE" (spp-arg-list ("var" "head" "field" "tvar") 20274 . 20298) . ((FOR "for" 20304 . 20307) (semantic-list "((var) = TAILQ_FIRST((head));				\\
	    (var) && ((tvar) = TAILQ_NEXT((var), field), 1);		\\
	    (var) = (tvar))" 20308 . 20420)))
          ("SLIST_FOREACH" (spp-arg-list ("var" "head" "field") 9427 . 9445) . ((FOR "for" 9453 . 9456) (semantic-list "((var) = SLIST_FIRST((head));				\\
	    (var);							\\
	    (var) = SLIST_NEXT((var), field))" 9457 . 9550)))
          ("STAILQ_FOREACH" (spp-arg-list ("var" "head" "field") 12054 . 12072) . ((FOR "for" 12079 . 12082) (semantic-list "((var) = STAILQ_FIRST((head));				\\
	   (var);							\\
	   (var) = STAILQ_NEXT((var), field))" 12082 . 12175)))
          ("LIST_ENTRY" (spp-arg-list ("type") 15449 . 15455) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 15463 . 15483) (STRUCT "struct" 15492 . 15498) (semantic-list "{								\\
	struct type *le_next;	/* next element */			\\
	struct type **le_prev;	/* address of previous next element */	\\
}" 15499 . 15622) (symbol "__MISMATCH_TAGS_POP" 15633 . 15652)))
          ("LIST_INSERT_AFTER" (spp-arg-list ("listelm" "elm" "field") 17120 . 17141) . 
              ((DO "do" 17142 . 17144) (semantic-list "{			\\
	QMD_LIST_CHECK_NEXT(listelm, field);				\\
	if ((LIST_NEXT((elm), field) = LIST_NEXT((listelm), field)) != NULL)\\
		LIST_NEXT((listelm), field)->field.le_prev =		\\
		    &LIST_NEXT((elm), field);				\\
	LIST_NEXT((listelm), field) = (elm);				\\
	(elm)->field.le_prev = &LIST_NEXT((listelm), field);		\\
}" 17145 . 17453) (WHILE "while" 17454 . 17459) (semantic-list "(0)" 17460 . 17463)))
          ("TAILQ_FIRST" (spp-arg-list ("head") 20074 . 20080) . ((semantic-list "((head)->tqh_first)" 20081 . 20100)))
          ("TAILQ_INSERT_AFTER" (spp-arg-list ("head" "listelm" "elm" "field") 20995 . 21022) . 
              ((DO "do" 21023 . 21025) (semantic-list "{		\\
	if ((TAILQ_NEXT((elm), field) = TAILQ_NEXT((listelm), field)) != NULL)\\
		TAILQ_NEXT((elm), field)->field.tqe_prev = 		\\
		    &TAILQ_NEXT((elm), field);				\\
	else {								\\
		(head)->tqh_last = &TAILQ_NEXT((elm), field);		\\
		QMD_TRACE_HEAD(head);					\\
	}								\\
	TAILQ_NEXT((listelm), field) = (elm);				\\
	(elm)->field.tqe_prev = &TAILQ_NEXT((listelm), field);		\\
	QMD_TRACE_ELEM(&(elm)->field);					\\
	QMD_TRACE_ELEM(&listelm->field);				\\
}" 21026 . 21482) (WHILE "while" 21483 . 21488) (semantic-list "(0)" 21489 . 21492)))
          ("TAILQ_LAST" (spp-arg-list ("head" "headname") 22599 . 22615) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 22622 . 22642) (semantic-list "(*(((struct headname *)((head)->tqh_last))->tqh_last))" 22652 . 22706) (symbol "__MISMATCH_TAGS_POP" 22710 . 22729)))
          ("TAILQ_PREV" (spp-arg-list ("elm" "headname" "field") 22805 . 22827) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 22833 . 22853) (semantic-list "(*(((struct headname *)((elm)->field.tqe_prev))->tqh_last))" 22863 . 22922) (symbol "__MISMATCH_TAGS_POP" 22925 . 22944)))
          ("SLIST_FOREACH_SAFE" (spp-arg-list ("var" "head" "field" "tvar") 9578 . 9602) . ((FOR "for" 9608 . 9611) (semantic-list "((var) = SLIST_FIRST((head));				\\
	    (var) && ((tvar) = SLIST_NEXT((var), field), 1);		\\
	    (var) = (tvar))" 9612 . 9724)))
          ("STAILQ_REMOVE_HEAD" (spp-arg-list ("head" "field") 13976 . 13989) . 
              ((DO "do" 13990 . 13992) (semantic-list "{				\\
	if ((STAILQ_FIRST((head)) =					\\
	     STAILQ_NEXT(STAILQ_FIRST((head)), field)) == NULL)		\\
		(head)->stqh_last = &STAILQ_FIRST((head));		\\
}" 13993 . 14144) (WHILE "while" 14145 . 14150) (semantic-list "(0)" 14151 . 14154)))
          ("LIST_SWAP" (spp-arg-list ("head1" "head2" "type" "field") 18549 . 18576) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 18582 . 18602) (DO "do" 18611 . 18613) (semantic-list "{									\\
	struct type *swap_tmp = LIST_FIRST((head1));			\\
	LIST_FIRST((head1)) = LIST_FIRST((head2));			\\
	LIST_FIRST((head2)) = swap_tmp;					\\
	if ((swap_tmp = LIST_FIRST((head1))) != NULL)			\\
		swap_tmp->field.le_prev = &LIST_FIRST((head1));		\\
	if ((swap_tmp = LIST_FIRST((head2))) != NULL)			\\
		swap_tmp->field.le_prev = &LIST_FIRST((head2));		\\
}" 18614 . 18972) (WHILE "while" 18973 . 18978) (semantic-list "(0)" 18979 . 18982) (symbol "__MISMATCH_TAGS_POP" 18992 . 19011)))
          ("TAILQ_HEAD" (spp-arg-list ("name" "type") 19066 . 19078) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 19086 . 19106) (STRUCT "struct" 19115 . 19121) (symbol "name" 19122 . 19126) (semantic-list "{								\\
	struct type *tqh_first;	/* first element */			\\
	struct type **tqh_last;	/* addr of last next element */		\\
	TRACEBUF							\\
}" 19127 . 19266) (symbol "__MISMATCH_TAGS_POP" 19277 . 19296)))
          ("TAILQ_INSERT_TAIL" (spp-arg-list ("head" "elm" "field") 22301 . 22319) . 
              ((DO "do" 22320 . 22322) (semantic-list "{			\\
	TAILQ_NEXT((elm), field) = NULL;				\\
	(elm)->field.tqe_prev = (head)->tqh_last;			\\
	*(head)->tqh_last = (elm);					\\
	(head)->tqh_last = &TAILQ_NEXT((elm), field);			\\
	QMD_TRACE_HEAD(head);						\\
	QMD_TRACE_ELEM(&(elm)->field);					\\
}" 22323 . 22569) (WHILE "while" 22570 . 22575) (semantic-list "(0)" 22576 . 22579)))
          ("TAILQ_NEXT" (spp-arg-list ("elm" "field") 22749 . 22761) . ((semantic-list "((elm)->field.tqe_next)" 22762 . 22785)))
          ("CIRCLEQ_INIT" (spp-arg-list ("head") 25502 . 25508) . 
              ((DO "do" 25509 . 25511) (semantic-list "{						\\
	(head)->cqh_first = (void *)(head);				\\
	(head)->cqh_last = (void *)(head);				\\
}" 25512 . 25605) (WHILE "while" 25606 . 25611) (semantic-list "(0)" 25612 . 25615)))
          ("TRASHIT" (spp-arg-list ("x") 7743 . 7746))
          ("SLIST_ENTRY" (spp-arg-list ("type") 9123 . 9129) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 9137 . 9157) (STRUCT "struct" 9166 . 9172) (semantic-list "{								\\
	struct type *sle_next;	/* next element */			\\
}" 9173 . 9232) (symbol "__MISMATCH_TAGS_POP" 9243 . 9262)))
          ("SLIST_FOREACH_PREVPTR" (spp-arg-list ("var" "varp" "head" "field") 9755 . 9779) . ((FOR "for" 9785 . 9788) (semantic-list "((varp) = &SLIST_FIRST((head));				\\
	    ((var) = *(varp)) != NULL;					\\
	    (varp) = &SLIST_NEXT((var), field))" 9789 . 9904)))
          ("SLIST_INSERT_AFTER" (spp-arg-list ("slistelm" "elm" "field") 10017 . 10039) . 
              ((DO "do" 10040 . 10042) (semantic-list "{			\\
	SLIST_NEXT((elm), field) = SLIST_NEXT((slistelm), field);	\\
	SLIST_NEXT((slistelm), field) = (elm);				\\
}" 10043 . 10156) (WHILE "while" 10157 . 10162) (semantic-list "(0)" 10163 . 10166)))
          ("STAILQ_ENTRY" (spp-arg-list ("type") 11506 . 11512) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 11520 . 11540) (STRUCT "struct" 11549 . 11555) (semantic-list "{								\\
	struct type *stqe_next;	/* next element */			\\
}" 11556 . 11616) (symbol "__MISMATCH_TAGS_POP" 11627 . 11646)))
          ("STAILQ_LAST" (spp-arg-list ("head" "type" "field") 13171 . 13190) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 13197 . 13217) (semantic-list "(STAILQ_EMPTY((head)) ?						\\
		NULL :							\\
	        ((struct type *)(void *)				\\
		((char *)((head)->stqh_last) - __offsetof(struct type, field))))" 13227 . 13380) (symbol "__MISMATCH_TAGS_POP" 13382 . 13401)))
          ("QMD_LIST_CHECK_PREV" (spp-arg-list ("elm" "field") 16528 . 16540))
          ("LIST_REMOVE" (spp-arg-list ("elm" "field") 18165 . 18177) . 
              ((DO "do" 18178 . 18180) (semantic-list "{					\\
	QMD_LIST_CHECK_NEXT(elm, field);				\\
	QMD_LIST_CHECK_PREV(elm, field);				\\
	if (LIST_NEXT((elm), field) != NULL)				\\
		LIST_NEXT((elm), field)->field.le_prev = 		\\
		    (elm)->field.le_prev;				\\
	*(elm)->field.le_prev = LIST_NEXT((elm), field);		\\
	TRASHIT((elm)->field.le_next);					\\
	TRASHIT((elm)->field.le_prev);					\\
}" 18181 . 18520) (WHILE "while" 18521 . 18526) (semantic-list "(0)" 18527 . 18530)))
          ("CIRCLEQ_EMPTY" (spp-arg-list ("head") 25229 . 25235) . ((semantic-list "((head)->cqh_first == (void *)(head))" 25236 . 25273)))
          ("CIRCLEQ_INSERT_HEAD" (spp-arg-list ("head" "elm" "field") 26386 . 26404) . 
              ((DO "do" 26405 . 26407) (semantic-list "{			\\
	(elm)->field.cqe_next = (head)->cqh_first;			\\
	(elm)->field.cqe_prev = (void *)(head);				\\
	if ((head)->cqh_last == (void *)(head))				\\
		(head)->cqh_last = (elm);				\\
	else								\\
		(head)->cqh_first->field.cqe_prev = (elm);		\\
	(head)->cqh_first = (elm);					\\
}" 26408 . 26685) (WHILE "while" 26686 . 26691) (semantic-list "(0)" 26692 . 26695)))
          ("__MISMATCH_TAGS_PUSH")
          ("SLIST_HEAD" (spp-arg-list ("name" "type") 8896 . 8908) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 8916 . 8936) (STRUCT "struct" 8945 . 8951) (symbol "name" 8952 . 8956) (semantic-list "{								\\
	struct type *slh_first;	/* first element */			\\
}" 8957 . 9018) (symbol "__MISMATCH_TAGS_POP" 9029 . 9048)))
          ("SLIST_NEXT" (spp-arg-list ("elm" "field") 10341 . 10353) . ((semantic-list "((elm)->field.sle_next)" 10354 . 10377)))
          ("STAILQ_HEAD" (spp-arg-list ("name" "type") 11197 . 11209) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 11217 . 11237) (STRUCT "struct" 11246 . 11252) (symbol "name" 11253 . 11257) (semantic-list "{								\\
	struct type *stqh_first;/* first element */			\\
	struct type **stqh_last;/* addr of last next element */		\\
}" 11258 . 11379) (symbol "__MISMATCH_TAGS_POP" 11390 . 11409)))
          ("STAILQ_INSERT_TAIL" (spp-arg-list ("head" "elm" "field") 12983 . 13001) . 
              ((DO "do" 13002 . 13004) (semantic-list "{			\\
	STAILQ_NEXT((elm), field) = NULL;				\\
	*(head)->stqh_last = (elm);					\\
	(head)->stqh_last = &STAILQ_NEXT((elm), field);			\\
}" 13005 . 13140) (WHILE "while" 13141 . 13146) (semantic-list "(0)" 13147 . 13150)))
          ("STAILQ_NEXT" (spp-arg-list ("elm" "field") 13422 . 13434) . ((semantic-list "((elm)->field.stqe_next)" 13435 . 13459)))
          ("QMD_LIST_CHECK_HEAD" (spp-arg-list ("head" "field") 16447 . 16460))
          ("QMD_LIST_CHECK_NEXT" (spp-arg-list ("elm" "field") 16488 . 16500))
          ("LIST_INIT" (spp-arg-list ("head") 17029 . 17035) . 
              ((DO "do" 17036 . 17038) (semantic-list "{						\\
	LIST_FIRST((head)) = NULL;					\\
}" 17039 . 17083) (WHILE "while" 17084 . 17089) (semantic-list "(0)" 17090 . 17093)))
          ("TAILQ_CONCAT" (spp-arg-list ("head1" "head2" "field") 19667 . 19688) . 
              ((DO "do" 19689 . 19691) (semantic-list "{				\\
	if (!TAILQ_EMPTY(head2)) {					\\
		*(head1)->tqh_last = (head2)->tqh_first;		\\
		(head2)->tqh_first->field.tqe_prev = (head1)->tqh_last;	\\
		(head1)->tqh_last = (head2)->tqh_last;			\\
		TAILQ_INIT((head2));					\\
		QMD_TRACE_HEAD(head1);					\\
		QMD_TRACE_HEAD(head2);					\\
	}								\\
}" 19692 . 19988) (WHILE "while" 19989 . 19994) (semantic-list "(0)" 19995 . 19998)))
          ("TAILQ_REMOVE" (spp-arg-list ("head" "elm" "field") 22966 . 22984) . 
              ((DO "do" 22985 . 22987) (semantic-list "{				\\
	if ((TAILQ_NEXT((elm), field)) != NULL)				\\
		TAILQ_NEXT((elm), field)->field.tqe_prev = 		\\
		    (elm)->field.tqe_prev;				\\
	else {								\\
		(head)->tqh_last = (elm)->field.tqe_prev;		\\
		QMD_TRACE_HEAD(head);					\\
	}								\\
	*(elm)->field.tqe_prev = TAILQ_NEXT((elm), field);		\\
	TRASHIT((elm)->field.tqe_next);					\\
	TRASHIT((elm)->field.tqe_prev);					\\
	QMD_TRACE_ELEM(&(elm)->field);					\\
}" 22988 . 23402) (WHILE "while" 23403 . 23408) (semantic-list "(0)" 23409 . 23412)))
          ("STAILQ_REMOVE_HEAD_UNTIL" (spp-arg-list ("head" "elm" "field") 14188 . 14206) . 
              ((DO "do" 14207 . 14209) (semantic-list "{                 \\
       if ((STAILQ_FIRST((head)) = STAILQ_NEXT((elm), field)) == NULL) \\
               (head)->stqh_last = &STAILQ_FIRST((head));              \\
}" 14210 . 14377) (WHILE "while" 14378 . 14383) (semantic-list "(0)" 14384 . 14387)))
          ("LIST_FIRST" (spp-arg-list ("head") 16671 . 16677) . ((semantic-list "((head)->lh_first)" 16678 . 16696)))
          ("TAILQ_EMPTY" (spp-arg-list ("head") 20019 . 20025) . ((semantic-list "((head)->tqh_first == NULL)" 20026 . 20053)))
          ("TAILQ_SWAP" (spp-arg-list ("head1" "head2" "type" "field") 23492 . 23519) . 
              ((symbol "__MISMATCH_TAGS_PUSH" 23548 . 23568) (DO "do" 23622 . 23624) (semantic-list "{                                                                    \\
	struct type *swap_first = (head1)->tqh_first;                   \\
	struct type **swap_last = (head1)->tqh_last;                    \\
	(head1)->tqh_first = (head2)->tqh_first;                        \\
	(head1)->tqh_last = (head2)->tqh_last;                          \\
	(head2)->tqh_first = swap_first;                                \\
	(head2)->tqh_last = swap_last;                                  \\
	if ((swap_first = (head1)->tqh_first) != NULL)                  \\
		swap_first->field.tqe_prev = &(head1)->tqh_first;       \\
	else                                                            \\
		(head1)->tqh_last = &(head1)->tqh_first;                \\
	if ((swap_first = (head2)->tqh_first) != NULL)                  \\
		swap_first->field.tqe_prev = &(head2)->tqh_first;       \\
	else                                                            \\
		(head2)->tqh_last = &(head2)->tqh_first;                \\
}" 23625 . 24607) (WHILE "while" 24608 . 24613) (semantic-list "(0)" 24614 . 24617) (symbol "__MISMATCH_TAGS_POP" 24680 . 24699)))
          )
)
    (semanticdb-table "ioctl.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_IOCTL_H_" variable (:constant-flag t) nil [3627 3640])
            ("sys/ttycom.h" include (:system-flag t) nil [3642 3665])
            ("ttysize" type
               (:members 
                  ( ("ts_lines" variable (:type "unsigned short") (reparse-symbol classsubparts) [3857 3881])
                    ("ts_cols" variable (:type "unsigned short") (reparse-symbol classsubparts) [3883 3906])
                    ("ts_xxx" variable (:type "unsigned short") (reparse-symbol classsubparts) [3908 3930])
                    ("ts_yyy" variable (:type "unsigned short") (reparse-symbol classsubparts) [3932 3954]))                  
                :type "struct")
                nil [3839 3957])
            ("TIOCGSIZE" variable (:constant-flag t) nil [3966 3975])
            ("TIOCSSIZE" variable (:constant-flag t) nil [3995 4004])
            ("sys/ioccom.h" include (:system-flag t) nil [4017 4040])
            ("sys/filio.h" include (:system-flag t) nil [4042 4064])
            ("sys/sockio.h" include (:system-flag t) nil [4065 4088])
            ("sys/cdefs.h" include (:system-flag t) nil [4091 4113])
            ("ioctl" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [4139 4143])
                    ("" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4144 4158])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [4159 4163]))                  
                :type "int")
                nil [4129 4164]))          
      :file "ioctl.h"
      :pointmax 4461
      :fsize 4460
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("TIOCSSIZE" . ((symbol "TIOCSWINSZ" 4005 . 4015)))
          ("_SYS_IOCTL_H_")
          ("TIOCGSIZE" . ((symbol "TIOCGWINSZ" 3976 . 3986)))
          )
)
    (semanticdb-table "select.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_SELECT_H_" variable (:constant-flag t) nil [3244 3258])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3260 3289])
            ("sys/cdefs.h" include (:system-flag t) nil [3290 3312])
            ("sys/_types.h" include (:system-flag t) nil [3313 3336])
            ("sys/_types/_fd_def.h" include (:system-flag t) nil [3558 3589])
            ("sys/_types/_timespec.h" include (:system-flag t) nil [3590 3623])
            ("sys/_types/_timeval.h" include (:system-flag t) nil [3624 3656])
            ("sys/_types/_time_t.h" include (:system-flag t) nil [3816 3847])
            ("sys/_types/_suseconds_t.h" include (:system-flag t) nil [3848 3884])
            ("sys/_types/_sigset_t.h" include (:system-flag t) nil [3885 3918])
            ("sys/_types/_fd_setsize.h" include (:system-flag t) nil [4321 4356])
            ("sys/_types/_fd_set.h" include (:system-flag t) nil [4357 4388])
            ("sys/_types/_fd_clr.h" include (:system-flag t) nil [4389 4420])
            ("sys/_types/_fd_isset.h" include (:system-flag t) nil [4421 4454])
            ("sys/_types/_fd_zero.h" include (:system-flag t) nil [4455 4487])
            ("pselect" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [4683 4687])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4688 4707])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4697 4708])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4709 4728])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4718 4729])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4732 4751])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4741 4752])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("timespec" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4753 4787])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4777 4788])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("sigset_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4791 4818])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4808 4819]))                  
                :type "int")
                nil [4670 5243])
            ("sys/_select.h" include (:system-flag t) nil [5269 5293]))          
      :file "select.h"
      :pointmax 5363
      :fsize 5362
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS_SELECT_H_")
          )
)
    (semanticdb-table "_select.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS__SELECT_H_" variable (:constant-flag t) nil [1715 1730])
            ("select" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1744 1748])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1749 1768])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1758 1769])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1770 1789])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1779 1790])
                    ("" variable
                       (:pointer 1
                        :type ("fd_set" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1793 1812])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1802 1813])
                    ("" variable
                       (:pointer 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1814 1841])
                    ("" variable (:type ("restrict" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1831 1842]))                  
                :type "int")
                nil [1732 2263]))          
      :file "_select.h"
      :pointmax 2295
      :fsize 2294
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS__SELECT_H_")
          )
)
    (semanticdb-table "syslimits.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_SYSLIMITS_H_" variable (:constant-flag t) nil [3312 3329])
            ("sys/cdefs.h" include (:system-flag t) nil [3331 3353]))          
      :file "syslimits.h"
      :pointmax 5533
      :fsize 5532
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS_SYSLIMITS_H_")
          )
)
    (semanticdb-table "termios.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_TERMIOS_H_" variable (:constant-flag t) nil [3335 3350])
            ("sys/cdefs.h" include (:system-flag t) nil [3352 3374])
            ("VEOF" variable (:constant-flag t) nil [3499 3503])
            ("VEOL" variable (:constant-flag t) nil [3528 3532])
            ("VERASE" variable (:constant-flag t) nil [3674 3680])
            ("VKILL" variable (:constant-flag t) nil [3824 3829])
            ("VINTR" variable (:constant-flag t) nil [3995 4000])
            ("VQUIT" variable (:constant-flag t) nil [4023 4028])
            ("VSUSP" variable (:constant-flag t) nil [4051 4056])
            ("VSTART" variable (:constant-flag t) nil [4197 4203])
            ("VSTOP" variable (:constant-flag t) nil [4234 4239])
            ("VMIN" variable (:constant-flag t) nil [4401 4405])
            ("VTIME" variable (:constant-flag t) nil [4432 4437])
            ("NCCS" variable (:constant-flag t) nil [4606 4610])
            ("sys/_types/_posix_vdisable.h" include (:system-flag t) nil [4616 4655])
            ("IGNBRK" variable (:constant-flag t) nil [4849 4855])
            ("BRKINT" variable (:constant-flag t) nil [4905 4911])
            ("IGNPAR" variable (:constant-flag t) nil [4959 4965])
            ("PARMRK" variable (:constant-flag t) nil [5023 5029])
            ("INPCK" variable (:constant-flag t) nil [5087 5092])
            ("ISTRIP" variable (:constant-flag t) nil [5152 5158])
            ("INLCR" variable (:constant-flag t) nil [5209 5214])
            ("IGNCR" variable (:constant-flag t) nil [5256 5261])
            ("ICRNL" variable (:constant-flag t) nil [5298 5303])
            ("IXON" variable (:constant-flag t) nil [5355 5359])
            ("IXOFF" variable (:constant-flag t) nil [5413 5418])
            ("IXANY" variable (:constant-flag t) nil [5471 5476])
            ("OPOST" variable (:constant-flag t) nil [5828 5833])
            ("ONLCR" variable (:constant-flag t) nil [5895 5900])
            ("OCRNL" variable (:constant-flag t) nil [6363 6368])
            ("ONOCR" variable (:constant-flag t) nil [6418 6423])
            ("ONLRET" variable (:constant-flag t) nil [6475 6481])
            ("OFILL" variable (:constant-flag t) nil [6532 6537])
            ("NLDLY" variable (:constant-flag t) nil [6594 6599])
            ("TABDLY" variable (:constant-flag t) nil [6635 6641])
            ("CRDLY" variable (:constant-flag t) nil [6689 6694])
            ("FFDLY" variable (:constant-flag t) nil [6730 6735])
            ("BSDLY" variable (:constant-flag t) nil [6778 6783])
            ("VTDLY" variable (:constant-flag t) nil [6819 6824])
            ("OFDEL" variable (:constant-flag t) nil [6870 6875])
            ("CSIZE" variable (:constant-flag t) nil [8382 8387])
            ("CS5" variable (:constant-flag t) nil [8438 8441])
            ("CS6" variable (:constant-flag t) nil [8496 8499])
            ("CS7" variable (:constant-flag t) nil [8545 8548])
            ("CS8" variable (:constant-flag t) nil [8594 8597])
            ("CSTOPB" variable (:constant-flag t) nil [8639 8645])
            ("CREAD" variable (:constant-flag t) nil [8689 8694])
            ("PARENB" variable (:constant-flag t) nil [8737 8743])
            ("PARODD" variable (:constant-flag t) nil [8784 8790])
            ("HUPCL" variable (:constant-flag t) nil [8839 8844])
            ("CLOCAL" variable (:constant-flag t) nil [8893 8899])
            ("ECHOE" variable (:constant-flag t) nil [9783 9788])
            ("ECHOK" variable (:constant-flag t) nil [9836 9841])
            ("ECHO" variable (:constant-flag t) nil [9892 9896])
            ("ECHONL" variable (:constant-flag t) nil [9938 9944])
            ("ISIG" variable (:constant-flag t) nil [10240 10244])
            ("ICANON" variable (:constant-flag t) nil [10306 10312])
            ("IEXTEN" variable (:constant-flag t) nil [10541 10547])
            ("TOSTOP" variable (:constant-flag t) nil [10776 10782])
            ("NOFLSH" variable (:constant-flag t) nil [11147 11153])
            ("tcflag_t" type
               (:typedef ("unsigned long")
                :type "typedef")
                nil [11201 11232])
            ("cc_t" type
               (:typedef ("unsigned char")
                :type "typedef")
                nil [11233 11260])
            ("speed_t" type
               (:typedef ("unsigned long")
                :type "typedef")
                nil [11261 11291])
            ("termios" type
               (:members 
                  ( ("c_iflag" variable (:type ("tcflag_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11311 11328])
                    ("c_oflag" variable (:type ("tcflag_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11348 11365])
                    ("c_cflag" variable (:type ("tcflag_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11386 11403])
                    ("c_lflag" variable (:type ("tcflag_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11425 11442])
                    ("c_cc" variable
                       (:dereference 1
                        :type ("cc_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11462 11479])
                    ("c_ispeed" variable (:type ("speed_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11501 11519])
                    ("c_ospeed" variable (:type ("speed_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11539 11557]))                  
                :type "struct")
                nil [11293 11579])
            ("TCSANOW" variable (:constant-flag t) nil [11666 11673])
            ("TCSADRAIN" variable (:constant-flag t) nil [11714 11723])
            ("TCSAFLUSH" variable (:constant-flag t) nil [11767 11776])
            ("B0" variable (:constant-flag t) nil [11972 11974])
            ("B50" variable (:constant-flag t) nil [11985 11988])
            ("B75" variable (:constant-flag t) nil [12000 12003])
            ("B110" variable (:constant-flag t) nil [12015 12019])
            ("B134" variable (:constant-flag t) nil [12032 12036])
            ("B150" variable (:constant-flag t) nil [12049 12053])
            ("B200" variable (:constant-flag t) nil [12066 12070])
            ("B300" variable (:constant-flag t) nil [12083 12087])
            ("B600" variable (:constant-flag t) nil [12100 12104])
            ("B1200" variable (:constant-flag t) nil [12117 12122])
            ("B1800" variable (:constant-flag t) nil [12136 12141])
            ("B2400" variable (:constant-flag t) nil [12155 12160])
            ("B4800" variable (:constant-flag t) nil [12174 12179])
            ("B9600" variable (:constant-flag t) nil [12193 12198])
            ("B19200" variable (:constant-flag t) nil [12212 12218])
            ("B38400" variable (:constant-flag t) nil [12233 12239])
            ("TCIFLUSH" variable (:constant-flag t) nil [12555 12563])
            ("TCOFLUSH" variable (:constant-flag t) nil [12574 12582])
            ("TCIOFLUSH" variable (:constant-flag t) nil [12593 12602])
            ("TCOOFF" variable (:constant-flag t) nil [12613 12619])
            ("TCOON" variable (:constant-flag t) nil [12631 12636])
            ("TCIOFF" variable (:constant-flag t) nil [12648 12654])
            ("TCION" variable (:constant-flag t) nil [12666 12671])
            ("sys/cdefs.h" include (:system-flag t) nil [12676 12698])
            ("cfgetispeed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12734 12757]))                  
                :type ("speed_t" type (:type "class") nil nil))
                nil [12714 12758])
            ("cfgetospeed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12779 12802]))                  
                :type ("speed_t" type (:type "class") nil nil))
                nil [12759 12803])
            ("cfsetispeed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12820 12837])
                    ("" variable (:type ("speed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12838 12846]))                  
                :type "int")
                nil [12804 12847])
            ("cfsetospeed" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12864 12881])
                    ("" variable (:type ("speed_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12882 12890]))                  
                :type "int")
                nil [12848 12891])
            ("tcgetattr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [12906 12910])
                    ("" variable
                       (:pointer 1
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12911 12928]))                  
                :type "int")
                nil [12892 12929])
            ("tcsetattr" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [12944 12948])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [12949 12953])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("termios" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12954 12977]))                  
                :type "int")
                nil [12930 12978])
            ("tcdrain" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [12991 12995]))                  
                :type "int")
                nil [12979 13022])
            ("tcflow" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [13034 13038])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [13039 13043]))                  
                :type "int")
                nil [13023 13044])
            ("tcflush" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [13057 13061])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [13062 13066]))                  
                :type "int")
                nil [13045 13067])
            ("tcsendbreak" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [13084 13088])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [13089 13093]))                  
                :type "int")
                nil [13068 13094]))          
      :file "termios.h"
      :pointmax 13717
      :fsize 13716
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("VEOF" . ((number "0" 3505 . 3506)))
          ("OCRNL" . ((number "0x00000010" 6370 . 6380)))
          ("FFDLY" . ((number "0x00004000" 6737 . 6747)))
          ("B110" . ((number "110" 12020 . 12023)))
          ("_SYS_TERMIOS_H_")
          ("IGNCR" . ((number "0x00000080" 5263 . 5273)))
          ("BSDLY" . ((number "0x00008000" 6785 . 6795)))
          ("VINTR" . ((number "8" 4002 . 4003)))
          ("B300" . ((number "300" 12088 . 12091)))
          ("VERASE" . ((number "3" 3682 . 3683)))
          ("VQUIT" . ((number "9" 4030 . 4031)))
          ("NCCS" . ((number "20" 4612 . 4614)))
          ("INLCR" . ((number "0x00000040" 5216 . 5226)))
          ("CRDLY" . ((number "0x00003000" 6696 . 6706)))
          ("CSTOPB" . ((number "0x00000400" 8647 . 8657)))
          ("CLOCAL" . ((number "0x00008000" 8901 . 8911)))
          ("ICANON" . ((number "0x00000100" 10314 . 10324)))
          ("B600" . ((number "600" 12105 . 12108)))
          ("IGNBRK" . ((number "0x00000001" 4857 . 4867)))
          ("NLDLY" . ((number "0x00000300" 6601 . 6611)))
          ("PARODD" . ((number "0x00002000" 8792 . 8802)))
          ("ECHONL" . ((number "0x00000010" 9946 . 9956)))
          ("IEXTEN" . ((number "0x00000400" 10549 . 10559)))
          ("TOSTOP" . ((number "0x00400000" 10784 . 10794)))
          ("TCION" . ((number "4" 12673 . 12674)))
          ("VSUSP" . ((number "10" 4058 . 4060)))
          ("BRKINT" . ((number "0x00000002" 4913 . 4923)))
          ("ECHO" . ((number "0x00000008" 9898 . 9908)))
          ("ISIG" . ((number "0x00000080" 10246 . 10256)))
          ("B1200" . ((number "1200" 12123 . 12127)))
          ("VEOL" . ((number "1" 3534 . 3535)))
          ("INPCK" . ((number "0x00000010" 5094 . 5104)))
          ("IXANY" . ((number "0x00000800" 5478 . 5488)))
          ("OFDEL" . ((number "0x00020000" 6877 . 6887)))
          ("CSIZE" . ((number "0x00000300" 8389 . 8399)))
          ("ECHOE" . ((number "0x00000002" 9790 . 9800)))
          ("B75" . ((number "75" 12004 . 12006)))
          ("B200" . ((number "200" 12071 . 12074)))
          ("TCIOFLUSH" . ((number "3" 12603 . 12604)))
          ("TCOON" . ((number "2" 12638 . 12639)))
          ("TCIOFF" . ((number "3" 12656 . 12657)))
          ("VKILL" . ((number "5" 3831 . 3832)))
          ("VSTART" . ((number "12" 4205 . 4207)))
          ("OFILL" . ((number "0x00000080" 6539 . 6549)))
          ("PARENB" . ((number "0x00001000" 8745 . 8755)))
          ("TCSAFLUSH" . ((number "2" 11777 . 11778)))
          ("B1800" . ((number "1800" 12142 . 12146)))
          ("B38400" . ((number "38400" 12240 . 12245)))
          ("IGNPAR" . ((number "0x00000004" 4967 . 4977)))
          ("ICRNL" . ((number "0x00000100" 5305 . 5315)))
          ("ONLCR" . ((number "0x00000002" 5902 . 5912)))
          ("CS5" . ((number "0x00000000" 8447 . 8457)))
          ("B50" . ((number "50" 11989 . 11991)))
          ("TCIFLUSH" . ((number "1" 12564 . 12565)))
          ("PARMRK" . ((number "0x00000008" 5031 . 5041)))
          ("OPOST" . ((number "0x00000001" 5835 . 5845)))
          ("ONOCR" . ((number "0x00000020" 6425 . 6435)))
          ("ONLRET" . ((number "0x00000040" 6483 . 6493)))
          ("TABDLY" . ((number "0x00000c04" 6643 . 6653)))
          ("CS6" . ((number "0x00000100" 8505 . 8515)))
          ("VSTOP" . ((number "13" 4241 . 4243)))
          ("VMIN" . ((number "16" 4407 . 4409)))
          ("IXON" . ((number "0x00000200" 5361 . 5371)))
          ("VTDLY" . ((number "0x00010000" 6826 . 6836)))
          ("CS7" . ((number "0x00000200" 8554 . 8564)))
          ("CREAD" . ((number "0x00000800" 8696 . 8706)))
          ("B134" . ((number "134" 12037 . 12040)))
          ("B4800" . ((number "4800" 12180 . 12184)))
          ("B9600" . ((number "9600" 12199 . 12203)))
          ("B19200" . ((number "19200" 12219 . 12224)))
          ("TCOFLUSH" . ((number "2" 12583 . 12584)))
          ("IXOFF" . ((number "0x00000400" 5420 . 5430)))
          ("CS8" . ((number "0x00000300" 8603 . 8613)))
          ("HUPCL" . ((number "0x00004000" 8846 . 8856)))
          ("TCSADRAIN" . ((number "1" 11724 . 11725)))
          ("B2400" . ((number "2400" 12161 . 12165)))
          ("VTIME" . ((number "17" 4439 . 4441)))
          ("ISTRIP" . ((number "0x00000020" 5160 . 5170)))
          ("ECHOK" . ((number "0x00000004" 9843 . 9853)))
          ("NOFLSH" . ((number "0x80000000" 11155 . 11165)))
          ("TCSANOW" . ((number "0" 11675 . 11676)))
          ("B0" . ((number "0" 11975 . 11976)))
          ("B150" . ((number "150" 12054 . 12057)))
          ("TCOOFF" . ((number "1" 12621 . 12622)))
          )
)
    (semanticdb-table "ttycom.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_TTYCOM_H_" variable (:constant-flag t) nil [3645 3659])
            ("sys/ioccom.h" include (:system-flag t) nil [3661 3684])
            ("winsize" type
               (:members 
                  ( ("ws_row" variable (:type "unsigned short") (reparse-symbol classsubparts) [3977 3999])
                    ("ws_col" variable (:type "unsigned short") (reparse-symbol classsubparts) [4028 4050])
                    ("ws_xpixel" variable (:type "unsigned short") (reparse-symbol classsubparts) [4082 4107])
                    ("ws_ypixel" variable (:type "unsigned short") (reparse-symbol classsubparts) [4139 4164]))                  
                :type "struct")
                nil [3959 4195])
            ("TIOCMODG" variable (:constant-flag t) nil [4205 4213])
            ("TIOCMODS" variable (:constant-flag t) nil [4270 4278])
            ("TIOCM_LE" variable (:constant-flag t) nil [4336 4344])
            ("TIOCM_DTR" variable (:constant-flag t) nil [4378 4387])
            ("TIOCM_RTS" variable (:constant-flag t) nil [4429 4438])
            ("TIOCM_ST" variable (:constant-flag t) nil [4476 4484])
            ("TIOCM_SR" variable (:constant-flag t) nil [4525 4533])
            ("TIOCM_CTS" variable (:constant-flag t) nil [4573 4582])
            ("TIOCM_CAR" variable (:constant-flag t) nil [4618 4627])
            ("TIOCM_CD" variable (:constant-flag t) nil [4664 4672])
            ("TIOCM_RNG" variable (:constant-flag t) nil [4692 4701])
            ("TIOCM_RI" variable (:constant-flag t) nil [4728 4736])
            ("TIOCM_DSR" variable (:constant-flag t) nil [4756 4765])
            ("TIOCEXCL" variable (:constant-flag t) nil [4825 4833])
            ("TIOCNXCL" variable (:constant-flag t) nil [4888 4896])
            ("TIOCFLUSH" variable (:constant-flag t) nil [4975 4984])
            ("TIOCGETA" variable (:constant-flag t) nil [5057 5065])
            ("TIOCSETA" variable (:constant-flag t) nil [5129 5137])
            ("TIOCSETAW" variable (:constant-flag t) nil [5201 5210])
            ("TIOCSETAF" variable (:constant-flag t) nil [5273 5282])
            ("TIOCGETD" variable (:constant-flag t) nil [5348 5356])
            ("TIOCSETD" variable (:constant-flag t) nil [5410 5418])
            ("TIOCIXON" variable (:constant-flag t) nil [5472 5480])
            ("TIOCIXOFF" variable (:constant-flag t) nil [5533 5542])
            ("TIOCSBRK" variable (:constant-flag t) nil [5621 5629])
            ("TIOCCBRK" variable (:constant-flag t) nil [5674 5682])
            ("TIOCSDTR" variable (:constant-flag t) nil [5729 5737])
            ("TIOCCDTR" variable (:constant-flag t) nil [5792 5800])
            ("TIOCGPGRP" variable (:constant-flag t) nil [5857 5866])
            ("TIOCSPGRP" variable (:constant-flag t) nil [5917 5926])
            ("TIOCOUTQ" variable (:constant-flag t) nil [6004 6012])
            ("TIOCSTI" variable (:constant-flag t) nil [6065 6072])
            ("TIOCNOTTY" variable (:constant-flag t) nil [6133 6142])
            ("TIOCPKT" variable (:constant-flag t) nil [6194 6201])
            ("TIOCPKT_DATA" variable (:constant-flag t) nil [6265 6277])
            ("TIOCPKT_FLUSHREAD" variable (:constant-flag t) nil [6311 6328])
            ("TIOCPKT_FLUSHWRITE" variable (:constant-flag t) nil [6362 6380])
            ("TIOCPKT_STOP" variable (:constant-flag t) nil [6414 6426])
            ("TIOCPKT_START" variable (:constant-flag t) nil [6460 6473])
            ("TIOCPKT_NOSTOP" variable (:constant-flag t) nil [6508 6522])
            ("TIOCPKT_DOSTOP" variable (:constant-flag t) nil [6559 6573])
            ("TIOCPKT_IOCTL" variable (:constant-flag t) nil [6608 6621])
            ("TIOCSTOP" variable (:constant-flag t) nil [6669 6677])
            ("TIOCSTART" variable (:constant-flag t) nil [6729 6738])
            ("TIOCMSET" variable (:constant-flag t) nil [6791 6799])
            ("TIOCMBIS" variable (:constant-flag t) nil [6853 6861])
            ("TIOCMBIC" variable (:constant-flag t) nil [6911 6919])
            ("TIOCMGET" variable (:constant-flag t) nil [6969 6977])
            ("TIOCREMOTE" variable (:constant-flag t) nil [7031 7041])
            ("TIOCGWINSZ" variable (:constant-flag t) nil [7097 7107])
            ("TIOCSWINSZ" variable (:constant-flag t) nil [7169 7179])
            ("TIOCUCNTL" variable (:constant-flag t) nil [7241 7250])
            ("TIOCSTAT" variable (:constant-flag t) nil [7312 7320])
            ("UIOCCMD" variable (:constant-flag t) nil [7379 7386])
            ("TIOCSCONS" variable (:constant-flag t) nil [7432 7441])
            ("TIOCCONS" variable (:constant-flag t) nil [7488 7496])
            ("TIOCSCTTY" variable (:constant-flag t) nil [7553 7562])
            ("TIOCEXT" variable (:constant-flag t) nil [7615 7622])
            ("TIOCSIG" variable (:constant-flag t) nil [7682 7689])
            ("TIOCDRAIN" variable (:constant-flag t) nil [7741 7750])
            ("TIOCMSDTRWAIT" variable (:constant-flag t) nil [7805 7818])
            ("TIOCMGDTRWAIT" variable (:constant-flag t) nil [7877 7890])
            ("TIOCTIMESTAMP" variable (:constant-flag t) nil [7949 7962])
            ("TIOCDCDTIMESTAMP" variable (:constant-flag t) nil [8057 8073])
            ("TIOCSDRAINWAIT" variable (:constant-flag t) nil [8165 8179])
            ("TIOCGDRAINWAIT" variable (:constant-flag t) nil [8233 8247])
            ("TIOCDSIMICROCODE" variable (:constant-flag t) nil [8301 8317])
            ("TIOCPTYGRANT" variable (:constant-flag t) nil [8391 8403])
            ("TIOCPTYGNAME" variable (:constant-flag t) nil [8443 8455])
            ("TIOCPTYUNLK" variable (:constant-flag t) nil [8509 8520])
            ("TTYDISC" variable (:constant-flag t) nil [8562 8569])
            ("TABLDISC" variable (:constant-flag t) nil [8616 8624])
            ("SLIPDISC" variable (:constant-flag t) nil [8660 8668])
            ("PPPDISC" variable (:constant-flag t) nil [8707 8714]))          
      :file "ttycom.h"
      :pointmax 8770
      :fsize 8769
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("_SYS_TTYCOM_H_")
          ("TIOCFLUSH" . ((symbol "_IOW" 4985 . 4989) (semantic-list "('t', 16, int)" 4989 . 5003)))
          ("TIOCGETD" . ((symbol "_IOR" 5357 . 5361) (semantic-list "('t', 26, int)" 5361 . 5375)))
          ("TIOCSPGRP" . ((symbol "_IOW" 5927 . 5931) (semantic-list "('t', 118, int)" 5931 . 5946)))
          ("TIOCMBIS" . ((symbol "_IOW" 6862 . 6866) (semantic-list "('t', 108, int)" 6866 . 6881)))
          ("TIOCM_RTS" . ((number "0004" 4439 . 4443)))
          ("TIOCM_DSR" . ((number "0400" 4766 . 4770)))
          ("TIOCCDTR" . ((symbol "_IO" 5802 . 5805) (semantic-list "('t', 120)" 5805 . 5815)))
          ("TIOCPKT_NOSTOP" . ((number "0x10" 6524 . 6528)))
          ("TIOCSTOP" . ((symbol "_IO" 6679 . 6682) (semantic-list "('t', 111)" 6682 . 6692)))
          ("TIOCSDRAINWAIT" . ((symbol "_IOW" 8180 . 8184) (semantic-list "('t', 87, int)" 8184 . 8198)))
          ("SLIPDISC" . ((number "4" 8669 . 8670)))
          ("PPPDISC" . ((number "5" 8716 . 8717)))
          ("TIOCPKT_DOSTOP" . ((number "0x20" 6575 . 6579)))
          ("TIOCSTAT" . ((symbol "_IO" 7322 . 7325) (semantic-list "('t', 101)" 7325 . 7335)))
          ("TIOCSCTTY" . ((symbol "_IO" 7564 . 7567) (semantic-list "('t', 97)" 7567 . 7576)))
          ("TIOCSIG" . ((symbol "_IO" 7692 . 7695) (semantic-list "('t', 95)" 7695 . 7704)))
          ("TIOCMSDTRWAIT" . ((symbol "_IOW" 7819 . 7823) (semantic-list "('t', 91, int)" 7823 . 7837)))
          ("TIOCGDRAINWAIT" . ((symbol "_IOR" 8248 . 8252) (semantic-list "('t', 86, int)" 8252 . 8266)))
          ("TIOCPTYGRANT" . ((symbol "_IO" 8404 . 8407) (semantic-list "('t', 84)" 8407 . 8416)))
          ("TIOCM_CAR" . ((number "0100" 4628 . 4632)))
          ("TIOCGPGRP" . ((symbol "_IOR" 5867 . 5871) (semantic-list "('t', 119, int)" 5871 . 5886)))
          ("TTYDISC" . ((number "0" 8571 . 8572)))
          ("TIOCM_DTR" . ((number "0002" 4388 . 4392)))
          ("TIOCM_SR" . ((number "0020" 4534 . 4538)))
          ("TIOCIXOFF" . ((symbol "_IO" 5544 . 5547) (semantic-list "('t', 128)" 5547 . 5557)))
          ("TIOCSDTR" . ((symbol "_IO" 5739 . 5742) (semantic-list "('t', 121)" 5742 . 5752)))
          ("TIOCPKT_FLUSHREAD" . ((number "0x01" 6329 . 6333)))
          ("TIOCPKT_START" . ((number "0x08" 6475 . 6479)))
          ("TIOCGWINSZ" . ((symbol "_IOR" 7108 . 7112) (semantic-list "('t', 104, struct winsize)" 7112 . 7138)))
          ("TIOCDRAIN" . ((symbol "_IO" 7752 . 7755) (semantic-list "('t', 94)" 7755 . 7764)))
          ("TIOCM_RI" . ((symbol "TIOCM_RNG" 4737 . 4746)))
          ("TIOCNXCL" . ((symbol "_IO" 4898 . 4901) (semantic-list "('t', 14)" 4901 . 4910)))
          ("TIOCPKT_DATA" . ((number "0x00" 6279 . 6283)))
          ("TIOCREMOTE" . ((symbol "_IOW" 7042 . 7046) (semantic-list "('t', 105, int)" 7046 . 7061)))
          ("TIOCCONS" . ((symbol "_IOW" 7497 . 7501) (semantic-list "('t', 98, int)" 7501 . 7515)))
          ("TIOCMGDTRWAIT" . ((symbol "_IOR" 7891 . 7895) (semantic-list "('t', 90, int)" 7895 . 7909)))
          ("TIOCM_ST" . ((number "0010" 4485 . 4489)))
          ("TIOCSETAF" . ((symbol "_IOW" 5283 . 5287) (semantic-list "('t', 22, struct termios)" 5287 . 5312)))
          ("TIOCPKT_FLUSHWRITE" . ((number "0x02" 6381 . 6385)))
          ("TIOCSTART" . ((symbol "_IO" 6740 . 6743) (semantic-list "('t', 110)" 6743 . 6753)))
          ("TIOCUCNTL" . ((symbol "_IOW" 7251 . 7255) (semantic-list "('t', 102, int)" 7255 . 7270)))
          ("TIOCPTYGNAME" . ((symbol "_IOC" 8456 . 8460) (semantic-list "(IOC_OUT, 't', 83, 128)" 8460 . 8483)))
          ("TIOCM_CD" . ((symbol "TIOCM_CAR" 4673 . 4682)))
          ("TIOCPKT" . ((symbol "_IOW" 6203 . 6207) (semantic-list "('t', 112, int)" 6207 . 6222)))
          ("TIOCMGET" . ((symbol "_IOR" 6978 . 6982) (semantic-list "('t', 106, int)" 6982 . 6997)))
          ("TIOCSWINSZ" . ((symbol "_IOW" 7180 . 7184) (semantic-list "('t', 103, struct winsize)" 7184 . 7210)))
          ("TIOCTIMESTAMP" . ((symbol "_IOR" 7963 . 7967) (semantic-list "('t', 89, struct timeval)" 7967 . 7992)))
          ("TIOCDCDTIMESTAMP" . ((symbol "_IOR" 8074 . 8078) (semantic-list "('t', 88, struct timeval)" 8078 . 8103)))
          ("TIOCDSIMICROCODE" . ((symbol "_IO" 8318 . 8321) (semantic-list "('t', 85)" 8321 . 8330)))
          ("TIOCM_LE" . ((number "0001" 4345 . 4349)))
          ("TIOCM_CTS" . ((number "0040" 4583 . 4587)))
          ("TIOCEXCL" . ((symbol "_IO" 4835 . 4838) (semantic-list "('t', 13)" 4838 . 4847)))
          ("TIOCSETA" . ((symbol "_IOW" 5138 . 5142) (semantic-list "('t', 20, struct termios)" 5142 . 5167)))
          ("TIOCCBRK" . ((symbol "_IO" 5684 . 5687) (semantic-list "('t', 122)" 5687 . 5697)))
          ("TIOCOUTQ" . ((symbol "_IOR" 6013 . 6017) (semantic-list "('t', 115, int)" 6017 . 6032)))
          ("TIOCPKT_STOP" . ((number "0x04" 6428 . 6432)))
          ("TABLDISC" . ((number "3" 8625 . 8626)))
          ("TIOCM_RNG" . ((number "0200" 4702 . 4706)))
          ("TIOCGETA" . ((symbol "_IOR" 5066 . 5070) (semantic-list "('t', 19, struct termios)" 5070 . 5095)))
          ("TIOCSETAW" . ((symbol "_IOW" 5211 . 5215) (semantic-list "('t', 21, struct termios)" 5215 . 5240)))
          ("TIOCMBIC" . ((symbol "_IOW" 6920 . 6924) (semantic-list "('t', 107, int)" 6924 . 6939)))
          ("TIOCMODS" . ((symbol "_IOW" 4279 . 4283) (semantic-list "('t', 4, int)" 4283 . 4296)))
          ("TIOCSTI" . ((symbol "_IOW" 6074 . 6078) (semantic-list "('t', 114, char)" 6078 . 6094)))
          ("TIOCPKT_IOCTL" . ((number "0x40" 6623 . 6627)))
          ("UIOCCMD" (spp-arg-list ("n") 7386 . 7389) . ((symbol "_IO" 7390 . 7393) (semantic-list "('u', n)" 7393 . 7401)))
          ("TIOCSCONS" . ((symbol "_IO" 7442 . 7445) (semantic-list "('t', 99)" 7445 . 7454)))
          ("TIOCPTYUNLK" . ((symbol "_IO" 8521 . 8524) (semantic-list "('t', 82)" 8524 . 8533)))
          ("TIOCMODG" . ((symbol "_IOR" 4214 . 4218) (semantic-list "('t', 3, int)" 4218 . 4231)))
          ("TIOCSETD" . ((symbol "_IOW" 5419 . 5423) (semantic-list "('t', 27, int)" 5423 . 5437)))
          ("TIOCIXON" . ((symbol "_IO" 5482 . 5485) (semantic-list "('t', 129)" 5485 . 5495)))
          ("TIOCSBRK" . ((symbol "_IO" 5631 . 5634) (semantic-list "('t', 123)" 5634 . 5644)))
          ("TIOCNOTTY" . ((symbol "_IO" 6144 . 6147) (semantic-list "('t', 113)" 6147 . 6157)))
          ("TIOCMSET" . ((symbol "_IOW" 6800 . 6804) (semantic-list "('t', 109, int)" 6804 . 6819)))
          ("TIOCEXT" . ((symbol "_IOW" 7624 . 7628) (semantic-list "('t', 96, int)" 7628 . 7642)))
          )
)
    (semanticdb-table "ioccom.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_IOCCOM_H_" variable (:constant-flag t) nil [3324 3338])
            ("sys/_types.h" include (:system-flag t) nil [3340 3363])
            ("IOCPARM_MASK" variable (:constant-flag t) nil [3591 3603])
            ("IOCPARM_LEN" variable (:constant-flag t) nil [3660 3671])
            ("IOCBASECMD" variable (:constant-flag t) nil [3712 3722])
            ("IOCGROUP" variable (:constant-flag t) nil [3764 3772])
            ("IOCPARM_MAX" variable (:constant-flag t) nil [3805 3816])
            ("IOC_VOID" variable (:constant-flag t) nil [3897 3905])
            ("IOC_OUT" variable (:constant-flag t) nil [3967 3974])
            ("IOC_IN" variable (:constant-flag t) nil [4036 4042])
            ("IOC_INOUT" variable (:constant-flag t) nil [4111 4120])
            ("IOC_DIRMASK" variable (:constant-flag t) nil [4177 4188])
            ("_IOC" variable (:constant-flag t) nil [4221 4225])
            ("_IO" variable (:constant-flag t) nil [4322 4325])
            ("_IOR" variable (:constant-flag t) nil [4367 4371])
            ("_IOW" variable (:constant-flag t) nil [4422 4426])
            ("_IOWR" variable (:constant-flag t) nil [4530 4535]))          
      :file "ioccom.h"
      :pointmax 4610
      :fsize 4609
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("IOCPARM_LEN" (spp-arg-list ("x") 3671 . 3674) . ((semantic-list "(((x) >> 16) & IOCPARM_MASK)" 3675 . 3703)))
          ("_IOC" (spp-arg-list ("inout" "group" "num" "len") 4225 . 4246) . ((semantic-list "(inout | ((len & IOCPARM_MASK) << 16) | ((group) << 8) | (num))" 4250 . 4313)))
          ("IOC_INOUT" . ((semantic-list "(IOC_IN|IOC_OUT)" 4121 . 4137)))
          ("_IOR" (spp-arg-list ("g" "n" "t") 4371 . 4378) . ((symbol "_IOC" 4379 . 4383) (semantic-list "(IOC_OUT,	(g), (n), sizeof(t))" 4383 . 4413)))
          ("IOCGROUP" (spp-arg-list ("x") 3772 . 3775) . ((semantic-list "(((x) >> 8) & 0xff)" 3776 . 3795)))
          ("_SYS_IOCCOM_H_")
          ("IOC_IN" . ((semantic-list "(__uint32_t)" 4044 . 4056) (number "0x80000000" 4056 . 4066)))
          ("IOC_VOID" . ((semantic-list "(__uint32_t)" 3906 . 3918) (number "0x20000000" 3918 . 3928)))
          ("_IOWR" (spp-arg-list ("g" "n" "t") 4535 . 4542) . ((symbol "_IOC" 4543 . 4547) (semantic-list "(IOC_INOUT,	(g), (n), sizeof(t))" 4547 . 4579)))
          ("IOCPARM_MASK" . ((number "0x1fff" 3604 . 3610)))
          ("IOCBASECMD" (spp-arg-list ("x") 3722 . 3725) . ((semantic-list "((x) & ~(IOCPARM_MASK << 16))" 3726 . 3755)))
          ("IOCPARM_MAX" . ((semantic-list "(IOCPARM_MASK + 1)" 3817 . 3835)))
          ("_IO" (spp-arg-list ("g" "n") 4325 . 4330) . ((symbol "_IOC" 4331 . 4335) (semantic-list "(IOC_VOID,	(g), (n), 0)" 4335 . 4358)))
          ("IOC_DIRMASK" . ((semantic-list "(__uint32_t)" 4189 . 4201) (number "0xe0000000" 4201 . 4211)))
          ("_IOW" (spp-arg-list ("g" "n" "t") 4426 . 4433) . ((symbol "_IOC" 4434 . 4438) (semantic-list "(IOC_IN,	(g), (n), sizeof(t))" 4438 . 4467)))
          ("IOC_OUT" . ((semantic-list "(__uint32_t)" 3976 . 3988) (number "0x40000000" 3988 . 3998)))
          )
)
    (semanticdb-table "filio.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_FILIO_H_" variable (:constant-flag t) nil [3627 3640])
            ("sys/ioccom.h" include (:system-flag t) nil [3642 3665])
            ("FIOCLEX" variable (:constant-flag t) nil [3714 3721])
            ("FIONCLEX" variable (:constant-flag t) nil [3775 3783])
            ("FIONREAD" variable (:constant-flag t) nil [3833 3841])
            ("FIONBIO" variable (:constant-flag t) nil [3896 3903])
            ("FIOASYNC" variable (:constant-flag t) nil [3966 3974])
            ("FIOSETOWN" variable (:constant-flag t) nil [4029 4038])
            ("FIOGETOWN" variable (:constant-flag t) nil [4083 4092])
            ("FIODTYPE" variable (:constant-flag t) nil [4137 4145]))          
      :file "filio.h"
      :pointmax 4212
      :fsize 4211
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("FIOSETOWN" . ((symbol "_IOW" 4039 . 4043) (semantic-list "('f', 124, int)" 4043 . 4058)))
          ("FIODTYPE" . ((symbol "_IOR" 4146 . 4150) (semantic-list "('f', 122, int)" 4150 . 4165)))
          ("_SYS_FILIO_H_")
          ("FIOCLEX" . ((symbol "_IO" 3724 . 3727) (semantic-list "('f', 1)" 3727 . 3735)))
          ("FIOASYNC" . ((symbol "_IOW" 3975 . 3979) (semantic-list "('f', 125, int)" 3979 . 3994)))
          ("FIOGETOWN" . ((symbol "_IOR" 4093 . 4097) (semantic-list "('f', 123, int)" 4097 . 4112)))
          ("FIONREAD" . ((symbol "_IOR" 3842 . 3846) (semantic-list "('f', 127, int)" 3846 . 3861)))
          ("FIONBIO" . ((symbol "_IOW" 3905 . 3909) (semantic-list "('f', 126, int)" 3909 . 3924)))
          ("FIONCLEX" . ((symbol "_IO" 3785 . 3788) (semantic-list "('f', 2)" 3788 . 3796)))
          )
)
    (semanticdb-table "sockio.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_SOCKIO_H_" variable (:constant-flag t) nil [3319 3333])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3335 3364])
            ("sys/ioccom.h" include (:system-flag t) nil [3366 3389])
            ("SIOCSHIWAT" variable (:constant-flag t) nil [3421 3431])
            ("SIOCGHIWAT" variable (:constant-flag t) nil [3486 3496])
            ("SIOCSLOWAT" variable (:constant-flag t) nil [3551 3561])
            ("SIOCGLOWAT" variable (:constant-flag t) nil [3615 3625])
            ("SIOCATMARK" variable (:constant-flag t) nil [3679 3689])
            ("SIOCSPGRP" variable (:constant-flag t) nil [3738 3747])
            ("SIOCGPGRP" variable (:constant-flag t) nil [3801 3810])
            ("SIOCSIFADDR" variable (:constant-flag t) nil [3948 3959])
            ("SIOCSIFDSTADDR" variable (:constant-flag t) nil [4020 4034])
            ("SIOCSIFFLAGS" variable (:constant-flag t) nil [4094 4106])
            ("SIOCGIFFLAGS" variable (:constant-flag t) nil [4166 4178])
            ("SIOCSIFBRDADDR" variable (:constant-flag t) nil [4238 4252])
            ("SIOCSIFNETMASK" variable (:constant-flag t) nil [4315 4329])
            ("SIOCGIFMETRIC" variable (:constant-flag t) nil [4391 4404])
            ("SIOCSIFMETRIC" variable (:constant-flag t) nil [4462 4475])
            ("SIOCDIFADDR" variable (:constant-flag t) nil [4532 4543])
            ("SIOCAIFADDR" variable (:constant-flag t) nil [4601 4612])
            ("SIOCGETVIFCNT" variable (:constant-flag t) nil [4676 4689])
            ("SIOCGETSGCNT" variable (:constant-flag t) nil [4755 4767])
            ("SIOCALIFADDR" variable (:constant-flag t) nil [4833 4845])
            ("SIOCGLIFADDR" variable (:constant-flag t) nil [4909 4921])
            ("SIOCDLIFADDR" variable (:constant-flag t) nil [4989 5001])
            ("SIOCGIFADDR" variable (:constant-flag t) nil [5071 5082])
            ("SIOCGIFDSTADDR" variable (:constant-flag t) nil [5144 5158])
            ("SIOCGIFBRDADDR" variable (:constant-flag t) nil [5218 5232])
            ("SIOCGIFCONF" variable (:constant-flag t) nil [5295 5306])
            ("SIOCGIFNETMASK" variable (:constant-flag t) nil [5366 5380])
            ("SIOCAUTOADDR" variable (:constant-flag t) nil [5442 5454])
            ("SIOCAUTONETMASK" variable (:constant-flag t) nil [5515 5530])
            ("SIOCARPIPLL" variable (:constant-flag t) nil [5590 5601])
            ("SIOCADDMULTI" variable (:constant-flag t) nil [5671 5683])
            ("SIOCDELMULTI" variable (:constant-flag t) nil [5743 5755])
            ("SIOCGIFMTU" variable (:constant-flag t) nil [5815 5825])
            ("SIOCSIFMTU" variable (:constant-flag t) nil [5880 5890])
            ("SIOCGIFPHYS" variable (:constant-flag t) nil [5945 5956])
            ("SIOCSIFPHYS" variable (:constant-flag t) nil [6012 6023])
            ("SIOCSIFMEDIA" variable (:constant-flag t) nil [6079 6091])
            ("SIOCGIFMEDIA" variable (:constant-flag t) nil [6149 6161])
            ("SIOCSIFGENERIC" variable (:constant-flag t) nil [6224 6238])
            ("SIOCGIFGENERIC" variable (:constant-flag t) nil [6300 6314])
            ("SIOCRSLVMULTI" variable (:constant-flag t) nil [6376 6389])
            ("SIOCSIFLLADDR" variable (:constant-flag t) nil [6438 6451])
            ("SIOCGIFSTATUS" variable (:constant-flag t) nil [6514 6527])
            ("SIOCSIFPHYADDR" variable (:constant-flag t) nil [6586 6600])
            ("SIOCGIFPSRCADDR" variable (:constant-flag t) nil [6665 6680])
            ("SIOCGIFPDSTADDR" variable (:constant-flag t) nil [6742 6757])
            ("SIOCDIFPHYADDR" variable (:constant-flag t) nil [6819 6833])
            ("SIOCSLIFPHYADDR" variable (:constant-flag t) nil [6894 6909])
            ("SIOCGLIFPHYADDR" variable (:constant-flag t) nil [6973 6988])
            ("SIOCGIFDEVMTU" variable (:constant-flag t) nil [7053 7066])
            ("SIOCSIFALTMTU" variable (:constant-flag t) nil [7127 7140])
            ("SIOCGIFALTMTU" variable (:constant-flag t) nil [7205 7218])
            ("SIOCSIFBOND" variable (:constant-flag t) nil [7284 7295])
            ("SIOCGIFBOND" variable (:constant-flag t) nil [7358 7369])
            ("SIOCSIFCAP" variable (:constant-flag t) nil [7434 7444])
            ("SIOCGIFCAP" variable (:constant-flag t) nil [7513 7523])
            ("SIOCIFCREATE" variable (:constant-flag t) nil [7592 7604])
            ("SIOCIFDESTROY" variable (:constant-flag t) nil [7665 7678])
            ("SIOCIFCREATE2" variable (:constant-flag t) nil [7740 7753])
            ("SIOCSDRVSPEC" variable (:constant-flag t) nil [7829 7841])
            ("SIOCGDRVSPEC" variable (:constant-flag t) nil [7988 8000])
            ("SIOCSIFVLAN" variable (:constant-flag t) nil [8147 8158])
            ("SIOCGIFVLAN" variable (:constant-flag t) nil [8219 8230])
            ("SIOCSETVLAN" variable (:constant-flag t) nil [8291 8302])
            ("SIOCGETVLAN" variable (:constant-flag t) nil [8323 8334])
            ("SIOCIFGCLONERS" variable (:constant-flag t) nil [8356 8370])
            ("SIOCGIFASYNCMAP" variable (:constant-flag t) nil [8434 8449])
            ("SIOCSIFASYNCMAP" variable (:constant-flag t) nil [8511 8526])
            ("SIOCGIFMAC" variable (:constant-flag t) nil [8590 8600])
            ("SIOCSIFMAC" variable (:constant-flag t) nil [8662 8672])
            ("SIOCSIFKPI" variable (:constant-flag t) nil [8733 8743])
            ("SIOCGIFKPI" variable (:constant-flag t) nil [8824 8834])
            ("SIOCGIFWAKEFLAGS" variable (:constant-flag t) nil [8905 8921]))          
      :file "sockio.h"
      :pointmax 9024
      :fsize 9023
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax '((close-paren 4724 . 4725) (close-paren 4644 . 4645))
      :lexical-table 
        '(("SIOCGIFFLAGS" . ((symbol "_IOWR" 4179 . 4184) (semantic-list "('i', 17, struct ifreq)" 4184 . 4207)))
          ("SIOCSIFNETMASK" . ((symbol "_IOW" 4331 . 4335) (semantic-list "('i', 22, struct ifreq)" 4335 . 4358)))
          ("SIOCADDMULTI" . ((symbol "_IOW" 5685 . 5689) (semantic-list "('i', 49, struct ifreq)" 5689 . 5712)))
          ("SIOCGIFPHYS" . ((symbol "_IOWR" 5957 . 5962) (semantic-list "('i', 53, struct ifreq)" 5962 . 5985)))
          ("SIOCSIFMEDIA" . ((symbol "_IOWR" 6092 . 6097) (semantic-list "('i', 55, struct ifreq)" 6097 . 6120)))
          ("SIOCSIFBOND" . ((symbol "_IOW" 7297 . 7301) (semantic-list "('i', 70, struct ifreq)" 7301 . 7324)))
          ("SIOCSIFKPI" . ((symbol "_IOW" 8744 . 8748) (semantic-list "('i', 134, struct ifreq)" 8748 . 8772)))
          ("SIOCSLOWAT" . ((symbol "_IOW" 3563 . 3567) (semantic-list "('s',  2, int)" 3567 . 3581)))
          ("SIOCSIFADDR" . ((symbol "_IOW" 3960 . 3964) (semantic-list "('i', 12, struct ifreq)" 3964 . 3987)))
          ("SIOCGETSGCNT" . ((symbol "_IOWR" 4768 . 4773) (semantic-list "('r', 28, struct sioc_sg_req)" 4773 . 4802)))
          ("SIOCDLIFADDR" . ((symbol "_IOW" 5005 . 5009) (semantic-list "('i', 31, struct if_laddrreq)" 5009 . 5038)))
          ("SIOCGIFNETMASK" . ((symbol "_IOWR" 5381 . 5386) (semantic-list "('i', 37, struct ifreq)" 5386 . 5409)))
          ("SIOCSLIFPHYADDR" . ((symbol "_IOW" 6911 . 6915) (semantic-list "('i', 66, struct if_laddrreq)" 6915 . 6944)))
          ("SIOCGIFBOND" . ((symbol "_IOWR" 7370 . 7375) (semantic-list "('i', 71, struct ifreq)" 7375 . 7398)))
          ("SIOCSIFDSTADDR" . ((symbol "_IOW" 4036 . 4040) (semantic-list "('i', 14, struct ifreq)" 4040 . 4063)))
          ("SIOCGIFMETRIC" . ((symbol "_IOWR" 4405 . 4410) (semantic-list "('i', 23, struct ifreq)" 4410 . 4433)))
          ("SIOCGIFADDR" . ((symbol "_IOWR" 5083 . 5088) (semantic-list "('i', 33, struct ifreq)" 5088 . 5111)))
          ("SIOCGIFMAC" . ((symbol "_IOWR" 8601 . 8606) (semantic-list "('i', 130, struct ifreq)" 8606 . 8630)))
          ("SIOCGIFDSTADDR" . ((symbol "_IOWR" 5159 . 5164) (semantic-list "('i', 34, struct ifreq)" 5164 . 5187)))
          ("SIOCSIFMTU" . ((symbol "_IOW" 5892 . 5896) (semantic-list "('i', 52, struct ifreq)" 5896 . 5919)))
          ("SIOCGIFMEDIA" . ((symbol "_IOWR" 6162 . 6167) (semantic-list "('i', 56, struct ifmediareq)" 6167 . 6195)))
          ("SIOCSIFLLADDR" . ((symbol "_IOW" 6452 . 6456) (semantic-list "('i', 60, struct ifreq)" 6456 . 6479)))
          ("SIOCSIFALTMTU" . ((symbol "_IOW" 7142 . 7146) (semantic-list "('i', 69, struct ifreq)" 7146 . 7169)))
          ("SIOCGIFCAP" . ((symbol "_IOWR" 7529 . 7534) (semantic-list "('i', 91, struct ifreq)" 7534 . 7557)))
          ("SIOCSIFVLAN" . ((symbol "_IOW" 8160 . 8164) (semantic-list "('i', 126, struct ifreq)" 8164 . 8188)))
          ("SIOCATMARK" . ((symbol "_IOR" 3691 . 3695) (semantic-list "('s',  7, int)" 3695 . 3709)))
          ("SIOCSPGRP" . ((symbol "_IOW" 3749 . 3753) (semantic-list "('s',  8, int)" 3753 . 3767)))
          ("SIOCGIFCONF" . ((symbol "_IOWR" 5307 . 5312) (semantic-list "('i', 36, struct ifconf)" 5312 . 5336)))
          ("SIOCDELMULTI" . ((symbol "_IOW" 5757 . 5761) (semantic-list "('i', 50, struct ifreq)" 5761 . 5784)))
          ("SIOCSIFGENERIC" . ((symbol "_IOW" 6240 . 6244) (semantic-list "('i', 57, struct ifreq)" 6244 . 6267)))
          ("SIOCGLIFPHYADDR" . ((symbol "_IOWR" 6989 . 6994) (semantic-list "('i', 67, struct if_laddrreq)" 6994 . 7023)))
          ("SIOCIFCREATE" . ((symbol "_IOWR" 7605 . 7610) (semantic-list "('i', 120, struct ifreq)" 7610 . 7634)))
          ("SIOCGIFVLAN" . ((symbol "_IOWR" 8231 . 8236) (semantic-list "('i', 127, struct ifreq)" 8236 . 8260)))
          ("SIOCGHIWAT" . ((symbol "_IOR" 3498 . 3502) (semantic-list "('s',  1, int)" 3502 . 3516)))
          ("SIOCALIFADDR" . ((symbol "_IOW" 4849 . 4853) (semantic-list "('i', 29, struct if_laddrreq)" 4853 . 4882)))
          ("SIOCGIFGENERIC" . ((symbol "_IOWR" 6315 . 6320) (semantic-list "('i', 58, struct ifreq)" 6320 . 6343)))
          ("SIOCGIFPSRCADDR" . ((symbol "_IOWR" 6681 . 6686) (semantic-list "('i', 63, struct ifreq)" 6686 . 6709)))
          ("SIOCSIFMETRIC" . ((symbol "_IOW" 4476 . 4480) (semantic-list "('i', 24, struct ifreq)" 4480 . 4503)))
          ("SIOCGETVIFCNT" . ((symbol "_IOWR" 4690 . 4695) (semantic-list "('r', 27, struct sioc_vif_req" 4695 . 4724)))
          ("SIOCDIFPHYADDR" . ((symbol "_IOW" 6835 . 6839) (semantic-list "('i', 65, struct ifreq)" 6839 . 6862)))
          ("SIOCIFDESTROY" . ((symbol "_IOW" 7680 . 7684) (semantic-list "('i', 121, struct ifreq)" 7684 . 7708)))
          ("SIOCIFGCLONERS" . ((symbol "_IOWR" 8371 . 8376) (semantic-list "('i', 129, struct if_clonereq)" 8376 . 8406)))
          ("SIOCSIFMAC" . ((symbol "_IOW" 8673 . 8677) (semantic-list "('i', 131, struct ifreq)" 8677 . 8701)))
          ("SIOCGIFWAKEFLAGS" . ((symbol "_IOWR" 8922 . 8927) (semantic-list "('i', 136, struct ifreq)" 8927 . 8951)))
          ("SIOCGPGRP" . ((symbol "_IOR" 3812 . 3816) (semantic-list "('s',  9, int)" 3816 . 3830)))
          ("SIOCARPIPLL" . ((symbol "_IOWR" 5603 . 5608) (semantic-list "('i', 40, struct ifreq)" 5608 . 5631)))
          ("SIOCRSLVMULTI" . ((symbol "_IOWR" 6392 . 6397) (semantic-list "('i', 59, struct rslvmulti_req)" 6397 . 6428)))
          ("SIOCGIFDEVMTU" . ((symbol "_IOWR" 7067 . 7072) (semantic-list "('i', 68, struct ifreq)" 7072 . 7095)))
          ("SIOCSIFCAP" . ((symbol "_IOW" 7451 . 7455) (semantic-list "('i', 90, struct ifreq)" 7455 . 7478)))
          ("SIOCSIFBRDADDR" . ((symbol "_IOW" 4254 . 4258) (semantic-list "('i', 19, struct ifreq)" 4258 . 4281)))
          ("SIOCSIFPHYADDR" . ((symbol "_IOW" 6603 . 6607) (semantic-list "('i', 62, struct ifaliasreq)" 6607 . 6635)))
          ("SIOCSDRVSPEC" . ((symbol "_IOW" 7845 . 7849) (semantic-list "('i', 123, struct ifdrv)" 7849 . 7873)))
          ("SIOCSIFASYNCMAP" . ((symbol "_IOW" 8527 . 8531) (semantic-list "('i', 125, struct ifreq)" 8531 . 8555)))
          ("SIOCSHIWAT" . ((symbol "_IOW" 3433 . 3437) (semantic-list "('s',  0, int)" 3437 . 3451)))
          ("SIOCAIFADDR" . ((symbol "_IOW" 4613 . 4617) (semantic-list "('i', 26, struct ifaliasreq" 4617 . 4644)))
          ("SIOCGIFBRDADDR" . ((symbol "_IOWR" 5233 . 5238) (semantic-list "('i', 35, struct ifreq)" 5238 . 5261)))
          ("SIOCAUTONETMASK" . ((symbol "_IOW" 5531 . 5535) (semantic-list "('i', 39, struct ifreq)" 5535 . 5558)))
          ("SIOCGIFSTATUS" . ((symbol "_IOWR" 6528 . 6533) (semantic-list "('i', 61, struct ifstat)" 6533 . 6557)))
          ("SIOCSETVLAN" . ((symbol "SIOCSIFVLAN" 8303 . 8314)))
          ("SIOCGIFKPI" . ((symbol "_IOWR" 8835 . 8840) (semantic-list "('i', 135, struct ifreq)" 8840 . 8864)))
          ("_SYS_SOCKIO_H_")
          ("SIOCGLOWAT" . ((symbol "_IOR" 3627 . 3631) (semantic-list "('s',  3, int)" 3631 . 3645)))
          ("SIOCSIFFLAGS" . ((symbol "_IOW" 4108 . 4112) (semantic-list "('i', 16, struct ifreq)" 4112 . 4135)))
          ("SIOCGLIFADDR" . ((symbol "_IOWR" 4925 . 4930) (semantic-list "('i', 30, struct if_laddrreq)" 4930 . 4959)))
          ("SIOCAUTOADDR" . ((symbol "_IOWR" 5455 . 5460) (semantic-list "('i', 38, struct ifreq)" 5460 . 5483)))
          ("SIOCIFCREATE2" . ((symbol "_IOWR" 7756 . 7761) (semantic-list "('i', 122, struct ifreq)" 7761 . 7785)))
          ("SIOCGETVLAN" . ((symbol "SIOCGIFVLAN" 8335 . 8346)))
          ("SIOCGIFPDSTADDR" . ((symbol "_IOWR" 6758 . 6763) (semantic-list "('i', 64, struct ifreq)" 6763 . 6786)))
          ("SIOCGDRVSPEC" . ((symbol "_IOWR" 8004 . 8009) (semantic-list "('i', 123, struct ifdrv)" 8009 . 8033)))
          ("SIOCGIFASYNCMAP" . ((symbol "_IOWR" 8450 . 8455) (semantic-list "('i', 124, struct ifreq)" 8455 . 8479)))
          ("SIOCDIFADDR" . ((symbol "_IOW" 4544 . 4548) (semantic-list "('i', 25, struct ifreq)" 4548 . 4571)))
          ("SIOCGIFMTU" . ((symbol "_IOWR" 5826 . 5831) (semantic-list "('i', 51, struct ifreq)" 5831 . 5854)))
          ("SIOCSIFPHYS" . ((symbol "_IOW" 6025 . 6029) (semantic-list "('i', 54, struct ifreq)" 6029 . 6052)))
          ("SIOCGIFALTMTU" . ((symbol "_IOWR" 7219 . 7224) (semantic-list "('i', 72, struct ifreq)" 7224 . 7247)))
          )
)
    (semanticdb-table "signal.h"
      :major-mode 'c-mode
      :tags 
        '( ("_SYS_SIGNAL_H_" variable (:constant-flag t) nil [3633 3647])
            ("sys/cdefs.h" include (:system-flag t) nil [3649 3671])
            ("sys/appleapiopts.h" include (:system-flag t) nil [3672 3701])
            ("__DARWIN_NSIG" variable (:constant-flag t) nil [3711 3724])
            ("machine/signal.h" include (:system-flag t) nil [3896 3923])
            ("SIGHUP" variable (:constant-flag t) nil [3976 3982])
            ("SIGINT" variable (:constant-flag t) nil [4006 4012])
            ("SIGQUIT" variable (:constant-flag t) nil [4039 4046])
            ("SIGILL" variable (:constant-flag t) nil [4068 4074])
            ("SIGTRAP" variable (:constant-flag t) nil [4135 4142])
            ("SIGABRT" variable (:constant-flag t) nil [4194 4201])
            ("SIGIOT" variable (:constant-flag t) nil [4411 4417])
            ("SIGEMT" variable (:constant-flag t) nil [4454 4460])
            ("SIGFPE" variable (:constant-flag t) nil [4545 4551])
            ("SIGKILL" variable (:constant-flag t) nil [4593 4600])
            ("SIGBUS" variable (:constant-flag t) nil [4652 4658])
            ("SIGSEGV" variable (:constant-flag t) nil [4686 4693])
            ("SIGSYS" variable (:constant-flag t) nil [4734 4740])
            ("SIGPIPE" variable (:constant-flag t) nil [4786 4793])
            ("SIGALRM" variable (:constant-flag t) nil [4850 4857])
            ("SIGTERM" variable (:constant-flag t) nil [4887 4894])
            ("SIGURG" variable (:constant-flag t) nil [4950 4956])
            ("SIGSTOP" variable (:constant-flag t) nil [5005 5012])
            ("SIGTSTP" variable (:constant-flag t) nil [5064 5071])
            ("SIGCONT" variable (:constant-flag t) nil [5110 5117])
            ("SIGCHLD" variable (:constant-flag t) nil [5162 5169])
            ("SIGTTIN" variable (:constant-flag t) nil [5219 5226])
            ("SIGTTOU" variable (:constant-flag t) nil [5285 5292])
            ("SIGXCPU" variable (:constant-flag t) nil [5477 5484])
            ("SIGXFSZ" variable (:constant-flag t) nil [5526 5533])
            ("SIGVTALRM" variable (:constant-flag t) nil [5576 5585])
            ("SIGPROF" variable (:constant-flag t) nil [5622 5629])
            ("SIGUSR1" variable (:constant-flag t) nil [5828 5835])
            ("SIGUSR2" variable (:constant-flag t) nil [5875 5882])
            ("SIG_DFL" variable (:constant-flag t) nil [6391 6398])
            ("SIG_IGN" variable (:constant-flag t) nil [6429 6436])
            ("SIG_HOLD" variable (:constant-flag t) nil [6467 6475])
            ("SIG_ERR" variable (:constant-flag t) nil [6505 6512])
            ("sys/_types.h" include (:system-flag t) nil [6567 6590])
            ("machine/_mcontext.h" include (:system-flag t) nil [6592 6622])
            ("sys/_types/_sigaltstack.h" include (:system-flag t) nil [6623 6659])
            ("sys/_types/_ucontext.h" include (:system-flag t) nil [6660 6693])
            ("sys/_types/_pid_t.h" include (:system-flag t) nil [6695 6725])
            ("sys/_types/_pthread_attr_t.h" include (:system-flag t) nil [6726 6765])
            ("sys/_types/_sigset_t.h" include (:system-flag t) nil [6766 6799])
            ("sys/_types/_size_t.h" include (:system-flag t) nil [6800 6831])
            ("sys/_types/_uid_t.h" include (:system-flag t) nil [6832 6862])
            ("sival_int" variable (:type "int") nil [6937 6951])
            ("sival_ptr" variable
               (:pointer 1
                :type "void")
                nil [6953 6969])
            ("SIGEV_NONE" variable (:constant-flag t) nil [6982 6992])
            ("SIGEV_SIGNAL" variable (:constant-flag t) nil [7031 7043])
            ("SIGEV_THREAD" variable (:constant-flag t) nil [7090 7102])
            ("sigev_notify" variable (:type "int") nil [7173 7193])
            ("sigev_signo" variable (:type "int") nil [7222 7241])
            ("sigev_value" variable (:type ("sigval" type (:type "union") nil nil)) nil [7266 7291])
            ("sigev_notify_attributes" variable
               (:pointer 1
                :type ("pthread_attr_t" type (:type "class") nil nil))
                nil [7393 7433])
            ("si_signo" variable (:type "int") nil [7497 7510])
            ("si_errno" variable (:type "int") nil [7533 7546])
            ("si_code" variable (:type "int") nil [7573 7585])
            ("si_pid" variable (:type ("pid_t" type (:type "class") nil nil)) nil [7606 7619])
            ("si_uid" variable (:type ("uid_t" type (:type "class") nil nil)) nil [7645 7658])
            ("si_status" variable (:type "int") nil [7682 7696])
            ("si_addr" variable
               (:pointer 1
                :type "void")
                nil [7716 7730])
            ("si_value" variable (:type ("sigval" type (:type "union") nil nil)) nil [7760 7782])
            ("si_band" variable (:type "long") nil [7804 7817])
            ("siginfo_t" variable (:type "int") nil [7905 7915])
            ("ILL_ILLOPC" variable (:constant-flag t) nil [8610 8620])
            ("ILL_ILLTRP" variable (:constant-flag t) nil [8658 8668])
            ("ILL_PRVOPC" variable (:constant-flag t) nil [8704 8714])
            ("ILL_ILLOPN" variable (:constant-flag t) nil [8755 8765])
            ("ILL_ILLADR" variable (:constant-flag t) nil [8812 8822])
            ("ILL_PRVREG" variable (:constant-flag t) nil [8877 8887])
            ("ILL_COPROC" variable (:constant-flag t) nil [8938 8948])
            ("ILL_BADSTK" variable (:constant-flag t) nil [8997 9007])
            ("FPE_FLTDIV" variable (:constant-flag t) nil [9192 9202])
            ("FPE_FLTOVF" variable (:constant-flag t) nil [9255 9265])
            ("FPE_FLTUND" variable (:constant-flag t) nil [9312 9322])
            ("FPE_FLTRES" variable (:constant-flag t) nil [9370 9380])
            ("FPE_FLTINV" variable (:constant-flag t) nil [9433 9443])
            ("FPE_FLTSUB" variable (:constant-flag t) nil [9499 9509])
            ("FPE_INTDIV" variable (:constant-flag t) nil [9563 9573])
            ("FPE_INTOVF" variable (:constant-flag t) nil [9619 9629])
            ("SEGV_MAPERR" variable (:constant-flag t) nil [9804 9815])
            ("SEGV_ACCERR" variable (:constant-flag t) nil [9867 9878])
            ("BUS_ADRALN" variable (:constant-flag t) nil [10071 10081])
            ("BUS_ADRERR" variable (:constant-flag t) nil [10130 10140])
            ("BUS_OBJERR" variable (:constant-flag t) nil [10200 10210])
            ("TRAP_BRKPT" variable (:constant-flag t) nil [10292 10302])
            ("TRAP_TRACE" variable (:constant-flag t) nil [10352 10362])
            ("CLD_EXITED" variable (:constant-flag t) nil [10546 10556])
            ("CLD_KILLED" variable (:constant-flag t) nil [10596 10606])
            ("CLD_DUMPED" variable (:constant-flag t) nil [10665 10675])
            ("CLD_TRAPPED" variable (:constant-flag t) nil [10731 10742])
            ("CLD_STOPPED" variable (:constant-flag t) nil [10790 10801])
            ("CLD_CONTINUED" variable (:constant-flag t) nil [10842 10855])
            ("POLL_IN" variable (:constant-flag t) nil [10931 10938])
            ("POLL_OUT" variable (:constant-flag t) nil [10983 10991])
            ("POLL_MSG" variable (:constant-flag t) nil [11039 11047])
            ("POLL_ERR" variable (:constant-flag t) nil [11094 11102])
            ("POLL_PRI" variable (:constant-flag t) nil [11135 11143])
            ("POLL_HUP" variable (:constant-flag t) nil [11196 11204])
            ("__sigaction_u" variable (:type ("__sigaction_u" type (:type "union") nil nil)) nil [11475 11509])
            ("sa_mask" variable (:type ("sigset_t" type (:type "class") nil nil)) nil [11594 11611])
            ("sa_flags" variable (:type "int") nil [11641 11654])
            ("__sigaction_u" variable (:type ("__sigaction_u" type (:type "union") nil nil)) nil [11770 11804])
            ("sa_mask" variable (:type ("sigset_t" type (:type "class") nil nil)) nil [11828 11845])
            ("sa_flags" variable (:type "int") nil [11875 11888])
            ("sa_handler" variable (:constant-flag t) nil [12013 12023])
            ("sa_sigaction" variable (:constant-flag t) nil [12059 12071])
            ("SA_ONSTACK" variable (:constant-flag t) nil [12110 12120])
            ("SA_RESTART" variable (:constant-flag t) nil [12170 12180])
            ("SA_RESETHAND" variable (:constant-flag t) nil [12234 12246])
            ("SA_NOCLDSTOP" variable (:constant-flag t) nil [12304 12316])
            ("SA_NODEFER" variable (:constant-flag t) nil [12376 12386])
            ("SA_NOCLDWAIT" variable (:constant-flag t) nil [12447 12459])
            ("SA_SIGINFO" variable (:constant-flag t) nil [12507 12517])
            ("SA_USERSPACE_MASK" variable (:constant-flag t) nil [13032 13049])
            ("SIG_BLOCK" variable (:constant-flag t) nil [13189 13198])
            ("SIG_UNBLOCK" variable (:constant-flag t) nil [13242 13253])
            ("SIG_SETMASK" variable (:constant-flag t) nil [13299 13310])
            ("SI_USER" variable (:constant-flag t) nil [13390 13397])
            ("SI_QUEUE" variable (:constant-flag t) nil [13445 13453])
            ("SI_TIMER" variable (:constant-flag t) nil [13504 13512])
            ("SI_ASYNCIO" variable (:constant-flag t) nil [13557 13567])
            ("SI_MESGQ" variable (:constant-flag t) nil [13618 13626])
            ("SS_ONSTACK" variable (:constant-flag t) nil [13863 13873])
            ("SS_DISABLE" variable (:constant-flag t) nil [13923 13933])
            ("MINSIGSTKSZ" variable (:constant-flag t) nil [13997 14008])
            ("SIGSTKSZ" variable (:constant-flag t) nil [14058 14066])
            ("ss_sp" variable
               (:pointer 1
                :type "char")
                nil [14805 14817])
            ("ss_onstack" variable (:type "int") nil [14848 14863]))          
      :file "signal.h"
      :pointmax 15377
      :fsize 15376
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax '((punctuation 15334 . 15335) (close-paren 15333 . 15334) (INT 15330 . 15333) (open-paren 15329 . 15330) (close-paren 15328 . 15329) (close-paren 15327 . 15328) (close-paren 15326 . 15327) (INT 15323 . 15326) (open-paren 15322 . 15323) (close-paren 15321 . 15322) (punctuation 15320 . 15321) (open-paren 15319 . 15320) (VOID 15314 . 15318) (punctuation 15312 . 15313) (INT 15309 . 15312) (open-paren 15308 . 15309) (symbol 15302 . 15308) (punctuation 15301 . 15302) (open-paren 15300 . 15301) (VOID 15295 . 15299) (punctuation 14887 . 14888) (close-paren 14886 . 14887) (open-paren 14802 . 14803) (symbol 14793 . 14801) (STRUCT 14786 . 14792) (punctuation 11922 . 11923) (close-paren 11921 . 11922) (open-paren 11767 . 11768) (symbol 11757 . 11766) (STRUCT 11750 . 11756) (punctuation 11688 . 11689) (close-paren 11687 . 11688) (punctuation 11591 . 11592) (close-paren 11590 . 11591) (punctuation 11589 . 11590) (VOID 11584 . 11588) (punctuation 11582 . 11583) (punctuation 11581 . 11582) (symbol 11571 . 11580) (punctuation 11569 . 11570) (INT 11566 . 11569) (punctuation 11564 . 11565) (INT 11561 . 11564) (punctuation 11559 . 11560) (punctuation 11558 . 11559) (VOID 11553 . 11557) (open-paren 11552 . 11553) (close-paren 11551 . 11552) (symbol 11543 . 11551) (punctuation 11542 . 11543) (open-paren 11541 . 11542) (VOID 11533 . 11537) (open-paren 11472 . 11473) (symbol 11460 . 11471) (STRUCT 11453 . 11459) (punctuation 11396 . 11397) (close-paren 11395 . 11396) (punctuation 11393 . 11394) (close-paren 11392 . 11393) (punctuation 11391 . 11392) (VOID 11386 . 11390) (punctuation 11375 . 11376) (punctuation 11374 . 11375) (symbol 11364 . 11373) (STRUCT 11357 . 11363) (punctuation 11355 . 11356) (INT 11352 . 11355) (open-paren 11351 . 11352) (close-paren 11350 . 11351) (symbol 11336 . 11350) (punctuation 11335 . 11336) (open-paren 11334 . 11335) (VOID 11326 . 11330) (punctuation 11323 . 11324) (close-paren 11322 . 11323) (INT 11319 . 11322) (open-paren 11318 . 11319) (close-paren 11317 . 11318) (symbol 11305 . 11317) (punctuation 11304 . 11305) (open-paren 11303 . 11304) (VOID 11295 . 11299) (open-paren 11292 . 11293) (symbol 11278 . 11291) (UNION 11272 . 11277) (close-paren 7903 . 7904) (punctuation 7871 . 7872) (close-paren 7870 . 7871) (number 7869 . 7870) (open-paren 7868 . 7869) (symbol 7863 . 7868) (LONG 7858 . 7862) (UNSIGNED 7849 . 7857) (open-paren 7494 . 7495) (symbol 7484 . 7493) (STRUCT 7477 . 7483) (TYPEDEF 7469 . 7476) (punctuation 7465 . 7466) (close-paren 7464 . 7465) (punctuation 7360 . 7361) (close-paren 7359 . 7360) (symbol 7353 . 7359) (UNION 7347 . 7352) (open-paren 7346 . 7347) (close-paren 7345 . 7346) (symbol 7324 . 7345) (punctuation 7323 . 7324) (open-paren 7322 . 7323) (VOID 7315 . 7319) (open-paren 7170 . 7171) (symbol 7161 . 7169) (STRUCT 7154 . 7160) (punctuation 6971 . 6972) (close-paren 6970 . 6971) (open-paren 6877 . 6878) (symbol 6870 . 6876) (UNION 6864 . 6869) (close-paren 6536 . 6537) (number 6535 . 6536) (punctuation 6534 . 6535) (close-paren 6533 . 6534) (close-paren 6532 . 6533) (open-paren 6524 . 6525) (number 6495 . 6496) (close-paren 6494 . 6495) (close-paren 6493 . 6494) (open-paren 6485 . 6486) (number 6457 . 6458) (close-paren 6456 . 6457) (close-paren 6455 . 6456) (open-paren 6447 . 6448) (number 6419 . 6420) (close-paren 6418 . 6419) (semantic-list 6409 . 6418))
      :lexical-table 
        '(("SIGIOT" . ((symbol "SIGABRT" 4418 . 4425)))
          ("SIGFPE" . ((number "8" 4552 . 4553)))
          ("SIGKILL" . ((number "9" 4601 . 4602)))
          ("SIGURG" . ((number "16" 4957 . 4959)))
          ("SIGUSR1" . ((number "30" 5836 . 5838)))
          ("ILL_ILLADR" . ((number "5" 8823 . 8824)))
          ("ILL_COPROC" . ((number "7" 8949 . 8950)))
          ("FPE_FLTDIV" . ((number "1" 9203 . 9204)))
          ("BUS_OBJERR" . ((number "3" 10211 . 10212)))
          ("POLL_ERR" . ((number "4" 11103 . 11104)))
          ("sa_handler" . 
              ((symbol "__sigaction_u" 12024 . 12037) (punctuation "." 12037 . 12038) (symbol "__sa_handler" 12038 . 12050)))
          ("SIGCHLD" . ((number "20" 5170 . 5172)))
          ("SIGUSR2" . ((number "31" 5883 . 5885)))
          ("SIGEV_NONE" . ((number "0" 6993 . 6994)))
          ("SI_USER" . ((number "0x10001" 13399 . 13406)))
          ("SI_TIMER" . ((number "0x10003" 13513 . 13520)))
          ("SIGSYS" . ((number "12" 4741 . 4743)))
          ("SIGVTALRM" . ((number "26" 5586 . 5588)))
          ("ILL_ILLOPN" . ((number "4" 8766 . 8767)))
          ("ILL_PRVREG" . ((number "6" 8888 . 8889)))
          ("CLD_KILLED" . ((number "2" 10607 . 10608)))
          ("SI_ASYNCIO" . ((number "0x10004" 13568 . 13575)))
          ("SIGSTOP" . ((number "17" 5013 . 5015)))
          ("ILL_ILLTRP" . ((number "2" 8669 . 8670)))
          ("SEGV_MAPERR" . ((number "1" 9816 . 9817)))
          ("CLD_TRAPPED" . ((number "4" 10743 . 10744)))
          ("SA_ONSTACK" . ((number "0x0001" 12121 . 12127)))
          ("SIG_SETMASK" . ((number "3" 13311 . 13312)))
          ("SS_DISABLE" . ((number "0x0004" 13934 . 13940)))
          ("SIGEV_SIGNAL" . ((number "1" 7044 . 7045)))
          ("ILL_ILLOPC" . ((number "1" 8621 . 8622)))
          ("ILL_PRVOPC" . ((number "3" 8715 . 8716)))
          ("SIGHUP" . ((number "1" 3983 . 3984)))
          ("SIGABRT" . ((number "6" 4202 . 4203)))
          ("SIGTERM" . ((number "15" 4895 . 4897)))
          ("FPE_FLTOVF" . ((number "2" 9266 . 9267)))
          ("SEGV_ACCERR" . ((number "2" 9879 . 9880)))
          ("BUS_ADRERR" . ((number "2" 10141 . 10142)))
          ("CLD_CONTINUED" . ((number "6" 10856 . 10857)))
          ("SA_RESTART" . ((number "0x0002" 12181 . 12187)))
          ("SA_NOCLDSTOP" . ((number "0x0008" 12317 . 12323)))
          ("SIG_UNBLOCK" . ((number "2" 13254 . 13255)))
          ("SIGBUS" . ((number "10" 4659 . 4661)))
          ("SIGSEGV" . ((number "11" 4694 . 4696)))
          ("SIGXCPU" . ((number "24" 5485 . 5487)))
          ("SA_NOCLDWAIT" . ((number "0x0020" 12460 . 12466)))
          ("SA_SIGINFO" . ((number "0x0040" 12518 . 12524)))
          ("SI_QUEUE" . ((number "0x10002" 13454 . 13461)))
          ("SIG_IGN" . ((semantic-list "(void (*)" 6438 . 6447)))
          ("FPE_FLTUND" . ((number "3" 9323 . 9324)))
          ("FPE_FLTRES" . ((number "4" 9381 . 9382)))
          ("FPE_INTDIV" . ((number "7" 9574 . 9575)))
          ("TRAP_BRKPT" . ((number "1" 10303 . 10304)))
          ("SIG_BLOCK" . ((number "1" 13199 . 13200)))
          ("SIGSTKSZ" . ((number "131072" 14067 . 14073)))
          ("SIGCONT" . ((number "19" 5118 . 5120)))
          ("SIGXFSZ" . ((number "25" 5534 . 5536)))
          ("SIG_ERR" . ((semantic-list "((void (*)" 6514 . 6524)))
          ("ILL_BADSTK" . ((number "8" 9008 . 9009)))
          ("FPE_FLTINV" . ((number "5" 9444 . 9445)))
          ("FPE_FLTSUB" . ((number "6" 9510 . 9511)))
          ("TRAP_TRACE" . ((number "2" 10363 . 10364)))
          ("POLL_HUP" . ((number "6" 11205 . 11206)))
          ("_SYS_SIGNAL_H_")
          ("SIGQUIT" . ((number "3" 4047 . 4048)))
          ("SIGILL" . ((number "4" 4075 . 4076)))
          ("SIGTRAP" . ((number "5" 4143 . 4144)))
          ("SIGTTOU" . ((number "22" 5293 . 5295)))
          ("SIG_DFL" . ((semantic-list "(void (*)" 6400 . 6409)))
          ("SA_NODEFER" . ((number "0x0010" 12387 . 12393)))
          ("SA_USERSPACE_MASK" . ((semantic-list "(SA_ONSTACK | SA_RESTART | SA_RESETHAND | SA_NOCLDSTOP | SA_NODEFER | SA_NOCLDWAIT | SA_SIGINFO)" 13050 . 13146)))
          ("SI_MESGQ" . ((number "0x10005" 13627 . 13634)))
          ("SS_ONSTACK" . ((number "0x0001" 13874 . 13880)))
          ("SIGINT" . ((number "2" 4013 . 4014)))
          ("SIGEMT" . ((number "7" 4461 . 4462)))
          ("SIGPIPE" . ((number "13" 4794 . 4796)))
          ("SIGALRM" . ((number "14" 4858 . 4860)))
          ("SIGTSTP" . ((number "18" 5072 . 5074)))
          ("SIGTTIN" . ((number "21" 5227 . 5229)))
          ("SIGEV_THREAD" . ((number "3" 7103 . 7104)))
          ("CLD_EXITED" . ((number "1" 10557 . 10558)))
          ("CLD_STOPPED" . ((number "5" 10802 . 10803)))
          ("POLL_OUT" . ((number "2" 10992 . 10993)))
          ("sa_sigaction" . 
              ((symbol "__sigaction_u" 12072 . 12085) (punctuation "." 12085 . 12086) (symbol "__sa_sigaction" 12086 . 12100)))
          ("SA_RESETHAND" . ((number "0x0004" 12247 . 12253)))
          ("SIGPROF" . ((number "27" 5630 . 5632)))
          ("SIG_HOLD" . ((semantic-list "(void (*)" 6476 . 6485)))
          ("POLL_IN" . ((number "1" 10940 . 10941)))
          ("__DARWIN_NSIG" . ((number "32" 3725 . 3727)))
          ("FPE_INTOVF" . ((number "8" 9630 . 9631)))
          ("BUS_ADRALN" . ((number "1" 10082 . 10083)))
          ("CLD_DUMPED" . ((number "3" 10676 . 10677)))
          ("POLL_MSG" . ((number "3" 11048 . 11049)))
          ("POLL_PRI" . ((number "5" 11144 . 11145)))
          ("MINSIGSTKSZ" . ((number "32768" 14009 . 14014)))
          )
)
    (semanticdb-table "_structs.h"
      :major-mode 'c-mode
      :tags 
        '( ("sys/cdefs.h" include (:system-flag t) nil [1341 1363])
            ("sys/_types.h" include (:system-flag t) nil [1364 1387]))          
      :file "_structs.h"
      :pointmax 3658
      :fsize 3657
      :lastmodtime '(21495 23470 0 0)
      :unmatched-syntax nil))
  :file "!usr!include!sys!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
