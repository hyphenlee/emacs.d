;; Object slime/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "slime/"
  :tables (list 
   (semanticdb-table "slime.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("when" code nil nil [2149 2245])
            ("cl" include nil nil [2268 2281])
            ("when" code nil nil [2284 2344])
            ("thingatpt" include nil nil [2346 2366])
            ("comint" include nil nil [2367 2384])
            ("timer" include nil nil [2385 2401])
            ("pp" include nil nil [2402 2415])
            ("font-lock" include nil nil [2416 2436])
            ("when" code nil nil [2437 2552])
            ("easymenu" include nil nil [2553 2572])
            ("eval-when" code nil nil [2573 2715])
            ("slime-path" variable (:default-value (let ((path (or (locate-library "slime") load-file-name))) (and path (file-name-directory path)))) nil [2738 3064])
            ("slime-lisp-modes" variable (:default-value (quote (lisp-mode))) nil [3067 3105])
            ("slime-setup-contribs" variable nil nil [3106 3139])
            ("slime-setup" function (:arguments ("contribs")) nil [3141 3452])
            ("slime-setup-contribs" function nil nil [3454 3780])
            ("slime-lisp-mode-hook" function nil nil [3782 3918])
            ("slime-changelog-date" function
               (:user-visible-flag t
                :arguments ("interactivep"))
                nil [3940 4535])
            ("slime-protocol-version" variable nil nil [4538 4573])
            ("setq" code nil nil [4574 4652])
            ("slime" customgroup (:user-visible-flag t) nil [4694 4808])
            ("slime-ui" customgroup (:user-visible-flag t) nil [4826 4936])
            ("slime-truncate-lines" variable (:default-value t) nil [4938 5161])
            ("slime-kill-without-query-p" variable nil nil [5163 5385])
            ("slime-lisp" customgroup (:user-visible-flag t) nil [5405 5496])
            ("slime-backend" variable (:default-value "swank-loader.lisp") nil [5498 5758])
            ("slime-connected-hook" variable nil nil [5760 5890])
            ("slime-enable-evaluate-in-emacs" variable (:user-visible-flag t) nil [5892 6112])
            ("slime-lisp-host" variable (:default-value "127.0.0.1") nil [6114 6246])
            ("slime-port" variable (:default-value 4005) nil [6248 6365])
            ("slime-connect-host-history" variable (:default-value (list slime-lisp-host)) nil [6367 6425])
            ("slime-connect-port-history" variable (:default-value (list (prin1-to-string slime-port))) nil [6426 6497])
            ("slime-net-valid-coding-systems" variable (:default-value (quote ((iso-latin-1-unix nil "iso-latin-1-unix") (iso-8859-1-unix nil "iso-latin-1-unix") (binary nil "iso-latin-1-unix") (utf-8-unix t "utf-8-unix") (emacs-mule-unix t "emacs-mule-unix") (euc-jp-unix t "euc-jp-unix")))) nil [6499 6895])
            ("slime-find-coding-system" function (:arguments ("name")) nil [6897 7319])
            ("slime-net-coding-system" variable (:default-value (car (find-if (quote slime-find-coding-system) slime-net-valid-coding-systems :key (quote car)))) nil [7321 7727])
            ("slime-mode" customgroup (:user-visible-flag t) nil [7747 7856])
            ("slime-find-definitions-function" variable (:default-value (quote slime-find-definitions-rpc)) nil [7858 8487])
            ("slime-complete-symbol-function" variable
               (:user-visible-flag t
                :default-value (quote slime-simple-complete-symbol))
                nil [8489 8825])
            ("slime-mode-faces" customgroup (:user-visible-flag t) nil [8851 8967])
            ("slime-underline-color" function (:arguments ("color")) nil [8969 9247])
            ("slime-error-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "red")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "red")))) (t (:underline t))))
                :type "face")
                nil [9249 9544])
            ("slime-warning-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "orange")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "coral")))) (t (:underline t))))
                :type "face")
                nil [9546 9850])
            ("slime-style-warning-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "brown")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "gold")))) (t (:underline t))))
                :type "face")
                nil [9852 10166])
            ("slime-note-face" variable
               (:default-value (\` ((((class color) (background light)) (:underline (\, (slime-underline-color "brown4")))) (((class color) (background dark)) (:underline (\, (slime-underline-color "light goldenrod")))) (t (:underline t))))
                :type "face")
                nil [10168 10476])
            ("slime-face-inheritance-possible-p" function nil nil [10478 10625])
            ("slime-highlight-face" variable
               (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit highlight :underline nil)))) (quote ((((class color) (background light)) (:background "darkseagreen2")) (((class color) (background dark)) (:background "darkolivegreen")) (t (:inverse-video t)))))
                :type "face")
                nil [10627 11010])
            ("slime-debugger" customgroup (:user-visible-flag t) nil [11024 11128])
            ("define-sldb-faces" function (:arguments ("faces")) nil [11130 11529])
            ("define-sldb-face" function (:arguments ("name" "description" "default")) nil [11531 11797])
            ("define-sldb-faces" code nil nil [11799 12777])
            ("slime-mode-indirect-map" variable (:default-value (make-sparse-keymap)) nil [12817 13035])
            ("slime-modeline-string" variable nil nil [13037 13067])
            ("slime-buffer-connection" variable nil nil [13068 13100])
            ("slime-dispatching-connection" variable nil nil [13101 13138])
            ("slime-current-thread" variable nil nil [13139 13168])
            ("define-minor-mode" code nil nil [13170 14633])
            ("make-variable-buffer-local" code nil nil [14674 14796])
            ("add-to-list" code nil nil [14798 14997])
            ("slime-modeline-string" function nil nil [14999 15912])
            ("slime-pretty-package-name" function (:arguments ("name")) nil [15914 16184])
            ("slime-modeline-state-string" function (:arguments ("conn")) nil [16186 16667])
            ("slime-recompute-modelines" function nil nil [16669 16823])
            ("when" code nil nil [16825 17656])
            ("and" code nil nil [17658 17745])
            ("slime-parent-map" variable nil nil [17769 17860])
            ("slime-parent-bindings" variable (:default-value (quote (("\256" slime-edit-definition) ("\254" slime-pop-find-definition-stack) ("\337" slime-edit-uses) ("\277" slime-edit-uses) ("4." slime-edit-definition-other-window) ("5." slime-edit-definition-other-frame) ("" slime-eval-last-expression) ("\230" slime-eval-defun) ("" slime-prefix-map)))) nil [17862 18340])
            ("slime-prefix-map" variable nil nil [18342 18429])
            ("slime-prefix-bindings" variable (:default-value (quote (("" slime-eval-region) (":" slime-interactive-eval) ("" slime-interactive-eval) ("E" slime-edit-value) ("" slime-load-file) ("" slime-interrupt) ("\344" slime-disassemble-symbol) ("" slime-toggle-trace-fdefinition) ("I" slime-inspect) ("t" slime-list-threads) ("n" slime-cycle-connections) ("c" slime-list-connections) ("<" slime-list-callers) (">" slime-list-callees) ("" slime-doc-map) ("" slime-who-map)))) nil [18431 19069])
            ("slime-editing-map" variable nil nil [19071 19221])
            ("slime-editing-keys" variable (:default-value (\` (("\211" slime-complete-symbol) (" " slime-space) ("" slime-pprint-eval-last-expression) ("" slime-expand-1) ("\355" slime-macroexpand-all) ("" slime-undefine-function) ((\, (kbd "C-M-.")) slime-next-location) ((\, (kbd "C-M-,")) slime-previous-location) ("	" slime-complete-symbol)))) nil [19223 19869])
            ("slime-mode-map" variable nil nil [19871 19925])
            ("slime-keys" variable (:default-value (quote (("\360" slime-previous-note) ("\356" slime-next-note) ("\343" slime-remove-notes) ("" slime-compile-and-load-file) ("\353" slime-compile-file) ("" slime-compile-defun)))) nil [19927 20206])
            ("slime-nop" function (:user-visible-flag t) nil [20208 20345])
            ("slime-doc-map" variable nil nil [20347 20435])
            ("slime-doc-bindings" variable (:default-value (quote ((97 slime-apropos) (122 slime-apropos-all) (112 slime-apropos-package) (100 slime-describe-symbol) (102 slime-describe-function) (104 slime-documentation-lookup) (126 common-lisp-hyperspec-format) (35 common-lisp-hyperspec-lookup-reader-macro)))) nil [20437 20735])
            ("slime-who-map" variable nil nil [20739 20822])
            ("slime-who-bindings" variable (:default-value (quote ((99 slime-who-calls) (119 slime-calls-who) (114 slime-who-references) (98 slime-who-binds) (115 slime-who-sets) (109 slime-who-macroexpands) (97 slime-who-specializes)))) nil [20824 21044])
            ("slime-init-keymaps" function (:user-visible-flag t) nil [21046 21696])
            ("slime-init-keymap" function (:arguments ("keymap-name" "prefixp" "bothp" "bindings")) nil [21698 21908])
            ("slime-bind-keys" function (:arguments ("keymap" "bothp" "bindings")) nil [21910 22336])
            ("slime-init-keymaps" code nil nil [22338 22358])
            ("define-minor-mode" code nil nil [22360 22508])
            ("make-variable-buffer-local" code nil nil [22551 22723])
            ("slime-pre-command-hook" function nil nil [22725 22937])
            ("slime-post-command-hook" function nil nil [22939 23088])
            ("slime-setup-command-hooks" function nil nil [23090 23340])
            ("defmacro*" code nil nil [23587 23786])
            ("put" code nil nil [23788 23827])
            ("destructure-case" function (:arguments ("value" "patterns")) nil [23829 24949])
            ("put" code nil nil [24951 24998])
            ("slime-define-keys" function (:arguments ("keymap" "key-command")) nil [25000 25213])
            ("put" code nil nil [25215 25263])
            ("defmacro*" code nil nil [25265 26014])
            ("put" code nil nil [26016 26058])
            ("slime-message-function" variable (:default-value (quote message)) nil [26096 26136])
            ("slime-buffer-name" function (:arguments ("type" "hidden")) nil [26151 26322])
            ("slime-message" function (:arguments ("format" "args")) nil [26337 26532])
            ("slime-display-warning" function (:arguments ("message" "args")) nil [26534 26651])
            ("slime-background-message-function" variable (:default-value (quote slime-display-oneliner)) nil [26653 26719])
            ("slime-background-message" function (:arguments ("format-string" "format-args")) nil [26734 27095])
            ("slime-display-oneliner" function (:arguments ("format-string" "format-args")) nil [27097 27326])
            ("slime-oneliner" function (:arguments ("string")) nil [27328 27609])
            ("slime-set-truncate-lines" function nil nil [27624 27795])
            ("slime-read-package-name" function (:arguments ("prompt" "initial-value")) nil [27810 28174])
            ("slime-read-symbol-name" function (:arguments ("prompt" "query")) nil [28189 28590])
            ("slime-propertize-region" function (:arguments ("props" "body")) nil [28605 28959])
            ("put" code nil nil [28961 29015])
            ("slime-add-face" function (:arguments ("face" "string")) nil [29017 29129])
            ("put" code nil nil [29131 29176])
            ("slime-insert-propertized" function (:arguments ("props" "args")) nil [29191 29367])
            ("slime-with-rigid-indentation" function (:arguments ("level" "body")) nil [29369 29716])
            ("put" code nil nil [29718 29777])
            ("slime-indent-rigidly" function (:arguments ("start" "end" "column")) nil [29779 30166])
            ("slime-insert-indented" function (:arguments ("strings")) nil [30168 30322])
            ("slime-property-bounds" function (:arguments ("prop")) nil [30324 30639])
            ("slime-curry" function (:arguments ("fun" "args")) nil [30641 30845])
            ("slime-rcurry" function (:arguments ("fun" "args")) nil [30847 31002])
            ("slime-popup-restore-data" variable nil nil [31037 31584])
            ("slime-buffer-package" variable nil nil [31609 31638])
            ("slime-buffer-connection" variable nil nil [31639 31671])
            ("defmacro*" code nil nil [31686 32777])
            ("put" code nil nil [32779 32833])
            ("slime-make-popup-buffer" function (:arguments ("name" "buffer-vars" "mode")) nil [32835 33273])
            ("slime-init-popup-buffer" function (:arguments ("buffer-vars")) nil [33275 33449])
            ("slime-display-popup-buffer" function (:arguments ("select")) nil [33451 34147])
            ("slime-close-popup-window" function nil nil [34149 34750])
            ("slime-save-local-variables" function (:arguments ("vars" "body")) nil [34752 35223])
            ("put" code nil nil [35225 35282])
            ("define-minor-mode" code nil nil [35284 35514])
            ("add-to-list" code nil nil [35516 35773])
            ("set-keymap-parent" code nil nil [35775 35839])
            ("make-variable-buffer-local" code nil nil [35841 36002])
            ("slime-popup-buffer-quit-function" function (:user-visible-flag t) nil [36004 36179])
            ("slime-popup-buffer-quit" function
               (:user-visible-flag t
                :arguments ("kill-buffer-p"))
                nil [36194 36534])
            ("slime-to-lisp-filename-function" variable (:default-value (function convert-standard-filename)) nil [36775 36904])
            ("slime-from-lisp-filename-function" variable (:default-value (function identity)) nil [36905 37019])
            ("slime-to-lisp-filename" function (:arguments ("filename")) nil [37021 37169])
            ("slime-from-lisp-filename" function (:arguments ("filename")) nil [37171 37332])
            ("inferior-lisp-program" variable
               (:user-visible-flag t
                :default-value "lisp")
                nil [37591 37706])
            ("slime-lisp-implementations" variable (:user-visible-flag t) nil [37708 38167])
            ("slime-default-lisp" variable (:user-visible-flag t) nil [38169 38283])
            ("slime-net-processes" variable nil nil [38323 38351])
            ("slime-default-connection" variable nil nil [38352 38385])
            ("slime" function
               (:user-visible-flag t
                :arguments ("command" "coding-system"))
                nil [38387 38838])
            ("slime-inferior-lisp-program-history" variable (:default-value (quote nil)) nil [38840 38943])
            ("slime-read-interactive-args" function nil nil [38945 40720])
            ("slime-lisp-options" function (:arguments ("name")) nil [40722 41248])
            ("slime-lookup-lisp-implementation" function (:arguments ("table" "name")) nil [41250 41716])
            ("slime-start" function (:arguments ("program" "program-args" "directory" "coding-system" "init" "name" "buffer" "init-function" "env")) nil [41718 43459])
            ("slime-start*" function (:arguments ("options")) nil [43461 43523])
            ("slime-connect" function
               (:user-visible-flag t
                :arguments ("host" "port" "_coding-system" "interactive-p"))
                nil [43525 44412])
            ("slime-start-and-init" function (:arguments ("options" "fun")) nil [44440 44711])
            ("slime-connect-retry-timer" variable nil nil [45435 45535])
            ("slime-bytecode-stale-p" function nil nil [45564 45945])
            ("slime-recompile-bytecode" function (:user-visible-flag t) nil [45947 46242])
            ("slime-urge-bytecode-recompile" function nil nil [46244 46772])
            ("slime-abort-connection" function (:user-visible-flag t) nil [46774 47045])
            ("slime-maybe-start-lisp" function (:arguments ("program" "program-args" "env" "directory" "buffer")) nil [47098 47761])
            ("slime-reinitialize-inferior-lisp-p" function (:arguments ("program" "program-args" "env" "buffer")) nil [47763 48134])
            ("slime-inferior-process-start-hook" variable nil nil [48136 48235])
            ("slime-start-lisp" function (:arguments ("program" "program-args" "env" "directory" "buffer")) nil [48237 48891])
            ("slime-inferior-connect" function (:arguments ("process" "args")) nil [48893 49119])
            ("slime-inferior-lisp-args" variable nil nil [49121 49231])
            ("slime-start-swank-server" function (:arguments ("process" "args")) nil [49233 49742])
            ("slime-inferior-lisp-args" function (:arguments ("process")) nil [49744 49925])
            ("slime-init-command" function (:arguments ("port-filename" "_coding-system")) nil [50007 50611])
            ("slime-swank-port-file" function nil nil [50613 50810])
            ("slime-temp-directory" function nil nil [50812 50987])
            ("slime-delete-swank-port-file" function (:arguments ("quiet")) nil [50989 51317])
            ("slime-read-port-and-connect" function (:arguments ("inferior-process")) nil [51319 51425])
            ("slime-attempt-connection" function (:arguments ("process" "retries" "attempt")) nil [51427 53081])
            ("slime-timer-call" function (:arguments ("fun" "args")) nil [53083 53396])
            ("slime-cancel-connect-retry-timer" function nil nil [53398 53562])
            ("slime-read-swank-port" function nil nil [53564 53884])
            ("slime-toggle-debug-on-swank-error" function nil nil [53886 54100])
            ("slime-user-first-name" function nil nil [54130 54355])
            ("slime-words-of-encouragement" variable (:default-value (\` ("Let the hacking commence!" "Hacks and glory await!" "Hack and be merry!" "Your hacking starts... NOW!" "May the source be with you!" "Take this REPL, brother, and may it serve you well." "Lemonodor-fame is but a hack away!" (\, (format "%s, this could be the start of a beautiful program." (slime-user-first-name)))))) nil [54357 54821])
            ("slime-random-words-of-encouragement" function nil nil [54823 55021])
            ("slime-net-processes" variable nil nil [55591 55675])
            ("slime-net-process-close-hooks" variable (:default-value (quote nil)) nil [55677 55849])
            ("slime-secret" function nil nil [55851 56209])
            ("slime-net-connect" function (:arguments ("host" "port")) nil [56225 56855])
            ("slime-make-net-buffer" function (:arguments ("name")) nil [56857 57128])
            ("slime-set-query-on-exit-flag" function (:arguments ("process")) nil [57130 57511])
            ("slime-check-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [57542 58015])
            ("slime-coding-system-mulibyte-p" function (:arguments ("coding-system")) nil [58017 58123])
            ("slime-coding-system-cl-name" function (:arguments ("coding-system")) nil [58125 58227])
            ("slime-net-send" function (:arguments ("sexp" "proc")) nil [58243 58713])
            ("slime-safe-encoding-p" function (:arguments ("coding-system" "string")) nil [58715 59253])
            ("slime-net-close" function (:arguments ("process" "debug")) nil [59255 59794])
            ("slime-net-sentinel" function (:arguments ("process" "message")) nil [59796 59930])
            ("slime-net-filter" function (:arguments ("process" "string")) nil [60068 60317])
            ("slime-process-available-input" function (:arguments ("process")) nil [60319 60854])
            ("slime-net-have-input-p" function nil nil [60856 61054])
            ("slime-run-when-idle" function (:arguments ("function" "args")) nil [61056 61259])
            ("slime-handle-net-read-error" function (:arguments ("error")) nil [61261 61745])
            ("slime-net-read-or-lose" function (:arguments ("process")) nil [61747 61920])
            ("slime-net-read" function nil nil [61922 62551])
            ("slime-net-decode-length" function nil nil [62553 62686])
            ("slime-net-encode-length" function (:arguments ("n")) nil [62688 62743])
            ("slime-prin1-to-string" function (:arguments ("sexp")) nil [62745 63088])
            ("slime-dispatching-connection" variable nil nil [65173 65387])
            ("make-variable-buffer-local" code nil nil [65389 65552])
            ("slime-default-connection" variable nil nil [65554 65753])
            ("slime-current-connection" function nil nil [65755 65979])
            ("slime-connection" function nil nil [65981 66513])
            ("slime-auto-connect" variable (:default-value (quote never)) nil [66553 66842])
            ("slime-auto-connect" function nil nil [66844 67207])
            ("slime-auto-select-connection" variable (:default-value (quote ask)) nil [67209 67437])
            ("slime-auto-select-connection" function nil nil [67439 67986])
            ("slime-select-connection" function (:arguments ("process")) nil [67988 68112])
            ("slime-cycle-connections-hook" variable nil nil [68114 68155])
            ("slime-cycle-connections" function (:user-visible-flag t) nil [68157 68609])
            ("defmacro*" code nil nil [68611 68976])
            ("put" code nil nil [68978 69037])
            ("slime-def-connection-var" function (:arguments ("varname" "initial-value-and-doc")) nil [69072 70023])
            ("put" code nil nil [70025 70080])
            ("put" code nil nil [70081 70143])
            ("slime-def-connection-var" code nil nil [70145 70276])
            ("slime-def-connection-var" code nil nil [70278 70417])
            ("slime-def-connection-var" code nil nil [70419 70505])
            ("slime-def-connection-var" code nil nil [70507 70587])
            ("slime-def-connection-var" code nil nil [70589 70699])
            ("slime-def-connection-var" code nil nil [70701 70814])
            ("slime-def-connection-var" code nil nil [70816 70925])
            ("slime-def-connection-var" code nil nil [70927 71055])
            ("slime-def-connection-var" code nil nil [71057 71144])
            ("slime-def-connection-var" code nil nil [71146 71251])
            ("slime-def-connection-var" code nil nil [71253 71338])
            ("slime-def-connection-var" code nil nil [71340 71456])
            ("slime-def-connection-var" code nil nil [71458 71570])
            ("slime-connection-counter" variable nil nil [71596 71704])
            ("slime-setup-connection" function (:arguments ("process")) nil [71720 71939])
            ("slime-init-connection-state" function (:arguments ("proc")) nil [71941 72775])
            ("slime-set-connection-info" function (:arguments ("connection" "info")) nil [72777 74530])
            ("slime-check-version" function (:arguments ("version" "conn")) nil [74532 74849])
            ("slime-generate-connection-name" function (:arguments ("lisp-name")) nil [74851 75127])
            ("slime-connection-close-hook" function (:arguments ("process")) nil [75129 75456])
            ("add-hook" code nil nil [75458 75528])
            ("slime-disconnect" function (:user-visible-flag t) nil [75561 75677])
            ("slime-disconnect-all" function (:user-visible-flag t) nil [75679 75805])
            ("slime-connection-port" function (:arguments ("connection")) nil [75807 76000])
            ("slime-process" function (:arguments ("connection")) nil [76002 76320])
            ("slime-set-inferior-process" function (:arguments ("connection" "process")) nil [76378 76486])
            ("slime-use-sigint-for-interrupt" function (:arguments ("connection")) nil [76488 76696])
            ("slime-inhibit-pipelining" variable
               (:user-visible-flag t
                :default-value t)
                nil [76698 76803])
            ("slime-background-activities-enabled-p" function nil nil [76805 77042])
            ("make-variable-buffer-local" code nil nil [78825 79051])
            ("make-variable-buffer-local" code nil nil [79053 79230])
            ("defmacro*" code nil nil [79431 80834])
            ("put" code nil nil [80836 80876])
            ("slime-current-package" function nil nil [80892 81196])
            ("slime-find-buffer-package-function" variable
               (:user-visible-flag t
                :default-value (quote slime-search-buffer-package))
                nil [81198 81416])
            ("slime-find-buffer-package" function nil nil [81418 81574])
            ("make-variable-buffer-local" code nil nil [81576 81693])
            ("slime-search-buffer-package" function nil nil [81903 82254])
            ("slime-stack-eval-tags" variable nil nil [82501 82597])
            ("slime-eval" function (:arguments ("sexp" "package")) nil [82599 83669])
            ("slime-eval-async" function (:arguments ("sexp" "cont" "package")) nil [83671 84321])
            ("put" code nil nil [84323 84370])
            ("slime-connected-p" function nil nil [84411 84523])
            ("slime-check-connected" function nil nil [84525 84745])
            ("slime-debugged-connection-p" function (:arguments ("conn")) nil [84757 85124])
            ("slime-busy-p" function (:arguments ("conn")) nil [85126 85451])
            ("slime-sync" function nil nil [85453 85722])
            ("slime-ping" function (:user-visible-flag t) nil [85724 85834])
            ("slime-def-connection-var" code nil nil [86281 86402])
            ("slime-def-connection-var" code nil nil [86404 86499])
            ("slime-event-hooks" variable nil nil [86501 86527])
            ("slime-dispatch-event" function (:arguments ("event" "process")) nil [86529 90590])
            ("slime-send" function (:arguments ("sexp")) nil [90592 90724])
            ("slime-reset" function (:user-visible-flag t) nil [90726 90961])
            ("slime-send-sigint" function nil nil [90963 91046])
            ("slime-def-connection-var" code nil nil [91499 91582])
            ("slime-def-connection-var" code nil nil [91584 91670])
            ("slime-channel" type
               (:members ("operations" "name" "id" "plist")
                :type "struct")
                nil [91672 91870])
            ("slime-make-channel" function (:arguments ("operations" "name")) nil [91872 92081])
            ("slime-close-channel" function (:arguments ("channel")) nil [92083 92376])
            ("slime-find-channel" function (:arguments ("id")) nil [92378 92444])
            ("slime-channel-send" function (:arguments ("channel" "message")) nil [92446 92663])
            ("slime-channel-put" function (:arguments ("channel" "prop" "value")) nil [92665 92812])
            ("slime-channel-get" function (:arguments ("channel" "prop")) nil [92814 92903])
            ("slime-channel-method-table-name" function (:arguments ("type")) nil [92926 93026])
            ("slime-define-channel-type" function (:arguments ("name")) nil [93029 93207])
            ("put" code nil nil [93209 93272])
            ("slime-define-channel-method" function (:arguments ("type" "method" "args" "body")) nil [93274 93460])
            ("put" code nil nil [93462 93520])
            ("put" code nil nil [93521 93586])
            ("slime-send-to-remote-channel" function (:arguments ("channel-id" "msg")) nil [93588 93706])
            ("slime-log-events" variable
               (:user-visible-flag t
                :default-value t)
                nil [93952 94034])
            ("slime-outline-mode-in-events-buffer" variable (:user-visible-flag t) nil [94036 94139])
            ("slime-event-buffer-name" variable (:default-value (slime-buffer-name :events)) nil [94141 94241])
            ("slime-log-event" function (:arguments ("event")) nil [94243 94805])
            ("slime-pprint-event" function (:arguments ("event" "buffer")) nil [94807 95002])
            ("slime-events-buffer" function nil nil [95004 95528])
            ("slime-restart-inferior-lisp" function (:user-visible-flag t) nil [95560 95796])
            ("slime-restart-sentinel" function (:arguments ("process" "_message")) nil [95798 96569])
            ("slime-kill-all-buffers" function nil nil [96600 97114])
            ("slime-highlight-compiler-notes" variable
               (:user-visible-flag t
                :default-value t)
                nil [97182 97286])
            ("slime-before-compile-functions" variable nil nil [97288 97498])
            ("slime-compilation-finished-hook" variable (:default-value (quote slime-maybe-show-compilation-log)) nil [97537 98010])
            ("slime-compilation-policy" variable nil nil [98120 98216])
            ("slime-compute-policy" function (:arguments ("arg")) nil [98218 98737])
            ("slime-compilation-result" type
               (:members ("tag" "notes" "successp" "duration" "loadp" "faslfile")
                :type "struct")
                nil [98739 98959])
            ("slime-last-compilation-result" variable nil nil [98961 99059])
            ("slime-compiler-notes" function nil nil [99061 99210])
            ("slime-compile-and-load-file" function
               (:user-visible-flag t
                :arguments ("policy"))
                nil [99212 99913])
            ("slime-compile-file-options" variable (:default-value (quote nil)) nil [99957 100107])
            ("slime-compile-file" function
               (:user-visible-flag t
                :arguments ("load" "policy"))
                nil [100109 101040])
            ("slime-hack-quotes" function (:arguments ("arglist")) nil [101042 101184])
            ("slime-simplify-plist" function (:arguments ("plist")) nil [101186 101344])
            ("slime-compile-defun" function
               (:user-visible-flag t
                :arguments ("raw-prefix-arg"))
                nil [101346 101939])
            ("slime-compile-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [101941 102344])
            ("slime-flash-region" function (:arguments ("start" "end" "timeout")) nil [102346 102619])
            ("slime-compile-string" function (:arguments ("string" "start-offset")) nil [102621 103148])
            ("slime-load-failed-fasl" variable (:default-value (quote ask)) nil [103150 103414])
            ("slime-load-failed-fasl-p" function nil nil [103416 103583])
            ("slime-compilation-finished" function (:arguments ("result")) nil [103585 104263])
            ("slime-show-note-counts" function (:arguments ("notes" "secs" "successp")) nil [104265 105041])
            ("slime-highlight-notes" function
               (:user-visible-flag t
                :arguments ("notes"))
                nil [105043 105465])
            ("slime-note-overlays" variable (:default-value (quote nil)) nil [105467 105557])
            ("slime-remove-old-overlays" function nil nil [105559 105713])
            ("slime-filter-buffers" function (:arguments ("predicate")) nil [105715 106009])
            ("slime-recompile-location" function (:arguments ("location")) nil [106134 106264])
            ("slime-recompile-locations" function (:arguments ("locations" "cont")) nil [106266 106972])
            ("slime-merge-notes-for-display" function (:arguments ("notes")) nil [107037 107318])
            ("slime-merge-notes" function (:arguments ("notes")) nil [107320 107782])
            ("slime-notes-in-same-location-p" function (:arguments ("a" "b")) nil [107784 107886])
            ("slime-one-line-ify" function (:arguments ("string")) nil [107917 108233])
            ("slime-xrefs-for-notes" function (:arguments ("notes")) nil [108235 108808])
            ("slime-maybe-show-xrefs-for-notes" function (:arguments ("notes")) nil [108810 109123])
            ("slime-note-has-location-p" function (:arguments ("note")) nil [109125 109219])
            ("slime-redefinition-note-p" function (:arguments ("note")) nil [109221 109309])
            ("slime-create-compilation-log" function (:arguments ("notes")) nil [109311 109596])
            ("slime-maybe-show-compilation-log" function (:arguments ("notes")) nil [109598 110160])
            ("slime-show-compilation-log" function
               (:user-visible-flag t
                :arguments ("notes"))
                nil [110162 110457])
            ("slime-insert-compilation-log" function (:arguments ("notes")) nil [110459 111419])
            ("slime-insert-note-group" function (:arguments ("notes")) nil [111421 111824])
            ("slime-indent-block" function (:arguments ("start" "column")) nil [111826 112088])
            ("slime-canonicalized-location" function (:arguments ("location")) nil [112090 112581])
            ("slime-canonicalized-location-to-string" function (:arguments ("loc")) nil [112583 113029])
            ("slime-goto-note-in-compilation-log" function (:arguments ("note")) nil [113031 113688])
            ("slime-group-and-sort-notes" function (:arguments ("notes")) nil [113690 114940])
            ("slime-note.severity" function (:arguments ("note")) nil [114942 115005])
            ("slime-note.message" function (:arguments ("note")) nil [115007 115068])
            ("slime-note.source-context" function (:arguments ("note")) nil [115070 115145])
            ("slime-note.location" function (:arguments ("note")) nil [115147 115210])
            ("slime-severity-label" function (:arguments ("severity")) nil [115212 115287])
            ("slime-overlay-note" function (:arguments ("note")) nil [115328 115994])
            ("slime-make-note-overlay" function (:arguments ("note" "start" "end")) nil [115996 116183])
            ("slime-create-note-overlay" function (:arguments ("note" "start" "end" "severity" "message")) nil [116185 116993])
            ("slime-merge-note-into-overlay" function (:arguments ("overlay" "severity" "message")) nil [117194 117713])
            ("slime-choose-overlay-region" function (:arguments ("note")) nil [117715 118510])
            ("slime-choose-overlay-for-read-error" function (:arguments ("location")) nil [118512 118857])
            ("slime-choose-overlay-for-sexp" function (:arguments ("location")) nil [118869 119281])
            ("slime-same-line-p" function (:arguments ("pos1" "pos2")) nil [119283 119495])
            ("slime-severity-face-plist" variable (:default-value (quote (:error slime-error-face :read-error slime-error-face :warning slime-warning-face :redefinition slime-style-warning-face :style-warning slime-style-warning-face :note slime-note-face))) nil [119497 119766])
            ("slime-severity-face" function (:arguments ("severity")) nil [119768 119966])
            ("slime-severity-order" variable (:default-value (quote (:note :style-warning :redefinition :warning :error :read-error))) nil [119968 120066])
            ("slime-severity<" function (:arguments ("sev1" "sev2")) nil [120068 120238])
            ("slime-most-severe" function (:arguments ("sev1" "sev2")) nil [120240 120369])
            ("slime-visit-source-path" function (:arguments ("source-path")) nil [120395 120567])
            ("slime-forward-positioned-source-path" function (:arguments ("source-path")) nil [120569 120977])
            ("slime-forward-source-path" function (:arguments ("source-path")) nil [120979 121393])
            ("slime-filesystem-toplevel-directory" function nil nil [121497 121786])
            ("slime-file-name-merge-source-root" function (:arguments ("target-filename" "buffer-filename")) nil [121788 124020])
            ("slime-highlight-differences-in-dirname" function (:arguments ("base-dirname" "contrast-dirname")) nil [124022 125303])
            ("slime-warn-when-possibly-tricked-by-M-." variable (:default-value t) nil [125305 126309])
            ("slime-maybe-warn-for-different-source-root" function (:arguments ("target-filename" "buffer-filename")) nil [126311 127064])
            ("slime-check-location-filename-sanity" function (:arguments ("filename")) nil [127066 127552])
            ("slime-check-location-buffer-name-sanity" function (:arguments ("buffer-name")) nil [127554 127703])
            ("slime-goto-location-buffer" function (:arguments ("buffer")) nil [127708 128919])
            ("slime-goto-location-position" function (:arguments ("position")) nil [128921 130215])
            ("slime-eol-conversion-fixup" function (:arguments ("n")) nil [130217 130683])
            ("slime-search-method-location" function (:arguments ("name" "specializers" "qualifiers")) nil [130685 132117])
            ("slime-search-call-site" function (:arguments ("fname")) nil [132119 132608])
            ("slime-search-edit-path" function (:arguments ("edit-path")) nil [132610 132877])
            ("slime-goto-source-location" function (:arguments ("location" "noerror")) nil [132879 134148])
            ("slime-location-offset" function (:arguments ("location")) nil [134150 134855])
            ("slime-isearch" function (:arguments ("string")) nil [135093 135996])
            ("slime-isearch-with-function" function (:arguments ("search-fn" "string")) nil [135998 136865])
            ("slime-next-note" function (:user-visible-flag t) nil [136931 137197])
            ("slime-previous-note" function (:user-visible-flag t) nil [137199 137481])
            ("slime-goto-first-note" function (:arguments ("_")) nil [137483 137735])
            ("slime-remove-notes" function (:user-visible-flag t) nil [137737 137874])
            ("slime-show-note" function (:arguments ("overlay")) nil [137876 138286])
            ("slime-temporarily-highlight-note" function (:arguments ("overlay")) nil [138330 138793])
            ("slime-note-at-point" function nil nil [138830 138997])
            ("slime-note-overlay-p" function (:arguments ("overlay")) nil [138999 139128])
            ("slime-note-overlays-at-point" function nil nil [139130 139296])
            ("slime-find-next-note" function nil nil [139298 139526])
            ("slime-find-previous-note" function nil nil [139528 139758])
            ("slime-space" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [139784 140099])
            ("put" code nil nil [140101 140139])
            ("slime-echo-arglist-function" variable (:default-value (quote slime-show-arglist)) nil [140173 140229])
            ("slime-echo-arglist" function nil nil [140231 140362])
            ("slime-show-arglist" function nil nil [140364 140611])
            ("slime-operator-before-point-function" variable (:default-value (quote slime-lisp-operator-before-point)) nil [140613 140692])
            ("slime-operator-before-point" function nil nil [140694 140781])
            ("slime-lisp-operator-before-point" function nil nil [140783 140943])
            ("slime-completions-buffer-name" variable (:default-value "*Completions*") nil [141052 141106])
            ("make-variable-buffer-local" code nil nil [141108 141329])
            ("make-variable-buffer-local" code nil nil [141331 141610])
            ("slime-complete-maybe-save-window-configuration" function nil nil [141612 141984])
            ("slime-complete-delay-restoration" function nil nil [141986 142147])
            ("slime-complete-forget-window-configuration" function nil nil [142149 142295])
            ("slime-complete-restore-window-configuration" function nil nil [142297 143052])
            ("slime-complete-maybe-restore-window-configuration" function nil nil [143054 143828])
            ("slime-completion-window-active-p" function nil nil [143830 144083])
            ("slime-display-completion-list" function (:arguments ("completions" "base")) nil [144085 144632])
            ("slime-display-or-scroll-completions" function (:arguments ("completions" "base")) nil [144636 144938])
            ("slime-scroll-completions" function nil nil [144940 145258])
            ("slime-complete-symbol" function (:user-visible-flag t) nil [145260 145447])
            ("slime-simple-complete-symbol" function nil nil [145449 146737])
            ("slime-maybe-complete-as-filename" function nil nil [146739 147196])
            ("slime-minibuffer-respecting-message" function (:arguments ("format" "format-args")) nil [147198 147630])
            ("slime-indent-and-complete-symbol" function (:user-visible-flag t) nil [147632 148278])
            ("slime-minibuffer-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "	" (quote slime-complete-symbol)) (define-key map "\211" (quote slime-complete-symbol)) map)) nil [148280 148559])
            ("slime-minibuffer-history" variable (:default-value (quote nil)) nil [148561 148656])
            ("slime-minibuffer-setup-hook" function nil nil [148659 149018])
            ("slime-read-from-minibuffer" function (:arguments ("prompt" "initial-value" "history")) nil [149020 149480])
            ("slime-bogus-completion-alist" function (:arguments ("list")) nil [149482 149756])
            ("slime-simple-completions" function (:arguments ("prefix")) nil [149758 149918])
            ("slime-push-definition-stack" function nil nil [149944 150157])
            ("slime-pop-find-definition-stack" function (:user-visible-flag t) nil [150159 150350])
            ("slime-xref" type
               (:members ("dspec" "location")
                :type "struct")
                nil [150352 150431])
            ("slime-location" type
               (:members ("tag" "buffer" "position" "hints")
                :type "struct")
                nil [150433 150618])
            ("slime-location-p" function (:arguments ("o")) nil [150620 150687])
            ("slime-xref-has-location-p" function (:arguments ("xref")) nil [150689 150777])
            ("make-slime-buffer-location" function (:arguments ("buffer-name" "position" "hints")) nil [150779 150957])
            ("make-slime-file-location" function (:arguments ("file-name" "position" "hints")) nil [150959 151129])
            ("slime-edit-definition-hooks" variable nil nil [151359 151395])
            ("slime-edit-definition" function
               (:user-visible-flag t
                :arguments ("name" "where"))
                nil [151397 152447])
            ("slime-edit-definition-cont" function (:arguments ("xrefs" "name" "where")) nil [152449 153126])
            ("slime-edit-uses-xrefs" variable (:default-value (quote (:calls :macroexpands :binds :references :sets :specializes))) nil [153128 153223])
            ("slime-edit-uses" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [153338 154164])
            ("slime-analyze-xrefs" function (:arguments ("xrefs")) nil [154166 154712])
            ("slime-xref-group" function (:arguments ("xref")) nil [154714 155316])
            ("slime-pop-to-location" function (:arguments ("location" "where")) nil [155318 155610])
            ("slime-postprocess-xref" function (:arguments ("original-xref")) nil [155612 156676])
            ("slime-postprocess-xrefs" function (:arguments ("xrefs")) nil [156678 156759])
            ("slime-find-definitions" function (:arguments ("name")) nil [156761 156904])
            ("slime-find-definitions-rpc" function (:arguments ("name")) nil [156906 157004])
            ("slime-edit-definition-other-window" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [157007 157219])
            ("slime-edit-definition-other-frame" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [157221 157431])
            ("slime-edit-definition-with-etags" function (:arguments ("name")) nil [157433 157772])
            ("slime-etags-to-locations" function (:arguments ("name")) nil [157774 158590])
            ("slime-etags-definitions" function (:arguments ("name")) nil [158592 158927])
            ("slime-first-change-hook" function nil nil [158954 159530])
            ("slime-setup-first-change-hook" function nil nil [159532 159663])
            ("add-hook" code nil nil [159665 159723])
            ("slime-eval-for-lisp" function (:arguments ("thread" "tag" "form-string")) nil [159747 160569])
            ("slime-check-eval-in-emacs-result" function (:arguments ("x")) nil [160571 161010])
            ("slime-check-eval-in-emacs-enabled" function nil nil [161012 161306])
            ("slime-ed-frame" variable nil nil [161321 161382])
            ("slime-ed-use-dedicated-frame" variable
               (:user-visible-flag t
                :default-value t)
                nil [161384 161535])
            ("slime-ed" function (:arguments ("what")) nil [161537 162396])
            ("slime-goto-line" function (:arguments ("line-number")) nil [162398 162755])
            ("slime-y-or-n-p" function (:arguments ("thread" "tag" "question")) nil [162759 162879])
            ("slime-read-from-minibuffer-for-swank" function (:arguments ("thread" "tag" "prompt" "initial-value")) nil [162881 163164])
            ("slime-interactive-eval" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [163197 163647])
            ("slime-transcript-start-hook" variable nil nil [163649 163729])
            ("slime-transcript-stop-hook" variable nil nil [163730 163811])
            ("slime-display-eval-result" function (:arguments ("value")) nil [163813 163883])
            ("slime-eval-with-transcript" function (:arguments ("form")) nil [163885 164266])
            ("slime-eval-print" function (:arguments ("string")) nil [164268 164613])
            ("slime-eval-save" function (:arguments ("string")) nil [164615 164989])
            ("slime-eval-describe" function (:arguments ("form")) nil [164999 165228])
            ("slime-description-autofocus" variable nil nil [165230 165324])
            ("slime-show-description" function (:arguments ("string" "package")) nil [165326 165860])
            ("slime-last-expression" function nil nil [165862 165984])
            ("slime-eval-last-expression" function (:user-visible-flag t) nil [165986 166135])
            ("slime-eval-defun" function (:user-visible-flag t) nil [166139 166470])
            ("slime-eval-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [166472 166668])
            ("slime-pprint-eval-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [166670 166882])
            ("slime-eval-buffer" function (:user-visible-flag t) nil [166884 167046])
            ("slime-re-evaluate-defvar" function
               (:user-visible-flag t
                :arguments ("form"))
                nil [167048 167326])
            ("slime-pprint-eval-last-expression" function (:user-visible-flag t) nil [167328 167524])
            ("slime-eval-print-last-expression" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [167526 167734])
            ("slime-edit-value" function
               (:user-visible-flag t
                :arguments ("form-string"))
                nil [167761 168490])
            ("make-variable-buffer-local" code nil nil [168492 168607])
            ("define-minor-mode" code nil nil [168609 168751])
            ("slime-edit-value-callback" function (:arguments ("form-string" "current-value" "package")) nil [168753 169555])
            ("slime-edit-value-commit" function (:user-visible-flag t) nil [169557 170176])
            ("slime-untrace-all" function (:user-visible-flag t) nil [170193 170300])
            ("slime-toggle-trace-fdefinition" function
               (:user-visible-flag t
                :arguments ("spec"))
                nil [170302 170542])
            ("slime-disassemble-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [170547 170778])
            ("slime-undefine-function" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [170780 171057])
            ("slime-unintern-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name" "package"))
                nil [171059 171498])
            ("slime-load-file" function
               (:user-visible-flag t
                :arguments ("filename"))
                nil [171500 171936])
            ("slime-change-directory-hooks" variable nil nil [171938 172081])
            ("slime-change-directory" function (:arguments ("directory")) nil [172083 172506])
            ("slime-cd" function
               (:user-visible-flag t
                :arguments ("directory"))
                nil [172509 172782])
            ("slime-pwd" function (:user-visible-flag t) nil [172784 172922])
            ("slime-toggle-profile-fdefinition" function
               (:user-visible-flag t
                :arguments ("fname-string"))
                nil [172942 173294])
            ("slime-unprofile-all" function (:user-visible-flag t) nil [173296 173465])
            ("slime-profile-report" function (:user-visible-flag t) nil [173467 173595])
            ("slime-profile-reset" function (:user-visible-flag t) nil [173597 173778])
            ("slime-profiled-functions" function (:user-visible-flag t) nil [173780 173988])
            ("slime-profile-package" function
               (:user-visible-flag t
                :arguments ("package" "callers" "methods"))
                nil [173990 174577])
            ("slime-profile-by-substring" function
               (:user-visible-flag t
                :arguments ("substring" "package"))
                nil [174579 175168])
            ("slime-documentation-lookup-function" variable (:default-value (quote slime-hyperspec-lookup)) nil [175191 175262])
            ("slime-documentation-lookup" function (:user-visible-flag t) nil [175264 175444])
            ("slime-hyperspec-lookup" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [175446 176415])
            ("slime-describe-symbol" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [176419 176683])
            ("slime-documentation" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [176685 176994])
            ("slime-describe-function" function (:arguments ("symbol-name")) nil [176996 177230])
            ("slime-apropos-symbol" variable
               (:default-value (quote ((t (:inherit bold))))
                :type "face")
                nil [177232 177351])
            ("slime-apropos-label" variable
               (:default-value (quote ((t (:inherit italic))))
                :type "face")
                nil [177353 177492])
            ("slime-apropos-summary" function (:arguments ("string" "case-sensitive-p" "package" "only-external-p")) nil [177494 177869])
            ("slime-apropos" function
               (:user-visible-flag t
                :arguments ("string" "only-external-p" "package" "case-sensitive-p"))
                nil [177871 178864])
            ("slime-apropos-all" function (:user-visible-flag t) nil [178866 179018])
            ("slime-apropos-package" function
               (:user-visible-flag t
                :arguments ("package" "internal"))
                nil [179020 179406])
            ("apropos-mode" function (:prototype-flag t) nil [179408 179442])
            ("slime-show-apropos" function (:arguments ("plists" "string" "package" "summary")) nil [179443 180029])
            ("slime-apropos-namespaces" variable (:default-value (quote ((:variable "Variable") (:function "Function") (:generic-function "Generic Function") (:macro "Macro") (:special-operator "Special Operator") (:setf "Setf") (:type "Type") (:class "Class") (:alien-type "Alien type") (:alien-struct "Alien struct") (:alien-union "Alien type") (:alien-enum "Alien enum")))) nil [180031 180414])
            ("slime-print-apropos" function (:arguments ("plists")) nil [180416 181442])
            ("slime-call-describer" function (:arguments ("arg")) nil [181444 181695])
            ("slime-info" function (:user-visible-flag t) nil [181697 181987])
            ("slime-xref-mode-map" variable nil nil [182021 182049])
            ("define-derived-mode" code nil nil [182051 182535])
            ("slime-define-keys" code nil nil [182537 183088])
            ("slime-next-line/not-add-newlines" function nil nil [183090 183206])
            ("defmacro*" code nil nil [183259 183783])
            ("put" code nil nil [183785 183838])
            ("slime-insert-xrefs" function (:arguments ("xref-alist")) nil [183840 184486])
            ("slime-xref-next-line" function nil nil [184488 184604])
            ("slime-xref-prev-line" function nil nil [184606 184724])
            ("slime-xref-show-location" function (:arguments ("loc")) nil [184726 184886])
            ("slime-next-location-function" variable nil nil [184888 184982])
            ("slime-previous-location-function" variable nil nil [184984 185086])
            ("slime-xref-last-buffer" variable nil nil [185088 185203])
            ("slime-show-xref-buffer" function (:arguments ("xrefs" "_type" "_symbol" "package")) nil [185205 185558])
            ("slime-show-xrefs" function (:arguments ("xrefs" "type" "symbol" "package")) nil [185560 185781])
            ("slime-who-calls" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [185806 185982])
            ("slime-calls-who" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [185984 186173])
            ("slime-who-references" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [186175 186375])
            ("slime-who-binds" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [186377 186560])
            ("slime-who-sets" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [186562 186742])
            ("slime-who-macroexpands" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [186744 186940])
            ("slime-who-specializes" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [186942 187141])
            ("slime-list-callers" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [187143 187338])
            ("slime-list-callees" function
               (:user-visible-flag t
                :arguments ("symbol-name"))
                nil [187340 187535])
            ("slime-xref" function (:arguments ("type" "symbol" "continuation")) nil [187605 188254])
            ("slime-check-xref-implemented" function (:arguments ("type" "xrefs")) nil [188256 188468])
            ("slime-xref-type" function (:arguments ("type")) nil [188470 188548])
            ("slime-xrefs" function (:arguments ("types" "symbol" "continuation")) nil [188550 189166])
            ("slime-xref-location-at-point" function nil nil [189193 189506])
            ("slime-xref-dspec-at-point" function nil nil [189508 189753])
            ("slime-all-xrefs" function nil nil [189755 190166])
            ("slime-goto-xref" function (:user-visible-flag t) nil [190168 190307])
            ("slime-show-xref" function (:user-visible-flag t) nil [190309 190496])
            ("slime-goto-next-xref" function (:arguments ("backward")) nil [190498 191425])
            ("slime-goto-previous-xref" function nil nil [191427 191537])
            ("slime-search-property" function (:arguments ("prop" "backward" "prop-value-fn")) nil [191539 192423])
            ("slime-next-location" function (:user-visible-flag t) nil [192425 192723])
            ("slime-previous-location" function (:user-visible-flag t) nil [192725 193043])
            ("slime-recompile-xref" function (:arguments ("raw-prefix-arg")) nil [193045 193461])
            ("slime-recompile-all-xrefs" function (:arguments ("raw-prefix-arg")) nil [193463 193992])
            ("slime-xref-recompilation-cont" function (:arguments ("results" "dspecs" "buffer")) nil [193994 194656])
            ("slime-aggregate-compilation-results" function (:arguments ("results")) nil [194658 194937])
            ("slime-xref-insert-recompilation-flags" function (:arguments ("dspecs" "compilation-results")) nil [194939 195791])
            ("define-minor-mode" code nil nil [195816 195965])
            ("macrolet" code nil nil [195967 196500])
            ("slime-macroexpand-undo" function (:arguments ("arg")) nil [196502 196943])
            ("slime-eval-macroexpand-expression" variable nil nil [196945 197097])
            ("slime-eval-macroexpand" function (:arguments ("expander" "string")) nil [197099 197396])
            ("slime-macroexpand-again" function (:user-visible-flag t) nil [197398 197670])
            ("slime-initialize-macroexpansion-buffer" function (:arguments ("expansion" "buffer")) nil [197672 198140])
            ("slime-create-macroexpansion-buffer" function nil nil [198142 198491])
            ("slime-eval-macroexpand-inplace" function
               (:user-visible-flag t
                :arguments ("expander"))
                nil [198493 199474])
            ("slime-macroexpand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [199476 199797])
            ("slime-macroexpand-1-inplace" function (:arguments ("repeatedly")) nil [199799 199983])
            ("slime-macroexpand-all" function (:user-visible-flag t) nil [199985 200147])
            ("slime-macroexpand-all-inplace" function (:user-visible-flag t) nil [200149 200327])
            ("slime-compiler-macroexpand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [200329 200597])
            ("slime-compiler-macroexpand-1-inplace" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [200599 200883])
            ("slime-expand-1" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [200885 201205])
            ("slime-expand-1-inplace" function
               (:user-visible-flag t
                :arguments ("repeatedly"))
                nil [201207 201543])
            ("slime-format-string-expand" function (:user-visible-flag t) nil [201545 201772])
            ("slime-interrupt" function (:user-visible-flag t) nil [201801 202004])
            ("slime-quit" function nil nil [202006 202097])
            ("slime-quit-lisp" function
               (:user-visible-flag t
                :arguments ("kill"))
                nil [202099 202298])
            ("slime-quit-lisp-internal" function (:arguments ("connection" "sentinel" "kill")) nil [202300 202757])
            ("slime-quit-sentinel" function (:arguments ("process" "_message")) nil [202759 203139])
            ("sldb-hook" variable nil nil [203166 203227])
            ("sldb-initial-restart-limit" variable (:default-value 6) nil [203229 203364])
            ("slime-make-variables-buffer-local" function (:arguments ("variables")) nil [203431 203540])
            ("slime-make-variables-buffer-local" code nil nil [203542 204139])
            ("in-sldb-face" function (:arguments ("name" "string")) nil [204237 204506])
            ("put" code nil nil [204508 204551])
            ("sldb-mode-syntax-table" variable (:default-value (let ((table (copy-syntax-table lisp-mode-syntax-table))) (modify-syntax-entry 60 "(" table) (modify-syntax-entry 62 ")" table) table)) nil [204572 205166])
            ("define-derived-mode" code nil nil [205168 206953])
            ("set-keymap-parent" code nil nil [206955 207005])
            ("slime-define-keys" code nil nil [207007 208148])
            ("dotimes" code nil nil [208207 208549])
            ("sldb-buffers" function (:arguments ("connection")) nil [208590 208963])
            ("sldb-find-buffer" function (:arguments ("thread" "connection")) nil [208965 209299])
            ("sldb-get-default-buffer" function nil nil [209301 209425])
            ("sldb-get-buffer" function (:arguments ("thread" "connection")) nil [209427 209895])
            ("sldb-debugged-continuations" function (:arguments ("connection")) nil [209897 210209])
            ("sldb-setup" function (:arguments ("thread" "level" "condition" "restarts" "frames" "conts")) nil [210211 212135])
            ("sldb-activate" function (:arguments ("thread" "level" "select")) nil [212137 212561])
            ("sldb-reinitialize" function (:arguments ("thread" "level")) nil [212563 212761])
            ("sldb-exit" function (:arguments ("thread" "_level" "stepping")) nil [212763 213112])
            ("sldb-close-step-buffer" function (:arguments ("buffer")) nil [213114 213284])
            ("sldb-insert-condition" function (:arguments ("condition")) nil [213318 213808])
            ("sldb-extras-hooks" variable nil nil [213810 213836])
            ("sldb-dispatch-extras" function (:arguments ("extras")) nil [213838 214183])
            ("sldb-insert-restarts" function (:arguments ("restarts" "start" "count")) nil [214185 215139])
            ("sldb-insert-more-restarts" function (:arguments ("restarts" "position" "start")) nil [215141 215355])
            ("sldb-frame.string" function (:arguments ("frame")) nil [215357 215443])
            ("sldb-frame.number" function (:arguments ("frame")) nil [215445 215527])
            ("sldb-frame.plist" function (:arguments ("frame")) nil [215529 215618])
            ("sldb-frame-restartable-p" function (:arguments ("frame")) nil [215620 215720])
            ("sldb-prune-initial-frames" function (:arguments ("frames")) nil [215722 216119])
            ("sldb-insert-frames" function (:arguments ("frames" "more")) nil [216121 216663])
            ("sldb-compute-frame-face" function (:arguments ("frame")) nil [216665 216812])
            ("sldb-insert-frame" function (:arguments ("frame" "face")) nil [216814 217445])
            ("sldb-fetch-more-frames" function (:arguments ("_")) nil [217447 218143])
            ("sldb-restart-at-point" function nil nil [218181 218293])
            ("sldb-frame-number-at-point" function nil nil [218295 218451])
            ("sldb-var-number-at-point" function nil nil [218453 218596])
            ("sldb-previous-frame-number" function nil nil [218598 218713])
            ("sldb-frame-details-visible-p" function nil nil [218715 218851])
            ("sldb-frame-region" function nil nil [218853 218914])
            ("sldb-forward-frame" function nil nil [218916 219009])
            ("sldb-backward-frame" function nil nil [219011 219346])
            ("sldb-goto-last-frame" function nil nil [219348 219652])
            ("sldb-beginning-of-backtrace" function (:user-visible-flag t) nil [219654 219776])
            ("slime-show-buffer-position" function (:arguments ("position" "recenter")) nil [219860 220359])
            ("sldb-recenter-region" function (:arguments ("start" "end" "center")) nil [220361 221520])
            ("slime-save-coordinates" function (:arguments ("origin" "body")) nil [221568 222177])
            ("put" code nil nil [222179 222232])
            ("slime-coordinates" function (:arguments ("origin")) nil [222234 222526])
            ("slime-restore-coordinate" function (:arguments ("base" "goal" "limit")) nil [222528 222929])
            ("slime-count-lines" function (:arguments ("start" "end")) nil [222931 223151])
            ("sldb-default-action" function (:user-visible-flag t) nil [223176 223343])
            ("sldb-default-action/mouse" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [223345 223643])
            ("sldb-cycle" function (:user-visible-flag t) nil [223645 224022])
            ("sldb-end-of-backtrace" function (:user-visible-flag t) nil [224024 224180])
            ("sldb-fetch-all-frames" function nil nil [224182 224601])
            ("sldb-show-source" function (:user-visible-flag t) nil [224630 224800])
            ("sldb-show-frame-source" function (:arguments ("frame-number")) nil [224802 225122])
            ("slime-show-source-location" function (:arguments ("source-location" "no-highlight-p")) nil [225124 225414])
            ("slime-highlight-sexp" function (:arguments ("start" "end")) nil [225416 225652])
            ("slime-highlight-line" function (:arguments ("timeout")) nil [225654 225850])
            ("sldb-toggle-details" function
               (:user-visible-flag t
                :arguments ("on"))
                nil [225882 226277])
            ("sldb-show-frame-details" function nil nil [226279 227479])
            ("sldb-frame-details" function nil nil [227481 227819])
            ("sldb-insert-frame-variable-value-function" variable (:default-value (quote sldb-insert-frame-variable-value)) nil [227821 227908])
            ("sldb-insert-locals" function (:arguments ("vars" "prefix" "frame")) nil [227910 228597])
            ("sldb-insert-frame-variable-value" function (:arguments ("value" "_frame" "_index")) nil [228599 228705])
            ("sldb-hide-frame-details" function nil nil [228707 229089])
            ("sldb-disassemble" function (:user-visible-flag t) nil [229091 229364])
            ("sldb-eval-in-frame" function
               (:user-visible-flag t
                :arguments ("frame" "string" "package"))
                nil [229398 229745])
            ("sldb-pprint-eval-in-frame" function
               (:user-visible-flag t
                :arguments ("frame" "string" "package"))
                nil [229747 230100])
            ("sldb-read-form-for-frame" function (:arguments ("fstring")) nil [230102 230393])
            ("sldb-inspect-in-frame" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [230395 230810])
            ("sldb-inspect-var" function nil nil [230812 231034])
            ("sldb-inspect-condition" function (:user-visible-flag t) nil [231036 231227])
            ("sldb-print-condition" function nil nil [231229 231330])
            ("sldb-down" function (:user-visible-flag t) nil [231356 231438])
            ("sldb-up" function (:user-visible-flag t) nil [231440 231628])
            ("sldb-sugar-move" function (:arguments ("move-fn")) nil [231630 231836])
            ("sldb-details-up" function (:user-visible-flag t) nil [231838 231953])
            ("sldb-details-down" function (:user-visible-flag t) nil [231955 232070])
            ("sldb-quit" function (:user-visible-flag t) nil [232096 232337])
            ("sldb-continue" function (:user-visible-flag t) nil [232339 232624])
            ("sldb-abort" function (:user-visible-flag t) nil [232626 232806])
            ("sldb-invoke-restart" function
               (:user-visible-flag t
                :arguments ("number"))
                nil [232808 233231])
            ("sldb-invoke-restart-by-name" function (:arguments ("restart-name")) nil [233233 233649])
            ("sldb-break-with-default-debugger" function
               (:user-visible-flag t
                :arguments ("dont-unwind"))
                nil [233651 233922])
            ("sldb-break-with-system-debugger" function
               (:user-visible-flag t
                :arguments ("lightweight"))
                nil [233924 234097])
            ("slime-attach-gdb" function
               (:user-visible-flag t
                :arguments ("connection" "lightweight"))
                nil [234099 235287])
            ("slime-read-connection" function (:arguments ("prompt" "initial-value")) nil [235289 235913])
            ("sldb-step" function (:user-visible-flag t) nil [235915 236086])
            ("sldb-next" function (:user-visible-flag t) nil [236088 236240])
            ("sldb-out" function (:user-visible-flag t) nil [236242 236428])
            ("sldb-break-on-return" function (:user-visible-flag t) nil [236430 236729])
            ("sldb-break" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [236731 236976])
            ("sldb-return-from-frame" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [236978 237407])
            ("sldb-restart-frame" function (:user-visible-flag t) nil [237409 237722])
            ("slime-toggle-break-on-signals" function (:user-visible-flag t) nil [237724 237916])
            ("sldb-recompile-frame-source" function (:arguments ("raw-prefix-arg")) nil [237956 238461])
            ("slime-threads-buffer-name" variable (:default-value (slime-buffer-name :threads)) nil [238492 238555])
            ("slime-threads-buffer-timer" variable nil nil [238556 238595])
            ("slime-threads-update-interval" variable nil nil [238597 238790])
            ("slime-list-threads" function (:user-visible-flag t) nil [238792 239513])
            ("slime-quit-threads-buffer" function nil nil [239515 239713])
            ("slime-update-threads-buffer" function nil nil [239715 239893])
            ("slime-move-point" function (:arguments ("position")) nil [239895 240152])
            ("slime-display-threads" function (:arguments ("threads")) nil [240154 240756])
            ("slime-transpose-lists" function (:arguments ("list-of-lists")) nil [240758 240989])
            ("slime-insert-table-row" function (:arguments ("line" "line-props" "col-props" "col-widths")) nil [240991 241308])
            ("slime-insert-table" function (:arguments ("rows" "header" "row-properties" "column-properties")) nil [241310 242206])
            ("slime-threads-table-properties" variable (:default-value (quote (nil (face bold)))) nil [242208 242268])
            ("slime-insert-threads" function (:arguments ("threads")) nil [242270 242972])
            ("define-derived-mode" code nil nil [242994 243282])
            ("slime-define-keys" code nil nil [243284 243454])
            ("slime-thread-kill" function nil nil [243456 243664])
            ("slime-get-region-properties" function (:arguments ("prop" "start" "end")) nil [243666 244018])
            ("slime-get-properties" function (:arguments ("prop")) nil [244020 244319])
            ("slime-thread-attach" function nil nil [244321 244570])
            ("slime-thread-debug" function nil nil [244572 244727])
            ("define-derived-mode" code nil nil [244757 245024])
            ("slime-define-keys" code nil nil [245026 245273])
            ("slime-connection-at-point" function nil nil [245275 245403])
            ("slime-quit-connection-at-point" function (:arguments ("connection")) nil [245405 245888])
            ("slime-restart-connection-at-point" function (:arguments ("connection")) nil [245890 246081])
            ("slime-connection-list-make-default" function (:user-visible-flag t) nil [246085 246292])
            ("slime-connections-buffer-name" variable (:default-value (slime-buffer-name :connections)) nil [246294 246365])
            ("slime-list-connections" function (:user-visible-flag t) nil [246367 246610])
            ("slime-update-connection-list" function (:user-visible-flag t) nil [246612 246825])
            ("slime-draw-connection-list" function nil nil [246827 247621])
            ("slime-inspector" customgroup (:user-visible-flag t) nil [247641 247737])
            ("slime-inspector-topline-face" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [247739 247856])
            ("slime-inspector-label-face" variable
               (:default-value (quote ((t (:inherit font-lock-constant-face))))
                :type "face")
                nil [247858 248002])
            ("slime-inspector-value-face" variable
               (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-builtin-face)))) (quote ((((background light)) (:foreground "MediumBlue" :bold t)) (((background dark)) (:foreground "LightGray" :bold t)))))
                :type "face")
                nil [248004 248338])
            ("slime-inspector-action-face" variable
               (:default-value (if (slime-face-inheritance-possible-p) (quote ((t (:inherit font-lock-warning-face)))) (quote ((t (:foreground "OrangeRed")))))
                :type "face")
                nil [248340 248572])
            ("slime-inspector-type-face" variable
               (:default-value (quote ((t (:inherit font-lock-type-face))))
                :type "face")
                nil [248574 248721])
            ("slime-inspector-mark-stack" variable (:default-value (quote nil)) nil [248723 248762])
            ("slime-saved-window-config" variable nil nil [248763 248797])
            ("slime-inspect" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [248799 249068])
            ("define-derived-mode" code nil nil [249070 249316])
            ("slime-inspector-buffer" function nil nil [249318 249827])
            ("slime-inspector-fontify" function (:arguments ("face" "string")) nil [249829 249956])
            ("slime-inspector-insert-ispec-function" variable (:default-value (quote slime-inspector-insert-ispec)) nil [249958 250034])
            ("slime-open-inspector" function (:arguments ("inspected-parts" "point" "hook")) nil [250036 251344])
            ("slime-inspector-limit" variable (:default-value 500) nil [251346 251380])
            ("slime-inspector-insert-content" function (:arguments ("content")) nil [251382 251581])
            ("slime-inspector-insert-chunk" function (:arguments ("chunk" "prev" "next")) nil [251583 251994])
            ("slime-inspector-insert-ispec" function (:arguments ("ispec")) nil [251996 252679])
            ("slime-inspector-position" function nil nil [252681 253054])
            ("slime-inspector-property-at-point" function nil nil [253056 253554])
            ("slime-inspector-operate-on-point" function (:user-visible-flag t) nil [253556 254750])
            ("slime-inspector-operate-on-click" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [254752 255278])
            ("slime-inspector-pop" function (:user-visible-flag t) nil [255280 255576])
            ("slime-inspector-next" function (:user-visible-flag t) nil [255578 255892])
            ("slime-inspector-quit" function (:user-visible-flag t) nil [255896 256117])
            ("slime-find-inspectable-object" function (:arguments ("direction" "limit")) nil [256215 257033])
            ("slime-inspector-next-inspectable-object" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [257035 258450])
            ("slime-inspector-previous-inspectable-object" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [258452 258717])
            ("slime-inspector-describe" function nil nil [258721 258824])
            ("slime-inspector-pprint" function (:arguments ("part")) nil [258826 259051])
            ("slime-inspector-eval" function
               (:user-visible-flag t
                :arguments ("string"))
                nil [259053 259287])
            ("slime-inspector-history" function (:user-visible-flag t) nil [259289 259433])
            ("slime-inspector-show-source" function (:arguments ("part")) nil [259435 259721])
            ("slime-inspector-reinspect" function nil nil [259725 259996])
            ("slime-inspector-toggle-verbose" function nil nil [259998 260279])
            ("slime-inspector-insert-more-button" function (:arguments ("index" "previous")) nil [260281 260545])
            ("slime-inspector-fetch-all" function (:user-visible-flag t) nil [260547 260847])
            ("slime-inspector-fetch-more" function (:arguments ("button")) nil [260849 261253])
            ("slime-inspector-fetch-chunk" function (:arguments ("chunk" "prev" "cont")) nil [261255 261372])
            ("slime-inspector-fetch" function (:arguments ("chunk" "limit" "prev" "cont")) nil [261374 261933])
            ("slime-inspector-next-range" function (:arguments ("chunk" "limit" "prev")) nil [261935 262376])
            ("slime-inspector-join-chunks" function (:arguments ("chunk1" "chunk2")) nil [262378 262698])
            ("set-keymap-parent" code nil nil [262700 262761])
            ("slime-define-keys" code nil nil [262763 263536])
            ("slime-selector-methods" variable nil nil [263562 263780])
            ("slime-selector-other-window" variable nil nil [263782 263872])
            ("slime-selector" function
               (:user-visible-flag t
                :arguments ("other-window"))
                nil [263874 264765])
            ("def-slime-selector-method" function (:arguments ("key" "description" "body")) nil [264767 265936])
            ("def-slime-selector-method" code nil nil [265938 266365])
            ("pushnew" code nil nil [266367 266485])
            ("def-slime-selector-method" code nil nil [266487 266540])
            ("def-slime-selector-method" code nil nil [266542 266734])
            ("def-slime-selector-method" code nil nil [266736 266819])
            ("def-slime-selector-method" code nil nil [266821 266940])
            ("def-slime-selector-method" code nil nil [266942 267086])
            ("def-slime-selector-method" code nil nil [267088 267219])
            ("def-slime-selector-method" code nil nil [267221 267340])
            ("def-slime-selector-method" code nil nil [267342 267540])
            ("def-slime-selector-method" code nil nil [267542 267649])
            ("slime-recently-visited-buffer" function (:arguments ("mode")) nil [267651 268135])
            ("slime-update-indentation" function (:user-visible-flag t) nil [268157 268335])
            ("slime-indentation-update-hooks" variable nil nil [268337 268376])
            ("slime-intern-indentation-spec" function (:arguments ("spec")) nil [268378 268637])
            ("slime-handle-indentation-update" function (:arguments ("alist")) nil [268784 269789])
            ("slime-required-modules" variable (:default-value (quote nil)) nil [269815 269850])
            ("slime-require" function (:arguments ("module")) nil [269852 269979])
            ("slime-load-contribs" function nil nil [269981 270537])
            ("slime-contrib" type
               (:members ("name" "slime-dependencies" "swank-dependencies" "enable" "disable" "authors" "license")
                :type "struct")
                nil [270539 270652])
            ("define-slime-contrib" function (:arguments ("name" "_docstring" "clauses")) nil [270654 271956])
            ("put" code nil nil [271958 272009])
            ("put" code nil nil [272010 272068])
            ("slime-all-contribs" function nil nil [272070 272221])
            ("slime-find-contrib" function (:arguments ("name")) nil [272223 272285])
            ("slime-read-contrib-name" function nil nil [272287 272498])
            ("slime-enable-contrib" function (:arguments ("name")) nil [272502 272720])
            ("slime-disable-contrib" function (:arguments ("name")) nil [272722 272942])
            ("slime-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLIME" ["Edit Definition..." slime-edit-definition (\, C)] ["Return From Definition" slime-pop-find-definition-stack (\, C)] ["Complete Symbol" slime-complete-symbol (\, C)] "--" ("Evaluation" ["Eval Defun" slime-eval-defun (\, C)] ["Eval Last Expression" slime-eval-last-expression (\, C)] ["Eval And Pretty-Print" slime-pprint-eval-last-expression (\, C)] ["Eval Region" slime-eval-region (\, C)] ["Eval Region And Pretty-Print" slime-pprint-eval-region (\, C)] ["Interactive Eval..." slime-interactive-eval (\, C)] ["Edit Lisp Value..." slime-edit-value (\, C)] ["Call Defun" slime-call-defun (\, C)]) ("Debugging" ["Macroexpand Once..." slime-macroexpand-1 (\, C)] ["Macroexpand All..." slime-macroexpand-all (\, C)] ["Create Trace Buffer" slime-redirect-trace-output (\, C)] ["Toggle Trace..." slime-toggle-trace-fdefinition (\, C)] ["Untrace All" slime-untrace-all (\, C)] ["Disassemble..." slime-disassemble-symbol (\, C)] ["Inspect..." slime-inspect (\, C)]) ("Compilation" ["Compile Defun" slime-compile-defun (\, C)] ["Compile/Load File" slime-compile-and-load-file (\, C)] ["Compile File" slime-compile-file (\, C)] ["Compile Region" slime-compile-region (\, C)] "--" ["Next Note" slime-next-note t] ["Previous Note" slime-previous-note t] ["Remove Notes" slime-remove-notes t] ["List Notes" slime-list-compiler-notes (\, C)]) ("Cross Reference" ["Who Calls..." slime-who-calls (\, C)] ["Who References... " slime-who-references (\, C)] ["Who Sets..." slime-who-sets (\, C)] ["Who Binds..." slime-who-binds (\, C)] ["Who Macroexpands..." slime-who-macroexpands (\, C)] ["Who Specializes..." slime-who-specializes (\, C)] ["List Callers..." slime-list-callers (\, C)] ["List Callees..." slime-list-callees (\, C)] ["Next Location" slime-next-location t]) ("Editing" ["Check Parens" check-parens t] ["Update Indentation" slime-update-indentation (\, C)] ["Select Buffer" slime-selector t]) ("Profiling" ["Toggle Profiling..." slime-toggle-profile-fdefinition (\, C)] ["Profile Package" slime-profile-package (\, C)] ["Profile by Substring" slime-profile-by-substring (\, C)] ["Unprofile All" slime-unprofile-all (\, C)] ["Show Profiled" slime-profiled-functions (\, C)] "--" ["Report" slime-profile-report (\, C)] ["Reset Counters" slime-profile-reset (\, C)]) ("Documentation" ["Describe Symbol..." slime-describe-symbol (\, C)] ["Lookup Documentation..." slime-documentation-lookup t] ["Apropos..." slime-apropos (\, C)] ["Apropos all..." slime-apropos-all (\, C)] ["Apropos Package..." slime-apropos-package (\, C)] ["Hyperspec..." slime-hyperspec-lookup t]) "--" ["Interrupt Command" slime-interrupt (\, C)] ["Abort Async. Command" slime-quit (\, C)] ["Sync Package & Directory" slime-sync-package-and-default-directory (\, C)])))) nil [272970 276566])
            ("slime-sldb-easy-menu" variable (:default-value (let ((C (quote (slime-connected-p)))) (\` ("SLDB" ["Next Frame" sldb-down t] ["Previous Frame" sldb-up t] ["Toggle Frame Details" sldb-toggle-details t] ["Next Frame (Details)" sldb-details-down t] ["Previous Frame (Details)" sldb-details-up t] "--" ["Eval Expression..." slime-interactive-eval (\, C)] ["Eval in Frame..." sldb-eval-in-frame (\, C)] ["Eval in Frame (pretty print)..." sldb-pprint-eval-in-frame (\, C)] ["Inspect In Frame..." sldb-inspect-in-frame (\, C)] ["Inspect Condition Object" sldb-inspect-condition (\, C)] "--" ["Restart Frame" sldb-restart-frame (\, C)] ["Return from Frame..." sldb-return-from-frame (\, C)] ("Invoke Restart" ["Continue" sldb-continue (\, C)] ["Abort" sldb-abort (\, C)] ["Step" sldb-step (\, C)] ["Step next" sldb-next (\, C)] ["Step out" sldb-out (\, C)]) "--" ["Quit (throw)" sldb-quit (\, C)] ["Break With Default Debugger" sldb-break-with-default-debugger (\, C)])))) nil [276568 277651])
            ("easy-menu-define" code nil nil [277653 277724])
            ("slime-add-easy-menu" function nil nil [277726 277806])
            ("add-hook" code nil nil [277808 277856])
            ("slime-sldb-add-easy-menu" function nil nil [277858 278034])
            ("add-hook" code nil nil [278036 278088])
            ("slime-cheat-sheet-table" variable (:default-value (quote ((:title "Editing lisp code" :map slime-mode-map :bindings ((slime-eval-defun "Evaluate current top level form") (slime-compile-defun "Compile current top level form") (slime-interactive-eval "Prompt for form and eval it") (slime-compile-and-load-file "Compile and load current file") (slime-sync-package-and-default-directory "Synch default package and directory with current buffer") (slime-next-note "Next compiler note") (slime-previous-note "Previous compiler note") (slime-remove-notes "Remove notes") slime-documentation-lookup)) (:title "Completion" :map slime-mode-map :bindings (slime-indent-and-complete-symbol slime-fuzzy-complete-symbol)) (:title "Within SLDB buffers" :map sldb-mode-map :bindings ((sldb-default-action "Do 'whatever' with thing at point") (sldb-toggle-details "Toggle frame details visualization") (sldb-quit "Quit to REPL") (sldb-abort "Invoke ABORT restart") (sldb-continue "Invoke CONTINUE restart (if available)") (sldb-show-source "Jump to frame's source code") (sldb-eval-in-frame "Evaluate in frame at point") (sldb-inspect-in-frame "Evaluate in frame at point and inspect result"))) (:title "Within the Inspector" :map slime-inspector-mode-map :bindings ((slime-inspector-next-inspectable-object "Jump to next inspectable object") (slime-inspector-operate-on-point "Inspect object or execute action at point") (slime-inspector-reinspect "Reinspect current object") (slime-inspector-pop "Return to previous object") (slime-inspector-toggle-verbose "Toggle verbose mode") (slime-inspector-quit "Quit"))) (:title "Finding Definitions" :map slime-mode-map :bindings (slime-edit-definition slime-pop-find-definition-stack))))) nil [278110 280373])
            ("slime-cheat-sheet" function nil nil [280375 282399])
            ("slime-test" type
               (:members ("name" "fname" "args" "doc" "inputs" "fails-for" "style")
                :type "struct")
                nil [282420 282514])
            ("slime-tests" variable (:default-value (quote nil)) nil [282518 282571])
            ("slime-test-debug-on-error" variable (:user-visible-flag t) nil [282573 282657])
            ("slime-total-tests" variable nil nil [282659 282743])
            ("slime-failed-tests" variable nil nil [282745 282828])
            ("slime-skipped-tests" variable nil nil [282830 282915])
            ("slime-expected-failures" variable nil nil [282917 283009])
            ("slime-test-buffer-name" variable (:default-value "*Tests*") nil [283011 283109])
            ("slime-lisp-under-test" variable nil nil [283111 283197])
            ("slime-randomize-test-order" variable
               (:user-visible-flag t
                :default-value t)
                nil [283199 283319])
            ("slime-current-test" variable nil nil [283363 283390])
            ("slime-unexpected-failures" variable nil nil [283391 283425])
            ("slime-unexpected-passes" variable nil nil [283426 283458])
            ("slime-run-tests" function (:user-visible-flag t) nil [283486 284316])
            ("slime-run-test" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [284318 284623])
            ("slime-toggle-test-debug-on-error" function nil nil [284625 284864])
            ("slime-read-test-name" function nil nil [284866 285095])
            ("slime-test-should-fail-p" function nil nil [285097 285207])
            ("slime-shuffle-list" function (:arguments ("list")) nil [285209 285588])
            ("slime-execute-tests" function nil nil [285590 289187])
            ("slime-batch-test" function (:arguments ("results-file" "test-name" "randomize")) nil [289189 290358])
            ("slime-create-test-results-buffer" function nil nil [290404 290799])
            ("slime-delete-hidden-outline-text" function nil nil [290801 291250])
            ("slime-test-heading" function (:arguments ("level" "format" "args")) nil [291252 291597])
            ("slime-test-failure" function (:arguments ("keyword" "string")) nil [291599 292061])
            ("slime-test-message" function (:arguments ("string")) nil [292063 292240])
            ("def-slime-test" function (:arguments ("name" "args" "doc" "inputs" "body")) nil [292282 293943])
            ("put" code nil nil [293945 293990])
            ("slime-check" function (:arguments ("test-name" "body")) nil [293992 295030])
            ("slime-print-check-ok" function (:arguments ("test-name")) nil [295032 295121])
            ("slime-print-check-xpass" function (:arguments ("test-name")) nil [295123 295218])
            ("slime-print-check-failed" function (:arguments ("test-name")) nil [295220 295306])
            ("slime-print-check-xfailed" function (:arguments ("test-name")) nil [295308 295396])
            ("slime-print-check-error" function (:arguments ("reason")) nil [295398 295490])
            ("slime-print-check-xerror" function (:arguments ("reason")) nil [295492 295586])
            ("put" code nil nil [295588 295630])
            ("setq" code nil nil [295687 295709])
            ("slime-check-top-level" function nil nil [295711 295902])
            ("slime-at-top-level-p" function nil nil [295904 296015])
            ("slime-wait-condition" function (:arguments ("name" "predicate" "timeout")) nil [296017 296611])
            ("slime-sync-to-top-level" function (:arguments ("timeout")) nil [296613 296722])
            ("slime-check-sldb-level" function (:arguments ("expected")) nil [296748 297038])
            ("slime-test-expect" function (:arguments ("name" "expected" "actual" "test")) nil [297040 297382])
            ("sldb-level" function nil nil [297384 297499])
            ("slime-sldb-level=" function (:arguments ("level")) nil [297501 297563])
            ("slime-test-symbols" variable (:default-value (quote (("foobar") ("foo@bar") ("@foobar") ("foobar@") ("\\@foobar") ("|asdf||foo||bar|") ("\\#<Foo@Bar>") ("\\(setf\\ car\\)")))) nil [297565 297729])
            ("slime-check-symbol-at-point" function (:arguments ("prefix" "symbol" "suffix")) nil [297731 298303])
            ("def-slime-test" code nil nil [298305 298472])
            ("def-slime-test" code nil nil [298474 298626])
            ("def-slime-test" code nil nil [298628 298819])
            ("def-slime-test" code nil nil [298821 298964])
            ("def-slime-test" code nil nil [298966 299107])
            ("def-slime-test" code nil nil [299109 299250])
            ("def-slime-test" code nil nil [299252 299417])
            ("def-slime-test" code nil nil [299572 299726])
            ("def-slime-test" code nil nil [299728 299889])
            ("def-slime-test" code nil nil [299891 300050])
            ("def-slime-test" code nil nil [300052 300205])
            ("def-slime-test" code nil nil [300207 300373])
            ("def-slime-test" code nil nil [300375 300539])
            ("def-slime-test" code nil nil [300541 300676])
            ("def-slime-test" code nil nil [300678 300813])
            ("def-slime-test" code nil nil [300816 301271])
            ("def-slime-test" code nil nil [301273 303452])
            ("def-slime-test" code nil nil [303454 304678])
            ("def-slime-test" code nil nil [304680 305664])
            ("def-slime-test" code nil nil [305666 306694])
            ("def-slime-test" code nil nil [306696 307620])
            ("def-slime-test" code nil nil [307622 309135])
            ("def-slime-test" code nil nil [309137 310736])
            ("def-slime-test" code nil nil [310738 311533])
            ("def-slime-test" code nil nil [311535 313932])
            ("def-slime-test" code nil nil [313934 314931])
            ("def-slime-test" code nil nil [314933 316353])
            ("sldb-first-abort-restart" function nil nil [316355 316497])
            ("def-slime-test" code nil nil [316499 316974])
            ("def-slime-test" code nil nil [316976 317838])
            ("def-slime-test" code nil nil [317841 318502])
            ("def-slime-test" code nil nil [318504 319436])
            ("def-slime-test" code nil nil [319438 320219])
            ("def-slime-test" code nil nil [320221 320864])
            ("def-slime-test" code nil nil [320866 321541])
            ("slime-buffer-visible-p" function (:arguments ("name")) nil [321543 321678])
            ("slime-inspector-visible-p" function nil nil [321680 321774])
            ("slime-execute-as-command" function (:arguments ("name")) nil [321776 322012])
            ("def-slime-test" code nil nil [322014 323869])
            ("slime-test-macroexpansion=" function (:arguments ("string1" "string2")) nil [323871 324085])
            ("def-slime-test" code nil nil [324087 324921])
            ("def-slime-test" code nil nil [324923 325950])
            ("def-slime-test" code nil nil [325952 326336])
            ("def-slime-test" code nil nil [326338 327263])
            ("def-slime-test" code nil nil [327265 328092])
            ("def-slime-test" code nil nil [328094 328641])
            ("def-slime-test" code nil nil [328643 329820])
            ("def-slime-test" code nil nil [329822 330523])
            ("def-slime-test" code nil nil [330525 330970])
            ("def-slime-test" code nil nil [330972 332068])
            ("def-slime-test" code nil nil [332070 333243])
            ("slime-map-alist" function (:arguments ("car-fn" "cdr-fn" "alist")) nil [333368 333636])
            ("slime-intersperse" function (:arguments ("element" "list")) nil [333662 333868])
            ("slime-group-similar" function (:arguments ("similar-p" "list")) nil [333975 334473])
            ("slime-alistify" function (:arguments ("list" "key" "test")) nil [334475 334960])
            ("slime-length=" function (:arguments ("seq" "n")) nil [334975 335229])
            ("slime-length>" function (:arguments ("seq" "n")) nil [335231 335369])
            ("slime-trim-whitespace" function (:arguments ("str")) nil [335371 335498])
            ("slime-buffer-narrowed-p" function (:arguments ("buffer")) nil [335522 335831])
            ("slime-column-max" function nil nil [335833 336053])
            ("slime-cl-symbol-name" function (:arguments ("symbol")) nil [336092 336411])
            ("slime-cl-symbol-package" function (:arguments ("symbol" "default")) nil [336413 336611])
            ("slime-qualify-cl-symbol-name" function (:arguments ("symbol-or-name")) nil [336613 337312])
            ("slime-point-moves-p" function (:arguments ("body")) nil [337379 337630])
            ("put" code nil nil [337632 337682])
            ("slime-forward-sexp" function (:arguments ("count")) nil [337684 337897])
            ("slime-reader-conditionals-regexp" variable
               (:constant-flag t
                :default-value (regexp-opt (quote ("#+" "#-" "#!+" "#!-"))))
                nil [337899 338096])
            ("slime-forward-reader-conditional" function nil nil [338099 338714])
            ("slime-forward-cruft" function nil nil [338716 339008])
            ("slime-keywordify" function (:arguments ("symbol")) nil [339010 339232])
            ("put" code nil nil [339234 339342])
            ("put" code nil nil [339344 339534])
            ("slime-eval-feature-expression" function (:arguments ("e")) nil [339602 340632])
            ("slime-defun-at-point" function nil nil [340687 340847])
            ("slime-region-for-defun-at-point" function nil nil [340849 341094])
            ("slime-beginning-of-symbol" function nil nil [341096 341487])
            ("slime-end-of-symbol" function nil nil [341489 341639])
            ("put" code nil nil [341641 341689])
            ("put" code nil nil [341690 341750])
            ("slime-symbol-start-pos" function nil nil [341752 341967])
            ("slime-symbol-end-pos" function nil nil [341969 342049])
            ("slime-bounds-of-symbol-at-point" function nil nil [342051 342348])
            ("slime-symbol-at-point" function nil nil [342350 342675])
            ("slime-bounds-of-sexp-at-point" function nil nil [342677 343130])
            ("slime-sexp-at-point" function nil nil [343132 343393])
            ("slime-sexp-at-point-or-error" function nil nil [343395 343564])
            ("slime-string-at-point" function nil nil [343566 343769])
            ("slime-string-at-point-or-error" function nil nil [343771 343940])
            ("slime-input-complete-p" function (:arguments ("start" "end")) nil [343942 344581])
            ("when" code nil nil [344611 344657])
            ("slime-emacs-21-p" function nil nil [344659 344753])
            ("when" code nil nil [344864 345236])
            ("slime-split-string" function (:arguments ("string" "separators" "omit-nulls")) nil [345238 345854])
            ("slime-delete-and-extract-region" function (:arguments ("start" "end")) nil [345856 346248])
            ("slime-defun-if-undefined" function (:arguments ("name" "rest")) nil [346250 346499])
            ("put" code nil nil [346501 346556])
            ("put" code nil nil [346557 346619])
            ("slime-defmacro-if-undefined" function (:arguments ("name" "rest")) nil [346690 346804])
            ("put" code nil nil [346806 346864])
            ("put" code nil nil [346865 346930])
            ("slime-accept-process-output-supports-floats" variable (:default-value (ignore-errors (accept-process-output nil 0.0) t)) nil [346932 347037])
            ("slime-accept-process-output" function (:arguments ("process" "timeout")) nil [347039 347553])
            ("slime-unibyte-string" function (:arguments ("bytes")) nil [347555 347719])
            ("slime-pop-to-buffer" function (:arguments ("buffer" "other-window")) nil [347721 348319])
            ("slime-add-local-hook" function (:arguments ("hook" "function" "append")) nil [348321 348496])
            ("slime-run-mode-hooks" function (:arguments ("hooks")) nil [348498 348641])
            ("if" code nil nil [348643 348916])
            ("slime-local-variable-p" function (:arguments ("var" "buffer")) nil [348918 349025])
            ("slime-defun-if-undefined" code nil nil [349036 349121])
            ("if" code nil nil [349123 349308])
            ("slime-defun-if-undefined" code nil nil [349310 350017])
            ("slime-defun-if-undefined" code nil nil [350019 350949])
            ("slime-defun-if-undefined" code nil nil [350951 351169])
            ("slime-defun-if-undefined" code nil nil [351171 351406])
            ("slime-defun-if-undefined" code nil nil [351416 351664])
            ("slime-defun-if-undefined" code nil nil [351666 351982])
            ("slime-defun-if-undefined" code nil nil [351984 352338])
            ("slime-defun-if-undefined" code nil nil [352340 352434])
            ("slime-defun-if-undefined" code nil nil [352436 352869])
            ("slime-defun-if-undefined" code nil nil [352897 353558])
            ("slime-defun-if-undefined" code nil nil [353560 353785])
            ("slime-defun-if-undefined" code nil nil [353787 353984])
            ("slime-defun-if-undefined" code nil nil [353986 354873])
            ("slime-defun-if-undefined" code nil nil [354875 354996])
            ("slime-defun-if-undefined" code nil nil [354998 355107])
            ("slime-defun-if-undefined" code nil nil [355109 356289])
            ("slime-defun-if-undefined" code nil nil [356291 356904])
            ("slime-defun-if-undefined" code nil nil [356906 357058])
            ("slime-defun-if-undefined" code nil nil [357060 357140])
            ("slime-defun-if-undefined" code nil nil [357142 357240])
            ("slime-defun-if-undefined" code nil nil [357258 357454])
            ("unless" code nil nil [357456 357980])
            ("slime-defmacro-if-undefined" code nil nil [357982 358530])
            ("slime-defmacro-if-undefined" code nil nil [358532 358669])
            ("when" code nil nil [358672 358761])
            ("sldb-xemacs-emulate-point-entered-hook" function nil nil [358763 358909])
            ("sldb-xemacs-post-command-hook" function nil nil [358911 359060])
            ("when" code nil nil [359062 359254])
            ("slime-indulge-pretty-colors" function (:arguments ("def-foo-symbol")) nil [359414 359718])
            ("unless" code nil nil [359721 359906])
            ("bytecomp" include nil nil [359928 359947])
            ("let" code nil nil [359948 360670])
            ("slime" package nil nil [360672 360688])
            ("run-hooks" code nil nil [360689 360717]))          
    :file "slime.el"
    :pointmax 360962
    :fsize 360961
    :lastmodtime '(20800 17730 0 0)
    :unmatched-syntax '((close-paren 93026 . 93027) (symbol 92906 . 92922) (open-paren 92905 . 92906) (close-paren 4535 . 4536) (symbol 3921 . 3937) (open-paren 3920 . 3921) (close-paren 3064 . 3065) (symbol 2718 . 2734) (open-paren 2717 . 2718) (close-paren 2344 . 2345) (symbol 2249 . 2265) (open-paren 2248 . 2249) (close-paren 2245 . 2246) (symbol 2130 . 2146) (open-paren 2129 . 2130))
    )
   (semanticdb-table "slime-autoloads.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("unless" code nil nil [319 1303]))          
    :file "slime-autoloads.el"
    :pointmax 1338
    :fsize 1337
    :lastmodtime '(20785 53962 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!drive_c!Users!hyphen!.emacs.d!plugins!slime!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
